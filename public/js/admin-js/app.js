webpackJsonp([2],[
/* 0 */,
/* 1 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Store */
/* unused harmony export install */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return mapState; });
/* unused harmony export mapMutations */
/* unused harmony export mapGetters */
/* unused harmony export mapActions */
/* unused harmony export createNamespacedHelpers */
/**
 * vuex v2.5.0
 * (c) 2017 Evan You
 * @license MIT
 */
var applyMixin = function (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
};

var devtoolHook =
  typeof window !== 'undefined' &&
  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */


/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  this._children = Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors$1 = { namespaced: { configurable: true } };

prototypeAccessors$1.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors$1 );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if (true) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (path, targetModule, newModule) {
  if (true) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if (true) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if (true) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "Store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  var state = options.state; if ( state === void 0 ) state = {};
  if (typeof state === 'function') {
    state = state() || {};
  }

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  if (Vue.config.devtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors = { state: { configurable: true } };

prototypeAccessors.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors.state.set = function (v) {
  if (true) {
    assert(false, "Use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    "development" !== 'production' &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });

  return entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload)
};

Store.prototype.subscribe = function subscribe (fn) {
  return genericSubscribe(fn, this._subscribers)
};

Store.prototype.subscribeAction = function subscribeAction (fn) {
  return genericSubscribe(fn, this._actionSubscribers)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if (true) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors );

function genericSubscribe (fn, subs) {
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    computed[key] = function () { return fn(store); };
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if (true) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if (true) {
      assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if (true) {
    assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if (true) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if ("development" !== 'production' && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if ("development" !== 'production' && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '2.5.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};


/* harmony default export */ __webpack_exports__["a"] = (index_esm);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";function t(){var t={parent:document.body,version:"1.0.12",defaultOkLabel:"Ok",okLabel:"Ok",defaultCancelLabel:"Cancel",cancelLabel:"Cancel",defaultMaxLogItems:2,maxLogItems:2,promptValue:"",promptPlaceholder:"",closeLogOnClick:!1,closeLogOnClickDefault:!1,delay:5e3,defaultDelay:5e3,logContainerClass:"alertify-logs",logContainerDefaultClass:"alertify-logs",dialogs:{buttons:{holder:"<nav>{{buttons}}</nav>",ok:"<button class='ok' tabindex='1'>{{ok}}</button>",cancel:"<button class='cancel' tabindex='2'>{{cancel}}</button>"},input:"<input type='text'>",message:"<p class='msg'>{{message}}</p>",log:"<div class='{{class}}'>{{message}}</div>"},defaultDialogs:{buttons:{holder:"<nav>{{buttons}}</nav>",ok:"<button class='ok' tabindex='1'>{{ok}}</button>",cancel:"<button class='cancel' tabindex='2'>{{cancel}}</button>"},input:"<input type='text'>",message:"<p class='msg'>{{message}}</p>",log:"<div class='{{class}}'>{{message}}</div>"},build:function(t){var e=this.dialogs.buttons.ok,o="<div class='dialog'><div>"+this.dialogs.message.replace("{{message}}",t.message);return"confirm"!==t.type&&"prompt"!==t.type||(e=this.dialogs.buttons.cancel+this.dialogs.buttons.ok),"prompt"===t.type&&(o+=this.dialogs.input),o=(o+this.dialogs.buttons.holder+"</div></div>").replace("{{buttons}}",e).replace("{{ok}}",this.okLabel).replace("{{cancel}}",this.cancelLabel)},setCloseLogOnClick:function(t){this.closeLogOnClick=!!t},close:function(t,e){this.closeLogOnClick&&t.addEventListener("click",function(){o(t)}),e=e&&!isNaN(+e)?+e:this.delay,0>e?o(t):e>0&&setTimeout(function(){o(t)},e)},dialog:function(t,e,o,n){return this.setup({type:e,message:t,onOkay:o,onCancel:n})},log:function(t,e,o){var n=document.querySelectorAll(".alertify-logs > div");if(n){var i=n.length-this.maxLogItems;if(i>=0)for(var a=0,l=i+1;l>a;a++)this.close(n[a],-1)}this.notify(t,e,o)},setLogPosition:function(t){this.logContainerClass="alertify-logs "+t},setupLogContainer:function(){var t=document.querySelector(".alertify-logs"),e=this.logContainerClass;return t||(t=document.createElement("div"),t.className=e,this.parent.appendChild(t)),t.className!==e&&(t.className=e),t},notify:function(e,o,n){var i=this.setupLogContainer(),a=document.createElement("div");a.className=o||"default",t.logTemplateMethod?a.innerHTML=t.logTemplateMethod(e):a.innerHTML=e,"function"==typeof n&&a.addEventListener("click",n),i.appendChild(a),setTimeout(function(){a.className+=" show"},10),this.close(a,this.delay)},setup:function(t){function e(e){"function"!=typeof e&&(e=function(){}),i&&i.addEventListener("click",function(i){t.onOkay&&"function"==typeof t.onOkay&&(l?t.onOkay(l.value,i):t.onOkay(i)),e(l?{buttonClicked:"ok",inputValue:l.value,event:i}:{buttonClicked:"ok",event:i}),o(n)}),a&&a.addEventListener("click",function(i){t.onCancel&&"function"==typeof t.onCancel&&t.onCancel(i),e({buttonClicked:"cancel",event:i}),o(n)}),l&&l.addEventListener("keyup",function(t){13===t.which&&i.click()})}var n=document.createElement("div");n.className="alertify hide",n.innerHTML=this.build(t);var i=n.querySelector(".ok"),a=n.querySelector(".cancel"),l=n.querySelector("input"),s=n.querySelector("label");l&&("string"==typeof this.promptPlaceholder&&(s?s.textContent=this.promptPlaceholder:l.placeholder=this.promptPlaceholder),"string"==typeof this.promptValue&&(l.value=this.promptValue));var r;return"function"==typeof Promise?r=new Promise(e):e(),this.parent.appendChild(n),setTimeout(function(){n.classList.remove("hide"),l&&t.type&&"prompt"===t.type?(l.select(),l.focus()):i&&i.focus()},100),r},okBtn:function(t){return this.okLabel=t,this},setDelay:function(t){return t=t||0,this.delay=isNaN(t)?this.defaultDelay:parseInt(t,10),this},cancelBtn:function(t){return this.cancelLabel=t,this},setMaxLogItems:function(t){this.maxLogItems=parseInt(t||this.defaultMaxLogItems)},theme:function(t){switch(t.toLowerCase()){case"bootstrap":this.dialogs.buttons.ok="<button class='ok btn btn-primary' tabindex='1'>{{ok}}</button>",this.dialogs.buttons.cancel="<button class='cancel btn btn-default' tabindex='2'>{{cancel}}</button>",this.dialogs.input="<input type='text' class='form-control'>";break;case"purecss":this.dialogs.buttons.ok="<button class='ok pure-button' tabindex='1'>{{ok}}</button>",this.dialogs.buttons.cancel="<button class='cancel pure-button' tabindex='2'>{{cancel}}</button>";break;case"mdl":case"material-design-light":this.dialogs.buttons.ok="<button class='ok mdl-button mdl-js-button mdl-js-ripple-effect'  tabindex='1'>{{ok}}</button>",this.dialogs.buttons.cancel="<button class='cancel mdl-button mdl-js-button mdl-js-ripple-effect' tabindex='2'>{{cancel}}</button>",this.dialogs.input="<div class='mdl-textfield mdl-js-textfield'><input class='mdl-textfield__input'><label class='md-textfield__label'></label></div>";break;case"angular-material":this.dialogs.buttons.ok="<button class='ok md-primary md-button' tabindex='1'>{{ok}}</button>",this.dialogs.buttons.cancel="<button class='cancel md-button' tabindex='2'>{{cancel}}</button>",this.dialogs.input="<div layout='column'><md-input-container md-no-float><input type='text'></md-input-container></div>";break;case"default":default:this.dialogs.buttons.ok=this.defaultDialogs.buttons.ok,this.dialogs.buttons.cancel=this.defaultDialogs.buttons.cancel,this.dialogs.input=this.defaultDialogs.input}},reset:function(){this.parent=document.body,this.theme("default"),this.okBtn(this.defaultOkLabel),this.cancelBtn(this.defaultCancelLabel),this.setMaxLogItems(),this.promptValue="",this.promptPlaceholder="",this.delay=this.defaultDelay,this.setCloseLogOnClick(this.closeLogOnClickDefault),this.setLogPosition("bottom left"),this.logTemplateMethod=null},injectCSS:function(){if(!document.querySelector("#alertifyCSS")){var t=document.getElementsByTagName("head")[0],e=document.createElement("style");e.type="text/css",e.id="alertifyCSS",e.innerHTML=".alertify-logs>*{padding:12px 24px;color:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.2);border-radius:1px}.alertify-logs>*,.alertify-logs>.default{background:rgba(0,0,0,.8)}.alertify-logs>.error{background:rgba(244,67,54,.8)}.alertify-logs>.success{background:rgba(76,175,80,.9)}.alertify{position:fixed;background-color:rgba(0,0,0,.3);left:0;right:0;top:0;bottom:0;width:100%;height:100%;z-index:1}.alertify.hide{opacity:0;pointer-events:none}.alertify,.alertify.show{box-sizing:border-box;transition:all .33s cubic-bezier(.25,.8,.25,1)}.alertify,.alertify *{box-sizing:border-box}.alertify .dialog{padding:12px}.alertify .alert,.alertify .dialog{width:100%;margin:0 auto;position:relative;top:50%;transform:translateY(-50%)}.alertify .alert>*,.alertify .dialog>*{width:400px;max-width:95%;margin:0 auto;text-align:center;padding:12px;background:#fff;box-shadow:0 2px 4px -1px rgba(0,0,0,.14),0 4px 5px 0 rgba(0,0,0,.098),0 1px 10px 0 rgba(0,0,0,.084)}.alertify .alert .msg,.alertify .dialog .msg{padding:12px;margin-bottom:12px;margin:0;text-align:left}.alertify .alert input:not(.form-control),.alertify .dialog input:not(.form-control){margin-bottom:15px;width:100%;font-size:100%;padding:12px}.alertify .alert input:not(.form-control):focus,.alertify .dialog input:not(.form-control):focus{outline-offset:-2px}.alertify .alert nav,.alertify .dialog nav{text-align:right}.alertify .alert nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button),.alertify .dialog nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button){background:transparent;box-sizing:border-box;color:rgba(0,0,0,.87);position:relative;outline:0;border:0;display:inline-block;-ms-flex-align:center;-ms-grid-row-align:center;align-items:center;padding:0 6px;margin:6px 8px;line-height:36px;min-height:36px;white-space:nowrap;min-width:88px;text-align:center;text-transform:uppercase;font-size:14px;text-decoration:none;cursor:pointer;border:1px solid transparent;border-radius:2px}.alertify .alert nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):active,.alertify .alert nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):hover,.alertify .dialog nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):active,.alertify .dialog nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):hover{background-color:rgba(0,0,0,.05)}.alertify .alert nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):focus,.alertify .dialog nav button:not(.btn):not(.pure-button):not(.md-button):not(.mdl-button):focus{border:1px solid rgba(0,0,0,.1)}.alertify .alert nav button.btn,.alertify .dialog nav button.btn{margin:6px 4px}.alertify-logs{position:fixed;z-index:1}.alertify-logs.bottom,.alertify-logs:not(.top){bottom:16px}.alertify-logs.left,.alertify-logs:not(.right){left:16px}.alertify-logs.left>*,.alertify-logs:not(.right)>*{float:left;transform:translateZ(0);height:auto}.alertify-logs.left>.show,.alertify-logs:not(.right)>.show{left:0}.alertify-logs.left>*,.alertify-logs.left>.hide,.alertify-logs:not(.right)>*,.alertify-logs:not(.right)>.hide{left:-110%}.alertify-logs.right{right:16px}.alertify-logs.right>*{float:right;transform:translateZ(0)}.alertify-logs.right>.show{right:0;opacity:1}.alertify-logs.right>*,.alertify-logs.right>.hide{right:-110%;opacity:0}.alertify-logs.top{top:0}.alertify-logs>*{box-sizing:border-box;transition:all .4s cubic-bezier(.25,.8,.25,1);position:relative;clear:both;backface-visibility:hidden;perspective:1000;max-height:0;margin:0;padding:0;overflow:hidden;opacity:0;pointer-events:none}.alertify-logs>.show{margin-top:12px;opacity:1;max-height:1000px;padding:12px;pointer-events:auto}",t.insertBefore(e,t.firstChild)}},removeCSS:function(){var t=document.querySelector("#alertifyCSS");t&&t.parentNode&&t.parentNode.removeChild(t)}};return t.injectCSS(),{_$$alertify:t,parent:function(e){t.parent=e},reset:function(){return t.reset(),this},alert:function(e,o,n){return t.dialog(e,"alert",o,n)||this},confirm:function(e,o,n){return t.dialog(e,"confirm",o,n)||this},prompt:function(e,o,n){return t.dialog(e,"prompt",o,n)||this},log:function(e,o){return t.log(e,"default",o),this},theme:function(e){return t.theme(e),this},success:function(e,o){return t.log(e,"success",o),this},error:function(e,o){return t.log(e,"error",o),this},cancelBtn:function(e){return t.cancelBtn(e),this},okBtn:function(e){return t.okBtn(e),this},delay:function(e){return t.setDelay(e),this},placeholder:function(e){return t.promptPlaceholder=e,this},defaultValue:function(e){return t.promptValue=e,this},maxLogItems:function(e){return t.setMaxLogItems(e),this},closeLogOnClick:function(e){return t.setCloseLogOnClick(!!e),this},logPosition:function(e){return t.setLogPosition(e||""),this},setLogTemplate:function(e){return t.logTemplateMethod=e,this},clearLogs:function(){return t.setupLogContainer().innerHTML="",this},version:t.version}}var e=500,o=function(t){if(t){var o=function(){t&&t.parentNode&&t.parentNode.removeChild(t)};t.classList.remove("show"),t.classList.add("hide"),t.addEventListener("transitionend",o),setTimeout(o,e)}};if("undefined"!=typeof module&&module&&module.exports){module.exports=function(){return new t};var n=new t;for(var i in n)module.exports[i]=n[i]}else true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return new t}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):window.alertify=new t}();
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)(module)))

/***/ }),
/* 4 */,
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(474)
}
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = null
/* template */
var __vue_template__ = __webpack_require__(476)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-2dd876c9"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/components/loader.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2dd876c9", Component.options)
  } else {
    hotAPI.reload("data-v-2dd876c9", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(28);
var isBuffer = __webpack_require__(48);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object' && !isArray(obj)) {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 7 */,
/* 8 */,
/* 9 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 10 */,
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_router__ = __webpack_require__(27);


var routes = [{
    name: 'dashboard',
    path: '/',
    component: __webpack_require__(467)
}, {
    name: 'movies-manage',
    path: '/movies/manage',
    component: __webpack_require__(472)
}, {
    name: 'movie-api',
    path: '/movies/new-movie-api',
    component: __webpack_require__(478)
}, {
    name: 'movie-custom',
    path: '/movies/new-movie-custom',
    component: __webpack_require__(481)
}, {
    path: '/movies/movie-edit/:id',
    name: 'movie_edit',
    component: __webpack_require__(484)
}, {
    name: 'analysis-movie',
    path: '/movies/analysis/:id',
    component: __webpack_require__(487)
},
//Series
{
    name: 'series-manage',
    path: '/series/manage',
    component: __webpack_require__(490)
}, {
    name: 'series-api',
    path: '/series/new-series-api',
    component: __webpack_require__(493)
}, {
    name: 'series-custom',
    path: '/series/new-series-custom',
    component: __webpack_require__(496)
}, {
    name: 'series_manage_id',
    path: '/series/series-manage/:id',
    component: __webpack_require__(499)
}, {
    name: 'new_series_episode',
    path: '/series/series-manage/:id/new-series-episode',
    component: __webpack_require__(502)
}, {
    name: 'new_series_episode_custome',
    path: '/series/series-manage/:id/new-series-episode-custome',
    component: __webpack_require__(505)
}, {
    name: 'episode_edit',
    path: '/series/series-manage/:id/episode-edit',
    component: __webpack_require__(508)
}, {
    name: 'episode-ads',
    path: '/series/series-manage/:id/update-ads',
    component: __webpack_require__(511)
}, {
    name: 'movie-ads',
    path: '/movie/movies-manage/:id/update-ads',
    component: __webpack_require__(516)
}, {
    name: 'series_edit',
    path: '/series/series-edit/:id',
    component: __webpack_require__(519)
}, {
    name: 'analysis-series',
    path: '/series/analysis-series/:id',
    component: __webpack_require__(522)
}, {
    path: '/top/manage',
    name: 'top-manage',
    component: __webpack_require__(525)
}, {
    path: '/actors/manage',
    name: 'actors-manage',
    component: __webpack_require__(528)
}, {
    path: '/report/manage',
    name: 'report-manage',
    component: __webpack_require__(531)
}, {
    path: '/report/show/:id',
    name: 'report-show',
    component: __webpack_require__(534)
}, {
    path: '/profile/manage',
    name: 'profile',
    component: __webpack_require__(537)
}, {
    path: '/profile/security',
    name: 'security',
    component: __webpack_require__(540)
}, {
    path: '/users/manage',
    name: 'users-manage',
    component: __webpack_require__(543)
}, {
    path: '/users/edit/:id',
    name: 'edit-user',
    component: __webpack_require__(546)
}, {
    path: '/users/create',
    name: 'create-user',
    component: __webpack_require__(549)
}, {
    path: '/tv/manage',
    name: 'tv-manage',
    component: __webpack_require__(552)
}, {
    path: '/tv/create',
    name: 'tv-create',
    component: __webpack_require__(555)
}, {
    path: '/tv/edit/:id',
    name: 'tv-edit',
    component: __webpack_require__(558)
}, {
    path: '/braintree/subscribe',
    name: 'braintree-subscribe',
    component: __webpack_require__(561)
}, {
    path: '/settings/users/manage',
    name: 'admins-users-manage',
    component: __webpack_require__(566)
}, {
    path: '/settings/users/edit/:id',
    name: 'admins-user-edit',
    component: __webpack_require__(569)
}, {
    path: '/settings/users/create',
    name: 'admins-user-create',
    component: __webpack_require__(572)
}, {
    path: '/settings/appearance/themes',
    name: 'themes',
    component: __webpack_require__(575)
}, {
    path: '/settings/appearance/footer',
    name: 'footer',
    component: __webpack_require__(578)
}, {
    path: '/settings/tmdb',
    name: 'tmdb-manage',
    component: __webpack_require__(585)
}, {
    path: '/settings/transcoder/watermark',
    name: 'transcoder-watermark',
    component: __webpack_require__(588)
}, {
    path: '/support/manage',
    name: 'support-manage',
    component: __webpack_require__(591)
}, {
    path: '/support/manage/request/:id',
    name: 'support-request',
    component: __webpack_require__(594)
}, {
    path: '/file/manager/folder/:link',
    name: 'file-manager',
    component: __webpack_require__(597)
}, {
    path: '/categories/manage',
    name: 'categories-manage',
    component: __webpack_require__(600)
}, {
    path: '/category/create',
    name: 'create-category',
    component: __webpack_require__(603)
}, {
    path: '/category/edit/:id',
    name: 'edit-category',
    component: __webpack_require__(606)
}, {
    path: '/ads/manage',
    name: 'ads-manage',
    component: __webpack_require__(609)
}, {
    path: '/ad/create',
    name: 'create-ad',
    component: __webpack_require__(612)
}, {
    path: '/ad/edit/:id',
    name: 'edit-ad',
    component: __webpack_require__(615)
}, {
    path: '/embed/manage',
    name: 'embed-management',
    component: __webpack_require__(618)
}, {
    path: '/embed/create',
    name: 'create-embed',
    component: __webpack_require__(621)
}, {
    path: '/embed/edit/:id',
    name: 'edit-embed',
    component: __webpack_require__(624)
}, {
    path: '/manage/genre-list',
    name: 'genre-management',
    component: __webpack_require__(627)
}, {
    path: '/help',
    name: 'help',
    component: __webpack_require__(630)
}];

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_0_vue_router__["a" /* default */]({
    routes: routes
}));

/***/ }),
/* 12 */,
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(65)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(6);
var normalizeHeaderName = __webpack_require__(50);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(29);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(29);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__ = __webpack_require__(217);
//Importing Line class from the vue-chartjs wrapper

//Exporting this so it can be used in other components
/* harmony default export */ __webpack_exports__["a"] = ({
    extends: __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__["a" /* Bar */],
    props: ['data', 'options'],
    mounted: function mounted() {
        //renderChart function renders the chart with the datacollection and options object.
        this.renderChart(this.data, this.options);
    }
});

/***/ }),
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__ = __webpack_require__(217);
//Importing Line class from the vue-chartjs wrapper

//Exporting this so it can be used in other components
/* harmony default export */ __webpack_exports__["a"] = ({
    extends: __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__["b" /* Line */],
    props: ['data', 'options'],
    mounted: function mounted() {
        //renderChart function renders the chart with the datacollection and options object.
        this.renderChart(this.data, this.options);
    }
});

/***/ }),
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
  * vue-router v2.8.1
  * (c) 2017 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function warn (condition, message) {
  if ("development" !== 'production' && !condition) {
    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
  }
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

var View = {
  name: 'router-view',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent && parent._routerRoot !== parent) {
      if (parent.$vnode && parent.$vnode.data.routerView) {
        depth++;
      }
      if (parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      return h(cache[name], data, children)
    }

    var matched = route.matched[depth];
    // render empty node if no matched route
    if (!matched) {
      cache[name] = null;
      return h()
    }

    var component = cache[name] = matched.components[name];

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      var current = matched.instances[name];
      if (
        (val && current !== vm) ||
        (!val && current === vm)
      ) {
        matched.instances[name] = val;
      }
    }

    // also register instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // resolve props
    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);
    if (propsToPass) {
      // clone to prevent mutation
      propsToPass = data.props = extend({}, propsToPass);
      // pass non-declared props as attrs
      var attrs = data.attrs = data.attrs || {};
      for (var key in propsToPass) {
        if (!component.props || !(key in component.props)) {
          attrs[key] = propsToPass[key];
          delete propsToPass[key];
        }
      }
    }

    return h(component, data, children)
  }
};

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (true) {
        warn(
          false,
          "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
          "expecting an object, function or boolean."
        );
      }
  }
}

function extend (to, from) {
  for (var key in from) {
    to[key] = from[key];
  }
  return to
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function (str) { return encodeURIComponent(str)
  .replace(encodeReserveRE, encodeReserveReplacer)
  .replace(commaRE, ','); };

var decode = decodeURIComponent;

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
    "development" !== 'production' && warn(false, e.message);
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    parsedQuery[key] = extraQuery[key];
  }
  return parsedQuery
}

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0
      ? decode(parts.join('='))
      : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return ''
    }

    if (val === null) {
      return encode(key)
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return
        }
        if (val2 === null) {
          result.push(encode(key));
        } else {
          result.push(encode(key) + '=' + encode(val2));
        }
      });
      return result.join('&')
    }

    return encode(key) + '=' + encode(val)
  }).filter(function (x) { return x.length > 0; }).join('&') : null;
  return res ? ("?" + res) : ''
}

/*  */


var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery$$1 = router && router.options.stringifyQuery;

  var query = location.query || {};
  try {
    query = clone(query);
  } catch (e) {}

  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: query,
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery$$1),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
  }
  return Object.freeze(route)
}

function clone (value) {
  if (Array.isArray(value)) {
    return value.map(clone)
  } else if (value && typeof value === 'object') {
    var res = {};
    for (var key in value) {
      res[key] = clone(value[key]);
    }
    return res
  } else {
    return value
  }
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return (
      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query)
    )
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params)
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  // handle null value #1566
  if (!a || !b) { return a === b }
  var aKeys = Object.keys(a);
  var bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key) {
    var aVal = a[key];
    var bVal = b[key];
    // check nested equality
    if (typeof aVal === 'object' && typeof bVal === 'object') {
      return isObjectEqual(aVal, bVal)
    }
    return String(aVal) === String(bVal)
  })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var Link = {
  name: 'router-link',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    exact: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(this.to, current, this.append);
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback = globalActiveClass == null
            ? 'router-link-active'
            : globalActiveClass;
    var exactActiveClassFallback = globalExactActiveClass == null
            ? 'router-link-exact-active'
            : globalExactActiveClass;
    var activeClass = this.activeClass == null
            ? activeClassFallback
            : this.activeClass;
    var exactActiveClass = this.exactActiveClass == null
            ? exactActiveClassFallback
            : this.exactActiveClass;
    var compareTarget = location.path
      ? createRoute(null, location, null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget);
    classes[activeClass] = this.exact
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1.replace) {
          router.replace(location);
        } else {
          router.push(location);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) { on[e] = handler; });
    } else {
      on[this.event] = handler;
    }

    var data = {
      class: classes
    };

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var extend = _Vue.util.extend;
        var aData = a.data = extend({}, a.data);
        aData.on = on;
        var aAttrs = a.data.attrs = extend({}, a.data.attrs);
        aAttrs.href = href;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var _Vue;

function install (Vue) {
  if (install.installed && _Vue === Vue) { return }
  install.installed = true;

  _Vue = Vue;

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._routerRoot = this;
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      } else {
        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this._routerRoot._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this._routerRoot._route }
  });

  Vue.component('router-view', View);
  Vue.component('router-link', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/\//g, '/')
}

var isarray = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

/*  */

// $flow-disable-line
var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = pathToRegexp_1.compile(path));
    return filler(params || {}, { pretty: true })
  } catch (e) {
    if (true) {
      warn(false, ("missing param for " + routeMsg + ": " + (e.message)));
    }
    return ''
  }
}

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  // $flow-disable-line
  var pathMap = oldPathMap || Object.create(null);
  // $flow-disable-line
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (true) {
    assert(path != null, "\"path\" is required in a route configuration.");
    assert(
      typeof route.component !== 'string',
      "route config \"component\" for path: " + (String(path || name)) + " cannot be a " +
      "string id. Use an actual component instead."
    );
  }

  var pathToRegexpOptions = route.pathToRegexpOptions || {};
  var normalizedPath = normalizePath(
    path,
    parent,
    pathToRegexpOptions.strict
  );

  if (typeof route.caseSensitive === 'boolean') {
    pathToRegexpOptions.sensitive = route.caseSensitive;
  }

  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
    components: route.components || { default: route.component },
    instances: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props: route.props == null
      ? {}
      : route.components
        ? route.props
        : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named, does not redirect and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (true) {
      if (route.name && !route.redirect && route.children.some(function (child) { return /^\/?$/.test(child.path); })) {
        warn(
          false,
          "Named Route '" + (route.name) + "' has a default child route. " +
          "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
          "the default child route will not be rendered. Remove the name from " +
          "this route and use the name of the default child route for named " +
          "links instead."
        );
      }
    }
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (route.alias !== undefined) {
    var aliases = Array.isArray(route.alias)
      ? route.alias
      : [route.alias];

    aliases.forEach(function (alias) {
      var aliasRoute = {
        path: alias,
        children: route.children
      };
      addRouteRecord(
        pathList,
        pathMap,
        nameMap,
        aliasRoute,
        parent,
        record.path || '/' // matchAs
      );
    });
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if ("development" !== 'production' && !matchAs) {
      warn(
        false,
        "Duplicate named routes definition: " +
        "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
      );
    }
  }
}

function compileRouteRegex (path, pathToRegexpOptions) {
  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);
  if (true) {
    var keys = Object.create(null);
    regex.keys.forEach(function (key) {
      warn(!keys[key.name], ("Duplicate param keys in route with path: \"" + path + "\""));
      keys[key.name] = true;
    });
  }
  return regex
}

function normalizePath (path, parent, strict) {
  if (!strict) { path = path.replace(/\/$/, ''); }
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */


function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next.name || next._normalized) {
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = assign({}, next);
    next._normalized = true;
    var params = assign(assign({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params;
    } else if (current.matched.length) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params, ("path " + (current.path)));
    } else if (true) {
      warn(false, "relative params navigation requires a current route.");
    }
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

function assign (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */


function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (true) {
        warn(record, ("Route with name '" + name + "' does not exist"));
      }
      if (!record) { return _createRoute(null, location) }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      if (record) {
        location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
        return _createRoute(record, location, redirectedFrom)
      }
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
        ? originalRedirect(createRoute(record, location, null, router))
        : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (true) {
        warn(
          false, ("invalid redirect option: " + (JSON.stringify(redirect)))
        );
      }
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (true) {
        assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
      }
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (true) {
        warn(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
      }
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
    if (key) {
      params[key.name] = val;
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */


var positionStore = Object.create(null);

function setupScroll () {
  // Fix for #1585 for Firefox
  window.history.replaceState({ key: getStateKey() }, '');
  window.addEventListener('popstate', function (e) {
    saveScrollPosition();
    if (e.state && e.state.key) {
      setStateKey(e.state.key);
    }
  });
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (true) {
    assert(typeof behavior === 'function', "scrollBehavior must be a function");
  }

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior(to, from, isPop ? position : null);

    if (!shouldScroll) {
      return
    }

    if (typeof shouldScroll.then === 'function') {
      shouldScroll.then(function (shouldScroll) {
        scrollToPosition((shouldScroll), position);
      }).catch(function (err) {
        if (true) {
          assert(false, err.toString());
        }
      });
    } else {
      scrollToPosition(shouldScroll, position);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el, offset) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left - offset.x,
    y: elRect.top - docRect.top - offset.y
  }
}

function isValidPosition (obj) {
  return isNumber(obj.x) || isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function normalizeOffset (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : 0,
    y: isNumber(obj.y) ? obj.y : 0
  }
}

function isNumber (v) {
  return typeof v === 'number'
}

function scrollToPosition (shouldScroll, position) {
  var isObject = typeof shouldScroll === 'object';
  if (isObject && typeof shouldScroll.selector === 'string') {
    var el = document.querySelector(shouldScroll.selector);
    if (el) {
      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};
      offset = normalizeOffset(offset);
      position = getElementPosition(el, offset);
    } else if (isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }
  } else if (isObject && isValidPosition(shouldScroll)) {
    position = normalizePosition(shouldScroll);
  }

  if (position) {
    window.scrollTo(position.x, position.y);
  }
}

/*  */

var supportsPushState = inBrowser && (function () {
  var ua = window.navigator.userAgent;

  if (
    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
    ua.indexOf('Mobile Safari') !== -1 &&
    ua.indexOf('Chrome') === -1 &&
    ua.indexOf('Windows Phone') === -1
  ) {
    return false
  }

  return window.history && 'pushState' in window.history
})();

// use User Timing api (if present) for more accurate key precision
var Time = inBrowser && window.performance && window.performance.now
  ? window.performance
  : Date;

var _key = genKey();

function genKey () {
  return Time.now().toFixed(3)
}

function getStateKey () {
  return _key
}

function setStateKey (key) {
  _key = key;
}

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      history.replaceState({ key: _key }, '', url);
    } else {
      _key = genKey();
      history.pushState({ key: _key }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

/*  */

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          if (isESModule(resolvedDef)) {
            resolvedDef = resolvedDef.default;
          }
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : _Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
          "development" !== 'production' && warn(false, msg);
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

var hasSymbol =
  typeof Symbol === 'function' &&
  typeof Symbol.toStringTag === 'symbol';

function isESModule (obj) {
  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    if (called) { return }
    called = true;
    return fn.apply(this, args)
  }
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {
    var this$1 = this;

  var route = this.router.match(location, this.current);
  this.confirmTransition(route, function () {
    this$1.updateRoute(route);
    onComplete && onComplete(route);
    this$1.ensureURL();

    // fire ready cbs once
    if (!this$1.ready) {
      this$1.ready = true;
      this$1.readyCbs.forEach(function (cb) { cb(route); });
    }
  }, function (err) {
    if (onAbort) {
      onAbort(err);
    }
    if (err && !this$1.ready) {
      this$1.ready = true;
      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });
    }
  });
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1 = this;

  var current = this.current;
  var abort = function (err) {
    if (isError(err)) {
      if (this$1.errorCbs.length) {
        this$1.errorCbs.forEach(function (cb) { cb(err); });
      } else {
        warn(false, 'uncaught error during route navigation:');
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    route.matched.length === current.matched.length
  ) {
    this.ensureURL();
    return abort()
  }

  var ref = resolveQueue(this.current.matched, route.matched);
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  this.pending = route;
  var iterator = function (hook, next) {
    if (this$1.pending !== route) {
      return abort()
    }
    try {
      hook(route, current, function (to) {
        if (to === false || isError(to)) {
          // next(false) -> abort navigation, ensure current URL
          this$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' && (
            typeof to.path === 'string' ||
            typeof to.name === 'string'
          ))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort();
          if (typeof to === 'object' && to.replace) {
            this$1.replace(to);
          } else {
            this$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    var postEnterCbs = [];
    var isValid = function () { return this$1.current === route; };
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
    var queue = enterGuards.concat(this$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1.pending !== route) {
        return abort()
      }
      this$1.pending = null;
      onComplete(route);
      if (this$1.router.app) {
        this$1.router.app.$nextTick(function () {
          postEnterCbs.forEach(function (cb) { cb(); });
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  var prev = this.current;
  this.current = route;
  this.cb && this.cb(route);
  this.router.afterHooks.forEach(function (hook) {
    hook && hook(route, prev);
  });
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
      // strip full URL origin
      base = base.replace(/^https?:\/\/[^\/]+/, '');
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = _Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated,
  cbs,
  isValid
) {
  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
    return bindEnterGuard(guard, match, key, cbs, isValid)
  })
}

function bindEnterGuard (
  guard,
  match,
  key,
  cbs,
  isValid
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      next(cb);
      if (typeof cb === 'function') {
        cbs.push(function () {
          // #750
          // if a router-view is wrapped with an out-in transition,
          // the instance may not have been registered at this time.
          // we will need to poll for registration until current route
          // is no longer valid.
          poll(cb, match.instances, key, isValid);
        });
      }
    })
  }
}

function poll (
  cb, // somehow flow cannot infer this is a function
  instances,
  key,
  isValid
) {
  if (instances[key]) {
    cb(instances[key]);
  } else if (isValid()) {
    setTimeout(function () {
      poll(cb, instances, key, isValid);
    }, 16);
  }
}

/*  */


var HTML5History = (function (History$$1) {
  function HTML5History (router, base) {
    var this$1 = this;

    History$$1.call(this, router, base);

    var expectScroll = router.options.scrollBehavior;

    if (expectScroll) {
      setupScroll();
    }

    var initLocation = getLocation(this.base);
    window.addEventListener('popstate', function (e) {
      var current = this$1.current;

      // Avoiding first `popstate` event dispatched in some browsers but first
      // history route not updated since async guard at the same time.
      var location = getLocation(this$1.base);
      if (this$1.current === START && location === initLocation) {
        return
      }

      this$1.transitionTo(location, function (route) {
        if (expectScroll) {
          handleScroll(router, route, current, true);
        }
      });
    });
  }

  if ( History$$1 ) HTML5History.__proto__ = History$$1;
  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  if (base && path.indexOf(base) === 0) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */


var HashHistory = (function (History$$1) {
  function HashHistory (router, base, fallback) {
    History$$1.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History$$1 ) HashHistory.__proto__ = History$$1;
  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    var router = this.router;
    var expectScroll = router.options.scrollBehavior;
    var supportsScroll = supportsPushState && expectScroll;

    if (supportsScroll) {
      setupScroll();
    }

    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {
      var current = this$1.current;
      if (!ensureSlash()) {
        return
      }
      this$1.transitionTo(getHash(), function (route) {
        if (supportsScroll) {
          handleScroll(this$1.router, route, current, true);
        }
        if (!supportsPushState) {
          replaceHash(route.fullPath);
        }
      });
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushHash(route.fullPath);
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceHash(route.fullPath);
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(
      cleanPath(base + '/#' + location)
    );
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  return index === -1 ? '' : href.slice(index + 1)
}

function getUrl (path) {
  var href = window.location.href;
  var i = href.indexOf('#');
  var base = i >= 0 ? href.slice(0, i) : href;
  return (base + "#" + path)
}

function pushHash (path) {
  if (supportsPushState) {
    pushState(getUrl(path));
  } else {
    window.location.hash = path;
  }
}

function replaceHash (path) {
  if (supportsPushState) {
    replaceState(getUrl(path));
  } else {
    window.location.replace(getUrl(path));
  }
}

/*  */


var AbstractHistory = (function (History$$1) {
  function AbstractHistory (router, base) {
    History$$1.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;
  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
      this$1.index++;
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(route, function () {
      this$1.index = targetIndex;
      this$1.updateRoute(route);
    });
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */

var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (true) {
        assert(false, ("invalid mode: " + mode));
      }
  }
};

var prototypeAccessors = { currentRoute: { configurable: true } };

VueRouter.prototype.match = function match (
  raw,
  current,
  redirectedFrom
) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1 = this;

  "development" !== 'production' && assert(
    install.installed,
    "not installed. Make sure to call `Vue.use(VueRouter)` " +
    "before creating root instance."
  );

  this.apps.push(app);

  // main app already initialized.
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History) {
    history.transitionTo(history.getCurrentLocation());
  } else if (history instanceof HashHistory) {
    var setupHashListener = function () {
      history.setupListeners();
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupHashListener,
      setupHashListener
    );
  }

  history.listen(function (route) {
    this$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
  this.history.push(location, onComplete, onAbort);
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
  this.history.replace(location, onComplete, onAbort);
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? to.matched
      ? to
      : this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply([], route.matched.map(function (m) {
    return Object.keys(m.components).map(function (key) {
      return m.components[key]
    })
  }))
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  var location = normalizeLocation(
    to,
    current || this.history.current,
    append,
    this
  );
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

VueRouter.install = install;
VueRouter.version = '2.8.1';

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

/* harmony default export */ __webpack_exports__["a"] = (VueRouter);


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var settle = __webpack_require__(51);
var buildURL = __webpack_require__(53);
var parseHeaders = __webpack_require__(54);
var isURLSameOrigin = __webpack_require__(55);
var createError = __webpack_require__(30);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(56);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("development" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(57);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(52);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 33 */,
/* 34 */,
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ErrorBag */
/* unused harmony export Rules */
/* unused harmony export ValidationObserver */
/* unused harmony export ValidationProvider */
/* unused harmony export Validator */
/* unused harmony export directive */
/* unused harmony export install */
/* unused harmony export mapFields */
/* unused harmony export mixin */
/* unused harmony export version */
/* unused harmony export withValidation */
/**
  * vee-validate v2.2.15
  * (c) 2019 Abdelrahman Awad
  * @license MIT
  */
// 

var isTextInput = function (el) {
  return includes(['text', 'password', 'search', 'email', 'tel', 'url', 'textarea', 'number'], el.type);
};

var isCheckboxOrRadioInput = function (el) {
  return includes(['radio', 'checkbox'], el.type);
};

var isDateInput = function (el) {
  return includes(['date', 'week', 'month', 'datetime-local', 'time'], el.type);
};

/**
 * Gets the data attribute. the name must be kebab-case.
 */
var getDataAttribute = function (el, name) { return el.getAttribute(("data-vv-" + name)); };

var isNaN$1 = function (value) {
  if ('isNaN' in Number) {
    return Number.isNaN(value);
  }

  // eslint-disable-next-line
  return typeof(value) === 'number' && value !== value;
};

/**
 * Checks if the values are either null or undefined.
 */
var isNullOrUndefined = function () {
  var values = [], len = arguments.length;
  while ( len-- ) values[ len ] = arguments[ len ];

  return values.every(function (value) {
    return value === null || value === undefined;
  });
};

/**
 * Creates the default flags object.
 */
var createFlags = function () { return ({
  untouched: true,
  touched: false,
  dirty: false,
  pristine: true,
  valid: null,
  invalid: null,
  validated: false,
  pending: false,
  required: false,
  changed: false
}); };

/**
 * Shallow object comparison.
 */
var isEqual = function (lhs, rhs) {
  if (lhs instanceof RegExp && rhs instanceof RegExp) {
    return isEqual(lhs.source, rhs.source) && isEqual(lhs.flags, rhs.flags);
  }

  if (Array.isArray(lhs) && Array.isArray(rhs)) {
    if (lhs.length !== rhs.length) { return false; }

    for (var i = 0; i < lhs.length; i++) {
      if (!isEqual(lhs[i], rhs[i])) {
        return false;
      }
    }

    return true;
  }

  // if both are objects, compare each key recursively.
  if (isObject(lhs) && isObject(rhs)) {
    return Object.keys(lhs).every(function (key) {
      return isEqual(lhs[key], rhs[key]);
    }) && Object.keys(rhs).every(function (key) {
      return isEqual(lhs[key], rhs[key]);
    });
  }

  if (isNaN$1(lhs) && isNaN$1(rhs)) {
    return true;
  }

  return lhs === rhs;
};

/**
 * Determines the input field scope.
 */
var getScope = function (el) {
  var scope = getDataAttribute(el, 'scope');
  if (isNullOrUndefined(scope)) {
    var form = getForm(el);

    if (form) {
      scope = getDataAttribute(form, 'scope');
    }
  }

  return !isNullOrUndefined(scope) ? scope : null;
};

/**
 * Get the closest form element.
 */
var getForm = function (el) {
  if (isNullOrUndefined(el)) { return null; }

  if (el.tagName === 'FORM') { return el; }

  if (!isNullOrUndefined(el.form)) { return el.form; }

  return !isNullOrUndefined(el.parentNode) ? getForm(el.parentNode) : null;
};

/**
 * Gets the value in an object safely.
 */
var getPath = function (path, target, def) {
  if ( def === void 0 ) def = undefined;

  if (!path || !target) { return def; }

  var value = target;
  path.split('.').every(function (prop) {
    if (prop in value) {
      value = value[prop];

      return true;
    }

    value = def;

    return false;
  });

  return value;
};

/**
 * Checks if path exists within an object.
 */
var hasPath = function (path, target) {
  var obj = target;
  var previousPath = null;
  var isNullOrNonObject = false;
  var isValidPath = path.split('.').reduce(function (reducer, prop) {
    if (obj == null || typeof obj !== 'object') {
      isNullOrNonObject = true;
      return reducer && false;
    }

    if (prop in obj) {
      obj = obj[prop];
      previousPath = previousPath === null ? prop : previousPath + '.' + prop;

      return reducer && true;
    }

    return reducer && false;
  }, true);

  if (true) {
    if (isNullOrNonObject) {
      throw new Error(previousPath + ' is not an object');
    }
  }

  return isValidPath;
};

/**
 * Parses a rule string expression.
 */
var parseRule = function (rule) {
  var params = [];
  var name = rule.split(':')[0];

  if (includes(rule, ':')) {
    params = rule.split(':').slice(1).join(':').split(',');
  }

  return { name: name, params: params };
};

/**
 * Debounces a function.
 */
var debounce = function (fn, wait, token) {
  if ( wait === void 0 ) wait = 0;
  if ( token === void 0 ) token = { cancelled: false };

  if (wait === 0) {
    return fn;
  }

  var timeout;

  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var later = function () {
      timeout = null;

      // check if the fn call was cancelled.
      if (!token.cancelled) { fn.apply(void 0, args); }
    };

    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (!timeout) { fn.apply(void 0, args); }
  };
};

/**
 * Appends a rule definition to a list of rules.
 */
var appendRule = function (rule, rules) {
  if (!rules) {
    return normalizeRules(rule);
  }

  if (!rule) {
    return normalizeRules(rules);
  }

  if (typeof rules === 'string') {
    rules = normalizeRules(rules);
  }

  return assign({}, rules, normalizeRules(rule));
};

/**
 * Normalizes the given rules expression.
 */
var normalizeRules = function (rules) {
  // if falsy value return an empty object.
  if (!rules) {
    return {};
  }

  if (isObject(rules)) {
    // $FlowFixMe
    return Object.keys(rules).reduce(function (prev, curr) {
      var params = [];
      // $FlowFixMe
      if (rules[curr] === true) {
        params = [];
      } else if (Array.isArray(rules[curr])) {
        params = rules[curr];
      } else if (isObject(rules[curr])) {
        params = rules[curr];
      } else {
        params = [rules[curr]];
      }

      // $FlowFixMe
      if (rules[curr] !== false) {
        prev[curr] = params;
      }

      return prev;
    }, {});
  }

  if (typeof rules !== 'string') {
    warn('rules must be either a string or an object.');
    return {};
  }

  return rules.split('|').reduce(function (prev, rule) {
    var parsedRule = parseRule(rule);
    if (!parsedRule.name) {
      return prev;
    }

    prev[parsedRule.name] = parsedRule.params;
    return prev;
  }, {});
};

/**
 * Emits a warning to the console.
 */
var warn = function (message) {
  console.warn(("[vee-validate] " + message)); // eslint-disable-line
};

/**
 * Creates a branded error object.
 */
var createError = function (message) { return new Error(("[vee-validate] " + message)); };

/**
 * Checks if the value is an object.
 */
var isObject = function (obj) { return obj !== null && obj && typeof obj === 'object' && ! Array.isArray(obj); };

/**
 * Checks if a function is callable.
 */
var isCallable = function (func) { return typeof func === 'function'; };

/**
 * Check if element has the css class on it.
 */
var hasClass = function (el, className) {
  if (el.classList) {
    return el.classList.contains(className);
  }

  return !!el.className.match(new RegExp(("(\\s|^)" + className + "(\\s|$)")));
};

/**
 * Adds the provided css className to the element.
 */
var addClass = function (el, className) {
  if (el.classList) {
    el.classList.add(className);
    return;
  }

  if (!hasClass(el, className)) {
    el.className += " " + className;
  }
};

/**
 * Remove the provided css className from the element.
 */
var removeClass = function (el, className) {
  if (el.classList) {
    el.classList.remove(className);
    return;
  }

  if (hasClass(el, className)) {
    var reg = new RegExp(("(\\s|^)" + className + "(\\s|$)"));
    el.className = el.className.replace(reg, ' ');
  }
};

/**
 * Adds or removes a class name on the input depending on the status flag.
 */
var toggleClass = function (el, className, status) {
  if (!el || !className) { return; }

  if (Array.isArray(className)) {
    className.forEach(function (item) { return toggleClass(el, item, status); });
    return;
  }

  if (status) {
    return addClass(el, className);
  }

  removeClass(el, className);
};

/**
 * Converts an array-like object to array, provides a simple polyfill for Array.from
 */
var toArray = function (arrayLike) {
  if (isCallable(Array.from)) {
    return Array.from(arrayLike);
  }

  var array = [];
  var length = arrayLike.length;
  /* istanbul ignore next */
  for (var i = 0; i < length; i++) {
    array.push(arrayLike[i]);
  }

  /* istanbul ignore next */
  return array;
};

/**
 * Converts an array-like object to array and place other elements in an array
 */
var ensureArray = function (arrayLike) {
  if (Array.isArray(arrayLike)) {
    return [].concat( arrayLike );
  }
  var array = toArray(arrayLike);
  return isEmptyArray(array) ? [arrayLike] : array;
};

/**
 * Assign polyfill from the mdn.
 */
var assign = function (target) {
  var others = [], len = arguments.length - 1;
  while ( len-- > 0 ) others[ len ] = arguments[ len + 1 ];

  /* istanbul ignore else */
  if (isCallable(Object.assign)) {
    return Object.assign.apply(Object, [ target ].concat( others ));
  }

  /* istanbul ignore next */
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  /* istanbul ignore next */
  var to = Object(target);
  /* istanbul ignore next */
  others.forEach(function (arg) {
    // Skip over if undefined or null
    if (arg != null) {
      Object.keys(arg).forEach(function (key) {
        to[key] = arg[key];
      });
    }
  });
  /* istanbul ignore next */
  return to;
};

var id = 0;
var idTemplate = '{id}';

/**
 * Generates a unique id.
 */
var uniqId = function () {
  // handle too many uses of uniqId, although unlikely.
  if (id >= 9999) {
    id = 0;
    // shift the template.
    idTemplate = idTemplate.replace('{id}', '_{id}');
  }

  id++;
  var newId = idTemplate.replace('{id}', String(id));

  return newId;
};

var findIndex = function (arrayLike, predicate) {
  var array = Array.isArray(arrayLike) ? arrayLike : toArray(arrayLike);
  for (var i = 0; i < array.length; i++) {
    if (predicate(array[i])) {
      return i;
    }
  }

  return -1;
};

/**
 * finds the first element that satisfies the predicate callback, polyfills array.find
 */
var find = function (arrayLike, predicate) {
  var array = Array.isArray(arrayLike) ? arrayLike : toArray(arrayLike);
  var idx = findIndex(array, predicate);

  return idx === -1 ? undefined : array[idx];
};

var isBuiltInComponent = function (vnode) {
  if (!vnode) {
    return false;
  }

  var tag = vnode.componentOptions.tag;

  return /^(keep-alive|transition|transition-group)$/.test(tag);
};

var makeDelayObject = function (events, delay, delayConfig) {
  if (typeof delay === 'number') {
    return events.reduce(function (prev, e) {
      prev[e] = delay;
      return prev;
    }, {});
  }

  return events.reduce(function (prev, e) {
    if (typeof delay === 'object' && e in delay) {
      prev[e] = delay[e];
      return prev;
    }

    if (typeof delayConfig === 'number') {
      prev[e] = delayConfig;
      return prev;
    }

    prev[e] = (delayConfig && delayConfig[e]) || 0;

    return prev;
  }, {});
};

var deepParseInt = function (input) {
  if (typeof input === 'number') { return input; }

  if (typeof input === 'string') { return parseInt(input); }

  var map = {};
  for (var element in input) {
    map[element] = parseInt(input[element]);
  }

  return map;
};

var merge = function (target, source) {
  if (! (isObject(target) && isObject(source))) {
    return target;
  }

  Object.keys(source).forEach(function (key) {
    var obj, obj$1;

    if (isObject(source[key])) {
      if (! target[key]) {
        assign(target, ( obj = {}, obj[key] = {}, obj ));
      }

      merge(target[key], source[key]);
      return;
    }

    assign(target, ( obj$1 = {}, obj$1[key] = source[key], obj$1 ));
  });

  return target;
};

var fillRulesFromElement = function (el, rules) {
  if (el.required) {
    rules = appendRule('required', rules);
  }

  if (isTextInput(el)) {
    if (el.type === 'email') {
      rules = appendRule(("email" + (el.multiple ? ':multiple' : '')), rules);
    }

    if (el.pattern) {
      rules = appendRule({ regex: el.pattern }, rules);
    }

    // 524288 is the max on some browsers and test environments.
    if (el.maxLength >= 0 && el.maxLength < 524288) {
      rules = appendRule(("max:" + (el.maxLength)), rules);
    }

    if (el.minLength > 0) {
      rules = appendRule(("min:" + (el.minLength)), rules);
    }

    if (el.type === 'number') {
      rules = appendRule('decimal', rules);
      if (el.min !== '') {
        rules = appendRule(("min_value:" + (el.min)), rules);
      }

      if (el.max !== '') {
        rules = appendRule(("max_value:" + (el.max)), rules);
      }
    }

    return rules;
  }

  if (isDateInput(el)) {
    var timeFormat = el.step && Number(el.step) < 60 ? 'HH:mm:ss' : 'HH:mm';

    if (el.type === 'date') {
      return appendRule('date_format:yyyy-MM-dd', rules);
    }

    if (el.type === 'datetime-local') {
      return appendRule(("date_format:yyyy-MM-ddT" + timeFormat), rules);
    }

    if (el.type === 'month') {
      return appendRule('date_format:yyyy-MM', rules);
    }

    if (el.type === 'week') {
      return appendRule('date_format:yyyy-[W]WW', rules);
    }

    if (el.type === 'time') {
      return appendRule(("date_format:" + timeFormat), rules);
    }
  }

  return rules;
};

var values = function (obj) {
  if (isCallable(Object.values)) {
    return Object.values(obj);
  }

  // fallback to keys()
  /* istanbul ignore next */
  return Object.keys(obj).map(function (k) { return obj[k]; });
};

var parseSelector = function (selector) {
  var rule = null;
  if (includes(selector, ':')) {
    rule = selector.split(':').pop();
    selector = selector.replace((":" + rule), '');
  }

  if (selector[0] === '#') {
    return {
      id: selector.slice(1),
      rule: rule,
      name: null,
      scope: null
    };
  }

  var scope = null;
  var name = selector;
  if (includes(selector, '.')) {
    var parts = selector.split('.');
    scope = parts[0];
    name = parts.slice(1).join('.');
  }

  return {
    id: null,
    scope: scope,
    name: name,
    rule: rule
  };
};

var includes = function (collection, item) {
  return collection.indexOf(item) !== -1;
};

var isEmptyArray = function (arr) {
  return Array.isArray(arr) && arr.length === 0;
};

var defineNonReactive = function (obj, prop, value) {
  Object.defineProperty(obj, prop, {
    configurable: false,
    writable: true,
    value: value
  });
};

// 

var LOCALE = 'en';

var Dictionary = function Dictionary (dictionary) {
  if ( dictionary === void 0 ) dictionary = {};

  this.container = {};
  this.merge(dictionary);
};

var prototypeAccessors = { locale: { configurable: true } };

prototypeAccessors.locale.get = function () {
  return LOCALE;
};

prototypeAccessors.locale.set = function (value) {
  LOCALE = value || 'en';
};

Dictionary.prototype.hasLocale = function hasLocale (locale) {
  return !!this.container[locale];
};

Dictionary.prototype.setDateFormat = function setDateFormat (locale, format) {
  if (!this.container[locale]) {
    this.container[locale] = {};
  }

  this.container[locale].dateFormat = format;
};

Dictionary.prototype.getDateFormat = function getDateFormat (locale) {
  if (!this.container[locale] || !this.container[locale].dateFormat) {
    return null;
  }

  return this.container[locale].dateFormat;
};

Dictionary.prototype.getMessage = function getMessage (locale, key, data) {
  var message = null;
  if (!this.hasMessage(locale, key)) {
    message = this._getDefaultMessage(locale);
  } else {
    message = this.container[locale].messages[key];
  }

  return isCallable(message) ? message.apply(void 0, data) : message;
};

/**
 * Gets a specific message for field. falls back to the rule message.
 */
Dictionary.prototype.getFieldMessage = function getFieldMessage (locale, field, key, data) {
  if (!this.hasLocale(locale)) {
    return this.getMessage(locale, key, data);
  }

  var dict = this.container[locale].custom && this.container[locale].custom[field];
  if (!dict || !dict[key]) {
    return this.getMessage(locale, key, data);
  }

  var message = dict[key];
  return isCallable(message) ? message.apply(void 0, data) : message;
};

Dictionary.prototype._getDefaultMessage = function _getDefaultMessage (locale) {
  if (this.hasMessage(locale, '_default')) {
    return this.container[locale].messages._default;
  }

  return this.container.en.messages._default;
};

Dictionary.prototype.getAttribute = function getAttribute (locale, key, fallback) {
    if ( fallback === void 0 ) fallback = '';

  if (!this.hasAttribute(locale, key)) {
    return fallback;
  }

  return this.container[locale].attributes[key];
};

Dictionary.prototype.hasMessage = function hasMessage (locale, key) {
  return !! (
    this.hasLocale(locale) &&
          this.container[locale].messages &&
          this.container[locale].messages[key]
  );
};

Dictionary.prototype.hasAttribute = function hasAttribute (locale, key) {
  return !! (
    this.hasLocale(locale) &&
          this.container[locale].attributes &&
          this.container[locale].attributes[key]
  );
};

Dictionary.prototype.merge = function merge$1 (dictionary) {
  merge(this.container, dictionary);
};

Dictionary.prototype.setMessage = function setMessage (locale, key, message) {
  if (! this.hasLocale(locale)) {
    this.container[locale] = {
      messages: {},
      attributes: {}
    };
  }
    
  if (!this.container[locale].messages) {
    this.container[locale].messages = {};
  }

  this.container[locale].messages[key] = message;
};

Dictionary.prototype.setAttribute = function setAttribute (locale, key, attribute) {
  if (! this.hasLocale(locale)) {
    this.container[locale] = {
      messages: {},
      attributes: {}
    };
  }

  this.container[locale].attributes[key] = attribute;
};

Object.defineProperties( Dictionary.prototype, prototypeAccessors );

var drivers = {
  default: new Dictionary({
    en: {
      messages: {},
      attributes: {},
      custom: {}
    }
  })
};

var currentDriver = 'default';

var DictionaryResolver = function DictionaryResolver () {};

DictionaryResolver._checkDriverName = function _checkDriverName (driver) {
  if (!driver) {
    throw createError('you must provide a name to the dictionary driver');
  }
};

DictionaryResolver.setDriver = function setDriver (driver, implementation) {
    if ( implementation === void 0 ) implementation = null;

  this._checkDriverName(driver);
  if (implementation) {
    drivers[driver] = implementation;
  }

  currentDriver = driver;
};

DictionaryResolver.getDriver = function getDriver () {
  return drivers[currentDriver];
};

// 

var ErrorBag = function ErrorBag (errorBag, id) {
  if ( errorBag === void 0 ) errorBag = null;
  if ( id === void 0 ) id = null;

  this.vmId = id || null;
  // make this bag a mirror of the provided one, sharing the same items reference.
  if (errorBag && errorBag instanceof ErrorBag) {
    this.items = errorBag.items;
  } else {
    this.items = [];
  }
};

ErrorBag.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
    var this$1 = this;

  var index = 0;
  return {
    next: function () {
      return { value: this$1.items[index++], done: index > this$1.items.length };
    }
  };
};

/**
 * Adds an error to the internal array.
 */
ErrorBag.prototype.add = function add (error) {
    var ref;

  (ref = this.items).push.apply(
    ref, this._normalizeError(error)
  );
};

/**
 * Normalizes passed errors to an error array.
 */
ErrorBag.prototype._normalizeError = function _normalizeError (error) {
    var this$1 = this;

  if (Array.isArray(error)) {
    return error.map(function (e) {
      e.scope = !isNullOrUndefined(e.scope) ? e.scope : null;
      e.vmId = !isNullOrUndefined(e.vmId) ? e.vmId : (this$1.vmId || null);

      return e;
    });
  }

  error.scope = !isNullOrUndefined(error.scope) ? error.scope : null;
  error.vmId = !isNullOrUndefined(error.vmId) ? error.vmId : (this.vmId || null);

  return [error];
};

/**
 * Regenrates error messages if they have a generator function.
 */
ErrorBag.prototype.regenerate = function regenerate () {
  this.items.forEach(function (i) {
    i.msg = isCallable(i.regenerate) ? i.regenerate() : i.msg;
  });
};

/**
 * Updates a field error with the new field scope.
 */
ErrorBag.prototype.update = function update (id, error) {
  var item = find(this.items, function (i) { return i.id === id; });
  if (!item) {
    return;
  }

  var idx = this.items.indexOf(item);
  this.items.splice(idx, 1);
  item.scope = error.scope;
  this.items.push(item);
};

/**
 * Gets all error messages from the internal array.
 */
ErrorBag.prototype.all = function all (scope) {
    var this$1 = this;

  var filterFn = function (item) {
    var matchesScope = true;
    var matchesVM = true;
    if (!isNullOrUndefined(scope)) {
      matchesScope = item.scope === scope;
    }

    if (!isNullOrUndefined(this$1.vmId)) {
      matchesVM = item.vmId === this$1.vmId;
    }

    return matchesVM && matchesScope;
  };

  return this.items.filter(filterFn).map(function (e) { return e.msg; });
};

/**
 * Checks if there are any errors in the internal array.
 */
ErrorBag.prototype.any = function any (scope) {
    var this$1 = this;

  var filterFn = function (item) {
    var matchesScope = true;
    var matchesVM = true;
    if (!isNullOrUndefined(scope)) {
      matchesScope = item.scope === scope;
    }

    if (!isNullOrUndefined(this$1.vmId)) {
      matchesVM = item.vmId === this$1.vmId;
    }

    return matchesVM && matchesScope;
  };

  return !!this.items.filter(filterFn).length;
};

/**
 * Removes all items from the internal array.
 */
ErrorBag.prototype.clear = function clear (scope) {
    var this$1 = this;

  var matchesVM = isNullOrUndefined(this.vmId) ? function () { return true; } : function (i) { return i.vmId === this$1.vmId; };
  var matchesScope = function (i) { return i.scope === scope; };
  if (arguments.length === 0) {
    matchesScope = function () { return true; };
  } else if (isNullOrUndefined(scope)) {
    scope = null;
  }

  for (var i = 0; i < this.items.length; ++i) {
    if (matchesVM(this.items[i]) && matchesScope(this.items[i])) {
      this.items.splice(i, 1);
      --i;
    }
  }
};

/**
 * Collects errors into groups or for a specific field.
 */
ErrorBag.prototype.collect = function collect (field, scope, map) {
    var this$1 = this;
    if ( map === void 0 ) map = true;

  var isSingleField = !isNullOrUndefined(field) && !field.includes('*');
  var groupErrors = function (items) {
    var errors = items.reduce(function (collection, error) {
      if (!isNullOrUndefined(this$1.vmId) && error.vmId !== this$1.vmId) {
        return collection;
      }

      if (!collection[error.field]) {
        collection[error.field] = [];
      }

      collection[error.field].push(map ? error.msg : error);

      return collection;
    }, {});

    // reduce the collection to be a single array.
    if (isSingleField) {
      return values(errors)[0] || [];
    }

    return errors;
  };

  if (isNullOrUndefined(field)) {
    return groupErrors(this.items);
  }

  var selector = isNullOrUndefined(scope) ? String(field) : (scope + "." + field);
  var ref = this._makeCandidateFilters(selector);
    var isPrimary = ref.isPrimary;
    var isAlt = ref.isAlt;

  var collected = this.items.reduce(function (prev, curr) {
    if (isPrimary(curr)) {
      prev.primary.push(curr);
    }

    if (isAlt(curr)) {
      prev.alt.push(curr);
    }

    return prev;
  }, { primary: [], alt: [] });

  collected = collected.primary.length ? collected.primary : collected.alt;

  return groupErrors(collected);
};

/**
 * Gets the internal array length.
 */
ErrorBag.prototype.count = function count () {
    var this$1 = this;

  if (this.vmId) {
    return this.items.filter(function (e) { return e.vmId === this$1.vmId; }).length;
  }

  return this.items.length;
};

/**
 * Finds and fetches the first error message for the specified field id.
 */
ErrorBag.prototype.firstById = function firstById (id) {
  var error = find(this.items, function (i) { return i.id === id; });

  return error ? error.msg : undefined;
};

/**
 * Gets the first error message for a specific field.
 */
ErrorBag.prototype.first = function first (field, scope) {
    if ( scope === void 0 ) scope = null;

  var selector = isNullOrUndefined(scope) ? field : (scope + "." + field);
  var match = this._match(selector);

  return match && match.msg;
};

/**
 * Returns the first error rule for the specified field
 */
ErrorBag.prototype.firstRule = function firstRule (field, scope) {
  var errors = this.collect(field, scope, false);

  return (errors.length && errors[0].rule) || undefined;
};

/**
 * Checks if the internal array has at least one error for the specified field.
 */
ErrorBag.prototype.has = function has (field, scope) {
    if ( scope === void 0 ) scope = null;

  return !!this.first(field, scope);
};

/**
 * Gets the first error message for a specific field and a rule.
 */
ErrorBag.prototype.firstByRule = function firstByRule (name, rule, scope) {
    if ( scope === void 0 ) scope = null;

  var error = this.collect(name, scope, false).filter(function (e) { return e.rule === rule; })[0];

  return (error && error.msg) || undefined;
};

/**
 * Gets the first error message for a specific field that not match the rule.
 */
ErrorBag.prototype.firstNot = function firstNot (name, rule, scope) {
    if ( rule === void 0 ) rule = 'required';
    if ( scope === void 0 ) scope = null;

  var error = this.collect(name, scope, false).filter(function (e) { return e.rule !== rule; })[0];

  return (error && error.msg) || undefined;
};

/**
 * Removes errors by matching against the id or ids.
 */
ErrorBag.prototype.removeById = function removeById (id) {
  var condition = function (item) { return item.id === id; };
  if (Array.isArray(id)) {
    condition = function (item) { return id.indexOf(item.id) !== -1; };
  }

  for (var i = 0; i < this.items.length; ++i) {
    if (condition(this.items[i])) {
      this.items.splice(i, 1);
      --i;
    }
  }
};

/**
 * Removes all error messages associated with a specific field.
 */
ErrorBag.prototype.remove = function remove (field, scope, vmId) {
  if (isNullOrUndefined(field)) {
    return;
  }

  var selector = isNullOrUndefined(scope) ? String(field) : (scope + "." + field);
  var ref = this._makeCandidateFilters(selector);
    var isPrimary = ref.isPrimary;
    var isAlt = ref.isAlt;
  var matches = function (item) { return isPrimary(item) || isAlt(item); };
  var shouldRemove = function (item) {
    if (isNullOrUndefined(vmId)) { return matches(item); }

    return matches(item) && item.vmId === vmId;
  };

  for (var i = 0; i < this.items.length; ++i) {
    if (shouldRemove(this.items[i])) {
      this.items.splice(i, 1);
      --i;
    }
  }
};

ErrorBag.prototype._makeCandidateFilters = function _makeCandidateFilters (selector) {
    var this$1 = this;

  var matchesRule = function () { return true; };
  var matchesScope = function () { return true; };
  var matchesName = function () { return true; };
  var matchesVM = function () { return true; };

  var ref = parseSelector(selector);
    var id = ref.id;
    var rule = ref.rule;
    var scope = ref.scope;
    var name = ref.name;

  if (rule) {
    matchesRule = function (item) { return item.rule === rule; };
  }

  // match by id, can be combined with rule selection.
  if (id) {
    return {
      isPrimary: function (item) { return matchesRule(item) && (function (item) { return id === item.id; }); },
      isAlt: function () { return false; }
    };
  }

  if (isNullOrUndefined(scope)) {
    // if no scope specified, make sure the found error has no scope.
    matchesScope = function (item) { return isNullOrUndefined(item.scope); };
  } else {
    matchesScope = function (item) { return item.scope === scope; };
  }

  if (!isNullOrUndefined(name) && name !== '*') {
    matchesName = function (item) { return item.field === name; };
  }

  if (!isNullOrUndefined(this.vmId)) {
    matchesVM = function (item) { return item.vmId === this$1.vmId; };
  }

  // matches the first candidate.
  var isPrimary = function (item) {
    return matchesVM(item) && matchesName(item) && matchesRule(item) && matchesScope(item);
  };

  // matches a second candidate, which is a field with a name containing the '.' character.
  var isAlt = function (item) {
    return matchesVM(item) && matchesRule(item) && item.field === (scope + "." + name);
  };

  return {
    isPrimary: isPrimary,
    isAlt: isAlt
  };
};

ErrorBag.prototype._match = function _match (selector) {
  if (isNullOrUndefined(selector)) {
    return undefined;
  }

  var ref = this._makeCandidateFilters(selector);
    var isPrimary = ref.isPrimary;
    var isAlt = ref.isAlt;

  return this.items.reduce(function (prev, item, idx, arr) {
    var isLast = idx === arr.length - 1;
    if (prev.primary) {
      return isLast ? prev.primary : prev;
    }

    if (isPrimary(item)) {
      prev.primary = item;
    }

    if (isAlt(item)) {
      prev.alt = item;
    }

    // keep going.
    if (!isLast) {
      return prev;
    }

    return prev.primary || prev.alt;
  }, {});
};

var DEFAULT_CONFIG = {
  locale: 'en',
  delay: 0,
  errorBagName: 'errors',
  dictionary: null,
  fieldsBagName: 'fields',
  classes: false,
  classNames: null,
  events: 'input',
  inject: true,
  fastExit: true,
  aria: true,
  validity: false,
  mode: 'aggressive',
  useConstraintAttrs: true,
  i18n: null,
  i18nRootKey: 'validation'
};

var currentConfig = assign({}, DEFAULT_CONFIG);

var resolveConfig = function (ctx) {
  var selfConfig = getPath('$options.$_veeValidate', ctx, {});

  return assign({}, currentConfig, selfConfig);
};

var getConfig = function () { return currentConfig; };

var setConfig = function (newConf) {
  currentConfig = assign({}, currentConfig, newConf);
};

// VNode Utils

// Gets the model object on the vnode.
function findModel (vnode) {
  if (!vnode.data) {
    return null;
  }

  // Component Model
  if (vnode.data.model) {
    return vnode.data.model;
  }

  return !!(vnode.data.directives) && find(vnode.data.directives, function (d) { return d.name === 'model'; });
}

function extractChildren (vnode) {
  if (Array.isArray(vnode)) {
    return vnode;
  }

  if (Array.isArray(vnode.children)) {
    return vnode.children;
  }

  if (vnode.componentOptions && Array.isArray(vnode.componentOptions.children)) {
    return vnode.componentOptions.children;
  }

  return [];
}

function extractVNodes (vnode) {
  if (findModel(vnode)) {
    return [vnode];
  }

  var children = extractChildren(vnode);

  return children.reduce(function (nodes, node) {
    var candidates = extractVNodes(node);
    if (candidates.length) {
      nodes.push.apply(nodes, candidates);
    }

    return nodes;
  }, []);
}

// Resolves v-model config if exists.
function findModelConfig (vnode) {
  if (!vnode.componentOptions) { return null; }

  return vnode.componentOptions.Ctor.options.model;
}
// Adds a listener to vnode listener object.
function mergeVNodeListeners (obj, eventName, handler) {
  // Has a single listener, convert to array.
  if (isCallable(obj[eventName])) {
    var prevHandler = obj[eventName];
    obj[eventName] = [prevHandler];
  }

  // no listeners, create the array.
  if (isNullOrUndefined(obj[eventName])) {
    obj[eventName] = [];
  }

  obj[eventName].push(handler);
}

// Adds a listener to a native HTML vnode.
function addNativeNodeListener (node, eventName, handler) {
  if (isNullOrUndefined(node.data.on)) {
    node.data.on = {};
  }

  mergeVNodeListeners(node.data.on, eventName, handler);
}

// Adds a listener to a Vue component vnode.
function addComponentNodeListener (node, eventName, handler) {
  /* istanbul ignore next */
  if (!node.componentOptions.listeners) {
    node.componentOptions.listeners = {};
  }

  mergeVNodeListeners(node.componentOptions.listeners, eventName, handler);
}
function addVNodeListener (vnode, eventName, handler) {
  if (vnode.componentOptions) {
    addComponentNodeListener(vnode, eventName, handler);
    return;
  }

  addNativeNodeListener(vnode, eventName, handler);
}
// Determines if `change` should be used over `input` for listeners.
function getInputEventName (vnode, model) {
  // Is a component.
  if (vnode.componentOptions) {
    var ref = findModelConfig(vnode) || { event: 'input' };
    var event = ref.event;

    return event;
  }

  // Lazy Models and select tag typically use change event
  if ((model && model.modifiers && model.modifiers.lazy) || vnode.tag === 'select') {
    return 'change';
  }

  // is a textual-type input.
  if (vnode.data.attrs && isTextInput({ type: vnode.data.attrs.type || 'text' })) {
    return 'input';
  }

  return 'change';
}

function normalizeSlots (slots, ctx) {
  return Object.keys(slots).reduce(function (arr, key) {
    slots[key].forEach(function (vnode) {
      if (!vnode.context) {
        slots[key].context = ctx;
        if (!vnode.data) {
          vnode.data = {};
        }
        vnode.data.slot = key;
      }
    });

    return arr.concat(slots[key]);
  }, []);
}
function createRenderless (h, children) {
  // Only render the first item of the node.
  if (Array.isArray(children) && children[0]) {
    return children[0];
  }

  // a single node.
  if (children) {
    return children;
  }

  // No slots, render nothing.
  return h();
}

/**
 * Generates the options required to construct a field.
 */
var Resolver = function Resolver () {};

Resolver.generate = function generate (el, binding, vnode) {
  var model = Resolver.resolveModel(binding, vnode);
  var options = resolveConfig(vnode.context);

  return {
    name: Resolver.resolveName(el, vnode),
    el: el,
    listen: !binding.modifiers.disable,
    bails: binding.modifiers.bails ? true : (binding.modifiers.continues === true ? false : undefined),
    scope: Resolver.resolveScope(el, binding, vnode),
    vm: vnode.context,
    expression: binding.value,
    component: vnode.componentInstance,
    classes: options.classes,
    classNames: options.classNames,
    getter: Resolver.resolveGetter(el, vnode, model),
    events: Resolver.resolveEvents(el, vnode) || options.events,
    model: model,
    delay: Resolver.resolveDelay(el, vnode, options),
    rules: Resolver.resolveRules(el, binding, vnode),
    immediate: !!binding.modifiers.initial || !!binding.modifiers.immediate,
    persist: !!binding.modifiers.persist,
    validity: options.validity && !vnode.componentInstance,
    aria: options.aria && !vnode.componentInstance,
    initialValue: Resolver.resolveInitialValue(vnode)
  };
};

Resolver.getCtorConfig = function getCtorConfig (vnode) {
  if (!vnode.componentInstance) { return null; }

  var config = getPath('componentInstance.$options.$_veeValidate', vnode);

  return config;
};

/**
 * Resolves the rules defined on an element.
 */
Resolver.resolveRules = function resolveRules (el, binding, vnode) {
  var rules = '';
  if (!binding.value && (!binding || !binding.expression)) {
    rules = getDataAttribute(el, 'rules');
  }

  if (binding.value && includes(['string', 'object'], typeof binding.value.rules)) {
    rules = binding.value.rules;
  } else if (binding.value) {
    rules = binding.value;
  }

  if (vnode.componentInstance) {
    return rules;
  }

  // If validity is disabled, ignore field rules.
  var normalized = normalizeRules(rules);
  if (!getConfig().useConstraintAttrs) {
    return normalized;
  }

  return assign({}, fillRulesFromElement(el, {}), normalized);
};

/**
 * @param {*} vnode
 */
Resolver.resolveInitialValue = function resolveInitialValue (vnode) {
  var model = vnode.data.model || find(vnode.data.directives, function (d) { return d.name === 'model'; });

  return model && model.value;
};

/**
 * Resolves the delay value.
 * @param {*} el
 * @param {*} vnode
 * @param {Object} options
 */
Resolver.resolveDelay = function resolveDelay (el, vnode, options) {
  var delay = getDataAttribute(el, 'delay');
  var globalDelay = (options && 'delay' in options) ? options.delay : 0;

  if (!delay && vnode.componentInstance && vnode.componentInstance.$attrs) {
    delay = vnode.componentInstance.$attrs['data-vv-delay'];
  }

  if (!isObject(globalDelay)) {
    return deepParseInt(delay || globalDelay);
  }

  if (!isNullOrUndefined(delay)) {
    globalDelay.input = delay;
  }

  return deepParseInt(globalDelay);
};

/**
 * Resolves the events to validate in response to.
 * @param {*} el
 * @param {*} vnode
 */
Resolver.resolveEvents = function resolveEvents (el, vnode) {
  // resolve it from the root element.
  var events = getDataAttribute(el, 'validate-on');

  // resolve from data-vv-validate-on if its a vue component.
  if (!events && vnode.componentInstance && vnode.componentInstance.$attrs) {
    events = vnode.componentInstance.$attrs['data-vv-validate-on'];
  }

  // resolve it from $_veeValidate options.
  if (!events && vnode.componentInstance) {
    var config = Resolver.getCtorConfig(vnode);
    events = config && config.events;
  }

  if (!events && getConfig().events) {
    events = getConfig().events;
  }

  // resolve the model event if its configured for custom components.
  if (events && vnode.componentInstance && includes(events, 'input')) {
    var ref = vnode.componentInstance.$options.model || { event: 'input' };
      var event = ref.event;
    // if the prop was configured but not the model.
    if (!event) {
      return events;
    }

    events = events.replace('input', event);
  }

  return events;
};

/**
 * Resolves the scope for the field.
 * @param {*} el
 * @param {*} binding
 */
Resolver.resolveScope = function resolveScope (el, binding, vnode) {
    if ( vnode === void 0 ) vnode = {};

  var scope = null;
  if (vnode.componentInstance && isNullOrUndefined(scope)) {
    scope = vnode.componentInstance.$attrs && vnode.componentInstance.$attrs['data-vv-scope'];
  }

  return !isNullOrUndefined(scope) ? scope : getScope(el);
};

/**
 * Checks if the node directives contains a v-model or a specified arg.
 * Args take priority over models.
 *
 * @return {Object}
 */
Resolver.resolveModel = function resolveModel (binding, vnode) {
  if (binding.arg) {
    return { expression: binding.arg };
  }

  var model = findModel(vnode);
  if (!model) {
    return null;
  }

  // https://github.com/vuejs/vue/blob/dev/src/core/util/lang.js#L26
  var watchable = !/[^\w.$]/.test(model.expression) && hasPath(model.expression, vnode.context);
  var lazy = !!(model.modifiers && model.modifiers.lazy);

  if (!watchable) {
    return { expression: null, lazy: lazy };
  }

  return { expression: model.expression, lazy: lazy };
};

/**
 * Resolves the field name to trigger validations.
 * @return {String} The field name.
 */
Resolver.resolveName = function resolveName (el, vnode) {
  var name = getDataAttribute(el, 'name');

  if (!name && !vnode.componentInstance) {
    return el.name;
  }

  if (!name && vnode.componentInstance && vnode.componentInstance.$attrs) {
    name = vnode.componentInstance.$attrs['data-vv-name'] || vnode.componentInstance.$attrs['name'];
  }

  if (!name && vnode.componentInstance) {
    var config = Resolver.getCtorConfig(vnode);
    if (config && isCallable(config.name)) {
      var boundGetter = config.name.bind(vnode.componentInstance);

      return boundGetter();
    }

    return vnode.componentInstance.name;
  }

  return name;
};

/**
 * Returns a value getter input type.
 */
Resolver.resolveGetter = function resolveGetter (el, vnode, model) {
  if (model && model.expression) {
    return function () {
      return getPath(model.expression, vnode.context);
    };
  }

  if (vnode.componentInstance) {
    var path = getDataAttribute(el, 'value-path') || (vnode.componentInstance.$attrs && vnode.componentInstance.$attrs['data-vv-value-path']);
    if (path) {
      return function () {
        return getPath(path, vnode.componentInstance);
      };
    }

    var config = Resolver.getCtorConfig(vnode);
    if (config && isCallable(config.value)) {
      var boundGetter = config.value.bind(vnode.componentInstance);

      return function () {
        return boundGetter();
      };
    }

    var ref = vnode.componentInstance.$options.model || { prop: 'value' };
      var prop = ref.prop;

    return function () {
      return vnode.componentInstance[prop];
    };
  }

  switch (el.type) {
  case 'checkbox': return function () {
    var els = document.querySelectorAll(("input[name=\"" + (el.name) + "\"]"));

    els = toArray(els).filter(function (el) { return el.checked; });
    if (!els.length) { return undefined; }

    return els.map(function (checkbox) { return checkbox.value; });
  };
  case 'radio': return function () {
    var els = document.querySelectorAll(("input[name=\"" + (el.name) + "\"]"));
    var elm = find(els, function (el) { return el.checked; });

    return elm && elm.value;
  };
  case 'file': return function (context) {
    return toArray(el.files);
  };
  case 'select-multiple': return function () {
    return toArray(el.options).filter(function (opt) { return opt.selected; }).map(function (opt) { return opt.value; });
  };
  default: return function () {
    return el && el.value;
  };
  }
};

var RULES = {};

var RuleContainer = function RuleContainer () {};

var staticAccessors = { rules: { configurable: true } };

RuleContainer.add = function add (name, ref) {
    var validate = ref.validate;
    var options = ref.options;
    var paramNames = ref.paramNames;

  RULES[name] = {
    validate: validate,
    options: options,
    paramNames: paramNames
  };
};

staticAccessors.rules.get = function () {
  return RULES;
};

RuleContainer.has = function has (name) {
  return !!RULES[name];
};

RuleContainer.isImmediate = function isImmediate (name) {
  return !!(RULES[name] && RULES[name].options.immediate);
};

RuleContainer.isRequireRule = function isRequireRule (name) {
  return !!(RULES[name] && RULES[name].options.computesRequired);
};

RuleContainer.isTargetRule = function isTargetRule (name) {
  return !!(RULES[name] && RULES[name].options.hasTarget);
};

RuleContainer.remove = function remove (ruleName) {
  delete RULES[ruleName];
};

RuleContainer.getParamNames = function getParamNames (ruleName) {
  return RULES[ruleName] && RULES[ruleName].paramNames;
};

RuleContainer.getOptions = function getOptions (ruleName) {
  return RULES[ruleName] && RULES[ruleName].options;
};

RuleContainer.getValidatorMethod = function getValidatorMethod (ruleName) {
  return RULES[ruleName] ? RULES[ruleName].validate : null;
};

Object.defineProperties( RuleContainer, staticAccessors );

// 

var isEvent = function (evt) {
  return (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) || (evt && evt.srcElement);
};

var normalizeEvents = function (evts) {
  if (!evts) { return []; }

  return (typeof evts === 'string' ? evts.split('|') : evts);
};

var supportsPassive = true;

var detectPassiveSupport = function () {
  try {
    var opts = Object.defineProperty({}, 'passive', {
      get: function get () {
        supportsPassive = true;
      }
    });
    window.addEventListener('testPassive', null, opts);
    window.removeEventListener('testPassive', null, opts);
  } catch (e) {
    supportsPassive = false;
  }
  return supportsPassive;
};

var addEventListener = function (el, eventName, cb) {
  el.addEventListener(eventName, cb, supportsPassive ? { passive: true } : false);
};

// 

var DEFAULT_OPTIONS = {
  targetOf: null,
  immediate: false,
  persist: false,
  scope: null,
  listen: true,
  name: null,
  rules: {},
  vm: null,
  classes: false,
  validity: true,
  aria: true,
  events: 'input|blur',
  delay: 0,
  classNames: {
    touched: 'touched', // the control has been blurred
    untouched: 'untouched', // the control hasn't been blurred
    valid: 'valid', // model is valid
    invalid: 'invalid', // model is invalid
    pristine: 'pristine', // control has not been interacted with
    dirty: 'dirty' // control has been interacted with
  }
};

var Field = function Field (options) {
  if ( options === void 0 ) options = {};

  this.id = uniqId();
  this.el = options.el;
  this.updated = false;
  this.vmId = options.vmId;
  defineNonReactive(this, 'dependencies', []);
  defineNonReactive(this, 'watchers', []);
  defineNonReactive(this, 'events', []);
  this.delay = 0;
  this.rules = {};
  this.forceRequired = false;
  this._cacheId(options);
  this.classNames = assign({}, DEFAULT_OPTIONS.classNames);
  options = assign({}, DEFAULT_OPTIONS, options);
  this._delay = !isNullOrUndefined(options.delay) ? options.delay : 0; // cache initial delay
  this.validity = options.validity;
  this.aria = options.aria;
  this.flags = options.flags || createFlags();
  defineNonReactive(this, 'vm', options.vm);
  defineNonReactive(this, 'componentInstance', options.component);
  this.ctorConfig = this.componentInstance ? getPath('$options.$_veeValidate', this.componentInstance) : undefined;
  this.update(options);
  // set initial value.
  this.initialValue = this.value;
  this.updated = false;
};

var prototypeAccessors$1 = { validator: { configurable: true },isRequired: { configurable: true },isDisabled: { configurable: true },alias: { configurable: true },value: { configurable: true },bails: { configurable: true },rejectsFalse: { configurable: true } };

prototypeAccessors$1.validator.get = function () {
  if (!this.vm || !this.vm.$validator) {
    return { validate: function () { return Promise.resolve(true); } };
  }

  return this.vm.$validator;
};

prototypeAccessors$1.isRequired.get = function () {
  return !!this.rules.required || this.forceRequired;
};

prototypeAccessors$1.isDisabled.get = function () {
  return !!(this.el && this.el.disabled);
};

/**
 * Gets the display name (user-friendly name).
 */
prototypeAccessors$1.alias.get = function () {
  if (this._alias) {
    return this._alias;
  }

  var alias = null;
  if (this.ctorConfig && this.ctorConfig.alias) {
    alias = isCallable(this.ctorConfig.alias) ? this.ctorConfig.alias.call(this.componentInstance) : this.ctorConfig.alias;
  }

  if (!alias && this.el) {
    alias = getDataAttribute(this.el, 'as');
  }

  if (!alias && this.componentInstance) {
    return this.componentInstance.$attrs && this.componentInstance.$attrs['data-vv-as'];
  }

  return alias;
};

/**
 * Gets the input value.
 */

prototypeAccessors$1.value.get = function () {
  if (!isCallable(this.getter)) {
    return undefined;
  }

  return this.getter();
};

prototypeAccessors$1.bails.get = function () {
  return this._bails;
};

/**
 * If the field rejects false as a valid value for the required rule.
 */

prototypeAccessors$1.rejectsFalse.get = function () {
  if (this.componentInstance && this.ctorConfig) {
    return !!this.ctorConfig.rejectsFalse;
  }

  if (!this.el) {
    return false;
  }

  return this.el.type === 'checkbox';
};

/**
 * Determines if the instance matches the options provided.
 */
Field.prototype.matches = function matches (options) {
    var this$1 = this;

  if (!options) {
    return true;
  }

  if (options.id) {
    return this.id === options.id;
  }

  var matchesComponentId = isNullOrUndefined(options.vmId) ? function () { return true; } : function (id) { return id === this$1.vmId; };
  if (!matchesComponentId(options.vmId)) {
    return false;
  }

  if (options.name === undefined && options.scope === undefined) {
    return true;
  }

  if (options.scope === undefined) {
    return this.name === options.name;
  }

  if (options.name === undefined) {
    return this.scope === options.scope;
  }

  return options.name === this.name && options.scope === this.scope;
};

/**
 * Caches the field id.
 */
Field.prototype._cacheId = function _cacheId (options) {
  if (this.el && !options.targetOf) {
    this.el._veeValidateId = this.id;
  }
};

/**
 * Keeps a reference of the most current validation run.
 */
Field.prototype.waitFor = function waitFor (pendingPromise) {
  this._waitingFor = pendingPromise;
};

Field.prototype.isWaitingFor = function isWaitingFor (promise) {
  return this._waitingFor === promise;
};

/**
 * Updates the field with changed data.
 */
Field.prototype.update = function update (options) {
    var this$1 = this;

  this.targetOf = options.targetOf || null;
  this.immediate = options.immediate || this.immediate || false;
  this.persist = options.persist || this.persist || false;

  // update errors scope if the field scope was changed.
  if (!isNullOrUndefined(options.scope) && options.scope !== this.scope && isCallable(this.validator.update)) {
    this.validator.update(this.id, { scope: options.scope });
  }
  this.scope = !isNullOrUndefined(options.scope) ? options.scope
    : !isNullOrUndefined(this.scope) ? this.scope : null;
  this.name = (!isNullOrUndefined(options.name) ? String(options.name) : options.name) || this.name || null;
  this.rules = options.rules !== undefined ? normalizeRules(options.rules) : this.rules;
  this._bails = options.bails !== undefined ? options.bails : this._bails;
  this.model = options.model || this.model;
  this.listen = options.listen !== undefined ? options.listen : this.listen;
  this.classes = (options.classes || this.classes || false) && !this.componentInstance;
  this.classNames = isObject(options.classNames) ? merge(this.classNames, options.classNames) : this.classNames;
  this.getter = isCallable(options.getter) ? options.getter : this.getter;
  this._alias = options.alias || this._alias;
  this.events = (options.events) ? normalizeEvents(options.events) : this.events;
  this.delay = makeDelayObject(this.events, options.delay || this.delay, this._delay);
  this.updateDependencies();
  this.addActionListeners();

  if ("development" !== 'production' && !this.name && !this.targetOf) {
    warn('A field is missing a "name" or "data-vv-name" attribute');
  }

  // update required flag flags
  if (options.rules !== undefined) {
    this.flags.required = this.isRequired;
  }

  if (Object.keys(options.rules || {}).length === 0 && this.updated) {
    var resetFlag = this.flags.validated;
    this.validator.validate(("#" + (this.id))).then(function () {
      this$1.flags.validated = resetFlag;
    });
  }

  // validate if it was validated before and field was updated and there was a rules mutation.
  if (this.flags.validated && options.rules !== undefined && this.updated) {
    this.validator.validate(("#" + (this.id)));
  }

  this.updated = true;
  this.addValueListeners();

  // no need to continue.
  if (!this.el) {
    return;
  }
  this.updateClasses();
  this.updateAriaAttrs();
};

/**
 * Resets field flags and errors.
 */
Field.prototype.reset = function reset () {
    var this$1 = this;

  if (this._cancellationToken) {
    this._cancellationToken.cancelled = true;
    delete this._cancellationToken;
  }

  var defaults = createFlags();
  Object.keys(this.flags).filter(function (flag) { return flag !== 'required'; }).forEach(function (flag) {
    this$1.flags[flag] = defaults[flag];
  });

  // update initial value
  this.initialValue = this.value;
  this.flags.changed = false;

  this.addValueListeners();
  this.addActionListeners();
  this.updateClasses(true);
  this.updateAriaAttrs();
  this.updateCustomValidity();
};

/**
 * Sets the flags and their negated counterparts, and updates the classes and re-adds action listeners.
 */
Field.prototype.setFlags = function setFlags (flags) {
    var this$1 = this;

  var negated = {
    pristine: 'dirty',
    dirty: 'pristine',
    valid: 'invalid',
    invalid: 'valid',
    touched: 'untouched',
    untouched: 'touched'
  };

  Object.keys(flags).forEach(function (flag) {
    this$1.flags[flag] = flags[flag];
    // if it has a negation and was not specified, set it as well.
    if (negated[flag] && flags[negated[flag]] === undefined) {
      this$1.flags[negated[flag]] = !flags[flag];
    }
  });

  if (
    flags.untouched !== undefined ||
    flags.touched !== undefined ||
    flags.dirty !== undefined ||
    flags.pristine !== undefined
  ) {
    this.addActionListeners();
  }
  this.updateClasses();
  this.updateAriaAttrs();
  this.updateCustomValidity();
};

/**
 * Determines if the field requires references to target fields.
*/
Field.prototype.updateDependencies = function updateDependencies () {
    var this$1 = this;

  // reset dependencies.
  this.dependencies.forEach(function (d) { return d.field.destroy(); });
  this.dependencies = [];

  // we get the selectors for each field.
  var fields = Object.keys(this.rules).reduce(function (prev, r) {
    if (RuleContainer.isTargetRule(r)) {
      prev.push({ selector: this$1.rules[r][0], name: r });
    }

    return prev;
  }, []);

  if (!fields.length || !this.vm || !this.vm.$el) { return; }

  // must be contained within the same component, so we use the vm root element constrain our dom search.
  fields.forEach(function (ref$1) {
      var selector = ref$1.selector;
      var name = ref$1.name;

    var ref = this$1.vm.$refs[selector];
    var el = Array.isArray(ref) ? ref[0] : ref;
    if (!el) {
      return;
    }

    var options = {
      vm: this$1.vm,
      classes: this$1.classes,
      classNames: this$1.classNames,
      delay: this$1.delay,
      scope: this$1.scope,
      events: this$1.events.join('|'),
      immediate: this$1.immediate,
      targetOf: this$1.id
    };

    // probably a component.
    if (isCallable(el.$watch)) {
      options.component = el;
      options.el = el.$el;
      options.getter = Resolver.resolveGetter(el.$el, el.$vnode);
    } else {
      options.el = el;
      options.getter = Resolver.resolveGetter(el, {});
    }

    this$1.dependencies.push({ name: name, field: new Field(options) });
  });
};

/**
 * Removes listeners.
 */
Field.prototype.unwatch = function unwatch (tag) {
    if ( tag === void 0 ) tag = null;

  if (!tag) {
    this.watchers.forEach(function (w) { return w.unwatch(); });
    this.watchers = [];
    return;
  }

  this.watchers.filter(function (w) { return tag.test(w.tag); }).forEach(function (w) { return w.unwatch(); });
  this.watchers = this.watchers.filter(function (w) { return !tag.test(w.tag); });
};

/**
 * Updates the element classes depending on each field flag status.
 */
Field.prototype.updateClasses = function updateClasses (isReset) {
    var this$1 = this;
    if ( isReset === void 0 ) isReset = false;

  if (!this.classes || this.isDisabled) { return; }
  var applyClasses = function (el) {
    toggleClass(el, this$1.classNames.dirty, this$1.flags.dirty);
    toggleClass(el, this$1.classNames.pristine, this$1.flags.pristine);
    toggleClass(el, this$1.classNames.touched, this$1.flags.touched);
    toggleClass(el, this$1.classNames.untouched, this$1.flags.untouched);

    // remove valid/invalid classes on reset.
    if (isReset) {
      toggleClass(el, this$1.classNames.valid, false);
      toggleClass(el, this$1.classNames.invalid, false);
    }

    // make sure we don't set any classes if the state is undetermined.
    if (!isNullOrUndefined(this$1.flags.valid) && this$1.flags.validated) {
      toggleClass(el, this$1.classNames.valid, this$1.flags.valid);
    }

    if (!isNullOrUndefined(this$1.flags.invalid) && this$1.flags.validated) {
      toggleClass(el, this$1.classNames.invalid, this$1.flags.invalid);
    }
  };

  if (!isCheckboxOrRadioInput(this.el)) {
    applyClasses(this.el);
    return;
  }

  var els = document.querySelectorAll(("input[name=\"" + (this.el.name) + "\"]"));
  toArray(els).forEach(applyClasses);
};

/**
 * Adds the listeners required for automatic classes and some flags.
 */
Field.prototype.addActionListeners = function addActionListeners () {
    var this$1 = this;

  // remove previous listeners.
  this.unwatch(/class/);

  if (!this.el) { return; }

  var onBlur = function () {
    this$1.flags.touched = true;
    this$1.flags.untouched = false;
    if (this$1.classes) {
      toggleClass(this$1.el, this$1.classNames.touched, true);
      toggleClass(this$1.el, this$1.classNames.untouched, false);
    }

    // only needed once.
    this$1.unwatch(/^class_blur$/);
  };

  var inputEvent = isTextInput(this.el) ? 'input' : 'change';
  var onInput = function () {
    this$1.flags.dirty = true;
    this$1.flags.pristine = false;
    if (this$1.classes) {
      toggleClass(this$1.el, this$1.classNames.pristine, false);
      toggleClass(this$1.el, this$1.classNames.dirty, true);
    }

    // only needed once.
    this$1.unwatch(/^class_input$/);
  };

  if (this.componentInstance && isCallable(this.componentInstance.$once)) {
    this.componentInstance.$once('input', onInput);
    this.componentInstance.$once('blur', onBlur);
    this.watchers.push({
      tag: 'class_input',
      unwatch: function () {
        this$1.componentInstance.$off('input', onInput);
      }
    });
    this.watchers.push({
      tag: 'class_blur',
      unwatch: function () {
        this$1.componentInstance.$off('blur', onBlur);
      }
    });
    return;
  }

  if (!this.el) { return; }

  addEventListener(this.el, inputEvent, onInput);
  // Checkboxes and radio buttons on Mac don't emit blur naturally, so we listen on click instead.
  var blurEvent = isCheckboxOrRadioInput(this.el) ? 'change' : 'blur';
  addEventListener(this.el, blurEvent, onBlur);
  this.watchers.push({
    tag: 'class_input',
    unwatch: function () {
      this$1.el.removeEventListener(inputEvent, onInput);
    }
  });

  this.watchers.push({
    tag: 'class_blur',
    unwatch: function () {
      this$1.el.removeEventListener(blurEvent, onBlur);
    }
  });
};

Field.prototype.checkValueChanged = function checkValueChanged () {
  // handle some people initialize the value to null, since text inputs have empty string value.
  if (this.initialValue === null && this.value === '' && isTextInput(this.el)) {
    return false;
  }

  return this.value !== this.initialValue;
};

/**
 * Determines the suitable primary event to listen for.
 */
Field.prototype._determineInputEvent = function _determineInputEvent () {
  // if its a custom component, use the customized model event or the input event.
  if (this.componentInstance) {
    return (this.componentInstance.$options.model && this.componentInstance.$options.model.event) || 'input';
  }

  if (this.model && this.model.lazy) {
    return 'change';
  }

  if (isTextInput(this.el)) {
    return 'input';
  }

  return 'change';
};

/**
 * Determines the list of events to listen to.
 */
Field.prototype._determineEventList = function _determineEventList (defaultInputEvent) {
    var this$1 = this;

  // if no event is configured, or it is a component or a text input then respect the user choice.
  if (!this.events.length || this.componentInstance || isTextInput(this.el)) {
    return [].concat( this.events ).map(function (evt) {
      if (evt === 'input' && this$1.model && this$1.model.lazy) {
        return 'change';
      }

      return evt;
    });
  }

  // force suitable event for non-text type fields.
  return this.events.map(function (e) {
    if (e === 'input') {
      return defaultInputEvent;
    }

    return e;
  });
};

/**
 * Adds the listeners required for validation.
 */
Field.prototype.addValueListeners = function addValueListeners () {
    var this$1 = this;

  this.unwatch(/^input_.+/);
  if (!this.listen || !this.el) { return; }

  var token = { cancelled: false };
  var fn = this.targetOf ? function () {
    var target = this$1.validator._resolveField(("#" + (this$1.targetOf)));
    if (target && target.flags.validated) {
      this$1.validator.validate(("#" + (this$1.targetOf)));
    }
  } : function () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

    // if its a DOM event, resolve the value, otherwise use the first parameter as the value.
    if (args.length === 0 || isEvent(args[0])) {
      args[0] = this$1.value;
    }

    this$1.flags.pending = true;
    this$1._cancellationToken = token;
    this$1.validator.validate(("#" + (this$1.id)), args[0]);
  };

  var inputEvent = this._determineInputEvent();
  var events = this._determineEventList(inputEvent);

  // if on input validation is requested.
  if (includes(events, inputEvent)) {
    var ctx = null;
    var expression = null;
    var watchCtxVm = false;
    // if its watchable from the context vm.
    if (this.model && this.model.expression) {
      ctx = this.vm;
      expression = this.model.expression;
      watchCtxVm = true;
    }

    // watch it from the custom component vm instead.
    if (!expression && this.componentInstance && this.componentInstance.$options.model) {
      ctx = this.componentInstance;
      expression = this.componentInstance.$options.model.prop || 'value';
    }

    if (ctx && expression) {
      var debouncedFn = debounce(fn, this.delay[inputEvent], token);
      var unwatch = ctx.$watch(expression, debouncedFn);
      this.watchers.push({
        tag: 'input_model',
        unwatch: function () {
          this$1.vm.$nextTick(function () {
            unwatch();
          });
        }
      });

      // filter out input event when we are watching from the context vm.
      if (watchCtxVm) {
        events = events.filter(function (e) { return e !== inputEvent; });
      }
    }
  }

  // Add events.
  events.forEach(function (e) {
    var debouncedFn = debounce(fn, this$1.delay[e], token);

    this$1._addComponentEventListener(e, debouncedFn);
    this$1._addHTMLEventListener(e, debouncedFn);
  });
};

Field.prototype._addComponentEventListener = function _addComponentEventListener (evt, validate) {
    var this$1 = this;

  if (!this.componentInstance) { return; }

  this.componentInstance.$on(evt, validate);
  this.watchers.push({
    tag: 'input_vue',
    unwatch: function () {
      this$1.componentInstance.$off(evt, validate);
    }
  });
};

Field.prototype._addHTMLEventListener = function _addHTMLEventListener (evt, validate) {
    var this$1 = this;

  if (!this.el || this.componentInstance) { return; }

  // listen for the current element.
  var addListener = function (el) {
    addEventListener(el, evt, validate);
    this$1.watchers.push({
      tag: 'input_native',
      unwatch: function () {
        el.removeEventListener(evt, validate);
      }
    });
  };

  addListener(this.el);
  if (!isCheckboxOrRadioInput(this.el)) {
    return;
  }

  var els = document.querySelectorAll(("input[name=\"" + (this.el.name) + "\"]"));
  toArray(els).forEach(function (el) {
    // skip if it is added by v-validate and is not the current element.
    if (el._veeValidateId && el !== this$1.el) {
      return;
    }

    addListener(el);
  });
};

/**
 * Updates aria attributes on the element.
 */
Field.prototype.updateAriaAttrs = function updateAriaAttrs () {
    var this$1 = this;

  if (!this.aria || !this.el || !isCallable(this.el.setAttribute)) { return; }

  var applyAriaAttrs = function (el) {
    el.setAttribute('aria-required', this$1.isRequired ? 'true' : 'false');
    el.setAttribute('aria-invalid', this$1.flags.invalid ? 'true' : 'false');
  };

  if (!isCheckboxOrRadioInput(this.el)) {
    applyAriaAttrs(this.el);
    return;
  }

  var els = document.querySelectorAll(("input[name=\"" + (this.el.name) + "\"]"));
  toArray(els).forEach(applyAriaAttrs);
};

/**
 * Updates the custom validity for the field.
 */
Field.prototype.updateCustomValidity = function updateCustomValidity () {
  if (!this.validity || !this.el || !isCallable(this.el.setCustomValidity) || !this.validator.errors) { return; }

  this.el.setCustomValidity(this.flags.valid ? '' : (this.validator.errors.firstById(this.id) || ''));
};

/**
 * Removes all listeners.
 */
Field.prototype.destroy = function destroy () {
  // ignore the result of any ongoing validation.
  if (this._cancellationToken) {
    this._cancellationToken.cancelled = true;
  }

  this.unwatch();
  this.dependencies.forEach(function (d) { return d.field.destroy(); });
  this.dependencies = [];
};

Object.defineProperties( Field.prototype, prototypeAccessors$1 );

// 

var FieldBag = function FieldBag (items) {
  if ( items === void 0 ) items = [];

  this.items = items || [];
  this.itemsById = this.items.reduce(function (itemsById, item) {
    itemsById[item.id] = item;
    return itemsById;
  }, {});
};

var prototypeAccessors$2 = { length: { configurable: true } };

FieldBag.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
    var this$1 = this;

  var index = 0;
  return {
    next: function () {
      return { value: this$1.items[index++], done: index > this$1.items.length };
    }
  };
};

/**
 * Gets the current items length.
 */

prototypeAccessors$2.length.get = function () {
  return this.items.length;
};

/**
 * Finds the first field that matches the provided matcher object.
 */
FieldBag.prototype.find = function find$1 (matcher) {
  return find(this.items, function (item) { return item.matches(matcher); });
};

/**
 * Finds the field with the given id, using a plain object as a map to link
 * ids to items faster than by looping over the array and matching.
 */
FieldBag.prototype.findById = function findById (id) {
  return this.itemsById[id] || null;
};

/**
 * Filters the items down to the matched fields.
 */
FieldBag.prototype.filter = function filter (matcher) {
  // multiple matchers to be tried.
  if (Array.isArray(matcher)) {
    return this.items.filter(function (item) { return matcher.some(function (m) { return item.matches(m); }); });
  }

  return this.items.filter(function (item) { return item.matches(matcher); });
};

/**
 * Maps the field items using the mapping function.
 */
FieldBag.prototype.map = function map (mapper) {
  return this.items.map(mapper);
};

/**
 * Finds and removes the first field that matches the provided matcher object, returns the removed item.
 */
FieldBag.prototype.remove = function remove (matcher) {
  var item = null;
  if (matcher instanceof Field) {
    item = matcher;
  } else {
    item = this.find(matcher);
  }

  if (!item) { return null; }

  var index = this.items.indexOf(item);
  this.items.splice(index, 1);
  delete this.itemsById[item.id];

  return item;
};

/**
 * Adds a field item to the list.
 */
FieldBag.prototype.push = function push (item) {
  if (! (item instanceof Field)) {
    throw createError('FieldBag only accepts instances of Field that has an id defined.');
  }

  if (!item.id) {
    throw createError('Field id must be defined.');
  }

  if (this.findById(item.id)) {
    throw createError(("Field with id " + (item.id) + " is already added."));
  }

  this.items.push(item);
  this.itemsById[item.id] = item;
};

Object.defineProperties( FieldBag.prototype, prototypeAccessors$2 );

var ScopedValidator = function ScopedValidator (base, vm) {
  this.id = vm._uid;
  this._base = base;
  this._paused = false;

  // create a mirror bag with limited component scope.
  this.errors = new ErrorBag(base.errors, this.id);
};

var prototypeAccessors$3 = { flags: { configurable: true },rules: { configurable: true },fields: { configurable: true },dictionary: { configurable: true },locale: { configurable: true } };

prototypeAccessors$3.flags.get = function () {
    var this$1 = this;

  return this._base.fields.items.filter(function (f) { return f.vmId === this$1.id; }).reduce(function (acc, field) {
    if (field.scope) {
      if (!acc[("$" + (field.scope))]) {
        acc[("$" + (field.scope))] = {};
      }

      acc[("$" + (field.scope))][field.name] = field.flags;
    }

    acc[field.name] = field.flags;

    return acc;
  }, {});
};

prototypeAccessors$3.rules.get = function () {
  return this._base.rules;
};

prototypeAccessors$3.fields.get = function () {
  return new FieldBag(this._base.fields.filter({ vmId: this.id }));
};

prototypeAccessors$3.dictionary.get = function () {
  return this._base.dictionary;
};

prototypeAccessors$3.locale.get = function () {
  return this._base.locale;
};

prototypeAccessors$3.locale.set = function (val) {
  this._base.locale = val;
};

ScopedValidator.prototype.localize = function localize () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base).localize.apply(ref, args);
};

ScopedValidator.prototype.update = function update () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base).update.apply(ref, args);
};

ScopedValidator.prototype.attach = function attach (opts) {
  var attachOpts = assign({}, opts, { vmId: this.id });

  return this._base.attach(attachOpts);
};

ScopedValidator.prototype.pause = function pause () {
  this._paused = true;
};

ScopedValidator.prototype.resume = function resume () {
  this._paused = false;
};

ScopedValidator.prototype.remove = function remove (ruleName) {
  return this._base.remove(ruleName);
};

ScopedValidator.prototype.detach = function detach (name, scope) {
  return this._base.detach(name, scope, this.id);
};

ScopedValidator.prototype.extend = function extend () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base).extend.apply(ref, args);
};

ScopedValidator.prototype.validate = function validate (descriptor, value, opts) {
    if ( opts === void 0 ) opts = {};

  if (this._paused) { return Promise.resolve(true); }

  return this._base.validate(descriptor, value, assign({}, { vmId: this.id }, opts || {}));
};

ScopedValidator.prototype.verify = function verify () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base).verify.apply(ref, args);
};

ScopedValidator.prototype.validateAll = function validateAll (values, opts) {
    if ( opts === void 0 ) opts = {};

  if (this._paused) { return Promise.resolve(true); }

  return this._base.validateAll(values, assign({}, { vmId: this.id }, opts || {}));
};

ScopedValidator.prototype.validateScopes = function validateScopes (opts) {
    if ( opts === void 0 ) opts = {};

  if (this._paused) { return Promise.resolve(true); }

  return this._base.validateScopes(assign({}, { vmId: this.id }, opts || {}));
};

ScopedValidator.prototype.destroy = function destroy () {
  delete this.id;
  delete this._base;
};

ScopedValidator.prototype.reset = function reset (matcher) {
  return this._base.reset(Object.assign({}, matcher || {}, { vmId: this.id }));
};

ScopedValidator.prototype.flag = function flag () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base).flag.apply(ref, args.concat( [this.id] ));
};

ScopedValidator.prototype._resolveField = function _resolveField () {
    var ref;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
  return (ref = this._base)._resolveField.apply(ref, args);
};

Object.defineProperties( ScopedValidator.prototype, prototypeAccessors$3 );

var VALIDATOR = null;

var getValidator = function () {
  return VALIDATOR;
};

var setValidator = function (value) {
  VALIDATOR = value;

  return value;
};

// 

/**
 * Checks if a parent validator instance was requested.
 */
var requestsValidator = function (injections) {
  if (isObject(injections) && injections.$validator) {
    return true;
  }

  return false;
};

var mixin = {
  provide: function provide () {
    if (this.$validator && !isBuiltInComponent(this.$vnode)) {
      return {
        $validator: this.$validator
      };
    }

    return {};
  },
  beforeCreate: function beforeCreate () {
    // if built in do nothing.
    if (isBuiltInComponent(this.$vnode) || this.$options.$__veeInject === false) {
      return;
    }

    // if its a root instance set the config if it exists.
    if (!this.$parent) {
      setConfig(this.$options.$_veeValidate || {});
    }

    var options = resolveConfig(this);

    // if its a root instance, inject anyways, or if it requested a new instance.
    if (!this.$parent || (this.$options.$_veeValidate && /new/.test(this.$options.$_veeValidate.validator))) {
      this.$validator = new ScopedValidator(getValidator(), this);
    }

    var requested = requestsValidator(this.$options.inject);

    // if automatic injection is enabled and no instance was requested.
    if (! this.$validator && options.inject && !requested) {
      this.$validator = new ScopedValidator(getValidator(), this);
    }

    // don't inject errors or fieldBag as no validator was resolved.
    if (!requested && !this.$validator) {
      return;
    }

    // There is a validator but it isn't injected, mark as reactive.
    if (!requested && this.$validator) {
      var Vue = this.$options._base; // the vue constructor.
      Vue.util.defineReactive(this.$validator, 'errors', this.$validator.errors);
    }

    if (!this.$options.computed) {
      this.$options.computed = {};
    }

    this.$options.computed[options.errorBagName || 'errors'] = function errorBagGetter () {
      return this.$validator.errors;
    };
    this.$options.computed[options.fieldsBagName || 'fields'] = function fieldBagGetter () {
      return this.$validator.fields.items.reduce(function (acc, field) {
        if (field.scope) {
          if (!acc[("$" + (field.scope))]) {
            acc[("$" + (field.scope))] = {};
          }

          acc[("$" + (field.scope))][field.name] = field.flags;

          return acc;
        }

        acc[field.name] = field.flags;

        return acc;
      }, {});
    };
  },
  beforeDestroy: function beforeDestroy () {
    if (this.$validator && this._uid === this.$validator.id) {
      this.$validator.errors.clear(); // remove errors generated by this component.
    }
  }
};

// 

/**
 * Finds the requested field by id from the context object.
 */
function findField (el, context) {
  if (!context || !context.$validator) {
    return null;
  }

  return context.$validator.fields.findById(el._veeValidateId);
}
var directive = {
  bind: function bind (el, binding, vnode) {
    var validator = vnode.context.$validator;
    if (!validator) {
      if (true) {
        warn("No validator instance is present on vm, did you forget to inject '$validator'?");
      }

      return;
    }

    var fieldOptions = Resolver.generate(el, binding, vnode);
    validator.attach(fieldOptions);
  },
  inserted: function inserted (el, binding, vnode) {
    var field = findField(el, vnode.context);
    var scope = Resolver.resolveScope(el, binding, vnode);

    // skip if scope hasn't changed.
    if (!field || scope === field.scope) { return; }

    // only update scope.
    field.update({ scope: scope });

    // allows the field to re-evaluated once more in the update hook.
    field.updated = false;
  },
  update: function update (el, binding, vnode) {
    var field = findField(el, vnode.context);

    // make sure we don't do unneccasary work if no important change was done.
    if (!field || (field.updated && isEqual(binding.value, binding.oldValue))) { return; }
    var scope = Resolver.resolveScope(el, binding, vnode);
    var rules = Resolver.resolveRules(el, binding, vnode);

    field.update({
      scope: scope,
      rules: rules
    });
  },
  unbind: function unbind (el, binding, ref) {
    var context = ref.context;

    var field = findField(el, context);
    if (!field) { return; }

    context.$validator.detach(field);
  }
};

// 

var Validator = function Validator (validations, options, pluginContainer) {
  if ( options === void 0 ) options = { fastExit: true };
  if ( pluginContainer === void 0 ) pluginContainer = null;

  this.errors = new ErrorBag();
  this.fields = new FieldBag();
  this._createFields(validations);
  this.paused = false;
  this.fastExit = !isNullOrUndefined(options && options.fastExit) ? options.fastExit : true;
  this.$vee = pluginContainer || {
    _vm: {
      $nextTick: function (cb) { return isCallable(cb) ? cb() : Promise.resolve(); },
      $emit: function () {},
      $off: function () {}
    }
  };
};

var prototypeAccessors$4 = { rules: { configurable: true },dictionary: { configurable: true },flags: { configurable: true },locale: { configurable: true } };
var staticAccessors$1 = { rules: { configurable: true },dictionary: { configurable: true },locale: { configurable: true } };

/**
 * @deprecated
 */
staticAccessors$1.rules.get = function () {
  if (true) {
    warn('this accessor will be deprecated, use `import { rules } from "vee-validate"` instead.');
  }

  return RuleContainer.rules;
};

/**
 * @deprecated
 */
prototypeAccessors$4.rules.get = function () {
  if (true) {
    warn('this accessor will be deprecated, use `import { rules } from "vee-validate"` instead.');
  }

  return RuleContainer.rules;
};

prototypeAccessors$4.dictionary.get = function () {
  return DictionaryResolver.getDriver();
};

staticAccessors$1.dictionary.get = function () {
  return DictionaryResolver.getDriver();
};

prototypeAccessors$4.flags.get = function () {
  return this.fields.items.reduce(function (acc, field) {
      var obj;

    if (field.scope) {
      acc[("$" + (field.scope))] = ( obj = {}, obj[field.name] = field.flags, obj );

      return acc;
    }

    acc[field.name] = field.flags;

    return acc;
  }, {});
};

/**
 * Getter for the current locale.
 */
prototypeAccessors$4.locale.get = function () {
  return Validator.locale;
};

/**
 * Setter for the validator locale.
 */
prototypeAccessors$4.locale.set = function (value) {
  Validator.locale = value;
};

staticAccessors$1.locale.get = function () {
  return DictionaryResolver.getDriver().locale;
};

/**
 * Setter for the validator locale.
 */
staticAccessors$1.locale.set = function (value) {
  var hasChanged = value !== DictionaryResolver.getDriver().locale;
  DictionaryResolver.getDriver().locale = value;
  if (hasChanged && Validator.$vee && Validator.$vee._vm) {
    Validator.$vee._vm.$emit('localeChanged');
  }
};

/**
 * Static constructor.
 * @deprecated
 */
Validator.create = function create (validations, options) {
  if (true) {
    warn('Please use `new` to create new validator instances.');
  }

  return new Validator(validations, options);
};

/**
 * Adds a custom validator to the list of validation rules.
 */
Validator.extend = function extend (name, validator, options) {
    if ( options === void 0 ) options = {};

  Validator._guardExtend(name, validator);
  // rules imported from the minimal bundle
  // will have the options embedded in them
  var mergedOpts = validator.options || {};
  Validator._merge(name, {
    validator: validator,
    paramNames: (options && options.paramNames) || validator.paramNames,
    options: assign({ hasTarget: false, immediate: true }, mergedOpts, options || {})
  });
};

/**
 * Removes a rule from the list of validators.
 * @deprecated
 */
Validator.remove = function remove (name) {
  if (true) {
    warn('this method will be deprecated, you can still override your rules with `extend`');
  }

  RuleContainer.remove(name);
};

/**
 * Adds and sets the current locale for the validator.
*/
Validator.prototype.localize = function localize (lang, dictionary) {
  Validator.localize(lang, dictionary);
};

/**
 * Adds and sets the current locale for the validator.
 */
Validator.localize = function localize (lang, dictionary) {
    var obj;

  if (isObject(lang)) {
    DictionaryResolver.getDriver().merge(lang);
    return;
  }

  // merge the dictionary.
  if (dictionary) {
    var locale = lang || dictionary.name;
    dictionary = assign({}, dictionary);
    DictionaryResolver.getDriver().merge(( obj = {}, obj[locale] = dictionary, obj ));
  }

  if (lang) {
    // set the locale.
    Validator.locale = lang;
  }
};

/**
 * Registers a field to be validated.
 */
Validator.prototype.attach = function attach (fieldOpts) {
    var this$1 = this;

  // We search for a field with the same name & scope, having persist enabled
  var oldFieldMatcher = { name: fieldOpts.name, scope: fieldOpts.scope, persist: true };
  var oldField = fieldOpts.persist ? this.fields.find(oldFieldMatcher) : null;

  if (oldField) {
    // We keep the flags of the old field, then we remove its instance
    fieldOpts.flags = oldField.flags;
    oldField.destroy();
    this.fields.remove(oldField);
  }

  // fixes initial value detection with v-model and select elements.
  var value = fieldOpts.initialValue;
  var field = new Field(fieldOpts);
  this.fields.push(field);

  // validate the field initially
  if (field.immediate) {
    this.$vee._vm.$nextTick(function () { return this$1.validate(("#" + (field.id)), value || field.value, { vmId: fieldOpts.vmId }); });
  } else {
    this._validate(field, value || field.value, { initial: true }).then(function (result) {
      field.flags.valid = result.valid;
      field.flags.invalid = !result.valid;
    });
  }

  return field;
};

/**
 * Sets the flags on a field.
 */
Validator.prototype.flag = function flag (name, flags, uid) {
    if ( uid === void 0 ) uid = null;

  var field = this._resolveField(name, undefined, uid);
  if (!field || !flags) {
    return;
  }

  field.setFlags(flags);
};

/**
 * Removes a field from the validator.
 */
Validator.prototype.detach = function detach (name, scope, uid) {
  var field = isCallable(name.destroy) ? name : this._resolveField(name, scope, uid);
  if (!field) { return; }

  // We destroy/remove the field & error instances if it's not a `persist` one
  if (!field.persist) {
    field.destroy();
    this.errors.remove(field.name, field.scope, field.vmId);
    this.fields.remove(field);
  }
};

/**
 * Adds a custom validator to the list of validation rules.
 */
Validator.prototype.extend = function extend (name, validator, options) {
    if ( options === void 0 ) options = {};

  Validator.extend(name, validator, options);
};

Validator.prototype.reset = function reset (matcher) {
    var this$1 = this;

  // two ticks
  return this.$vee._vm.$nextTick().then(function () {
    return this$1.$vee._vm.$nextTick();
  }).then(function () {
    this$1.fields.filter(matcher).forEach(function (field) {
      field.waitFor(null);
      field.reset(); // reset field flags.
      this$1.errors.remove(field.name, field.scope, matcher && matcher.vmId);
    });
  });
};

/**
 * Updates a field, updating both errors and flags.
 */
Validator.prototype.update = function update (id, ref) {
    var scope = ref.scope;

  var field = this._resolveField(("#" + id));
  if (!field) { return; }

  // remove old scope.
  this.errors.update(id, { scope: scope });
};

/**
 * Removes a rule from the list of validators.
 * @deprecated
 */
Validator.prototype.remove = function remove (name) {
  Validator.remove(name);
};

/**
 * Validates a value against a registered field validations.
 */
Validator.prototype.validate = function validate (fieldDescriptor, value, ref) {
    var this$1 = this;
    if ( ref === void 0 ) ref = {};
    var silent = ref.silent;
    var vmId = ref.vmId;

  if (this.paused) { return Promise.resolve(true); }

  // overload to validate all.
  if (isNullOrUndefined(fieldDescriptor)) {
    return this.validateScopes({ silent: silent, vmId: vmId });
  }

  // overload to validate scope-less fields.
  if (fieldDescriptor === '*') {
    return this.validateAll(undefined, { silent: silent, vmId: vmId });
  }

  // if scope validation was requested.
  if (/^(.+)\.\*$/.test(fieldDescriptor)) {
    var matched = fieldDescriptor.match(/^(.+)\.\*$/)[1];
    return this.validateAll(matched);
  }

  var field = this._resolveField(fieldDescriptor);
  if (!field) {
    return this._handleFieldNotFound(fieldDescriptor);
  }

  if (!silent) { field.flags.pending = true; }
  if (value === undefined) {
    value = field.value;
  }

  var validationPromise = this._validate(field, value);
  field.waitFor(validationPromise);

  return validationPromise.then(function (result) {
    if (!silent && field.isWaitingFor(validationPromise)) {
      // allow next validation to mutate the state.
      field.waitFor(null);
      this$1._handleValidationResults([result], vmId);
    }

    return result.valid;
  });
};

/**
 * Pauses the validator.
 */
Validator.prototype.pause = function pause () {
  this.paused = true;

  return this;
};

/**
 * Resumes the validator.
 */
Validator.prototype.resume = function resume () {
  this.paused = false;

  return this;
};

/**
 * Validates each value against the corresponding field validations.
 */
Validator.prototype.validateAll = function validateAll (values, ref) {
    var this$1 = this;
    if ( ref === void 0 ) ref = {};
    var silent = ref.silent;
    var vmId = ref.vmId;

  if (this.paused) { return Promise.resolve(true); }

  var matcher = null;
  var providedValues = false;

  if (typeof values === 'string') {
    matcher = { scope: values, vmId: vmId };
  } else if (isObject(values)) {
    matcher = Object.keys(values).map(function (key) {
      return { name: key, vmId: vmId, scope: null };
    });
    providedValues = true;
  } else if (Array.isArray(values)) {
    matcher = values.map(function (key) {
      return typeof key === 'object' ? Object.assign({ vmId: vmId }, key) : { name: key, vmId: vmId };
    });
  } else {
    matcher = { scope: null, vmId: vmId };
  }

  return Promise.all(
    this.fields.filter(matcher).map(function (field) { return this$1._validate(field, providedValues ? values[field.name] : field.value); })
  ).then(function (results) {
    if (!silent) {
      this$1._handleValidationResults(results, vmId);
    }

    return results.every(function (t) { return t.valid; });
  });
};

/**
 * Validates all scopes.
 */
Validator.prototype.validateScopes = function validateScopes (ref) {
    var this$1 = this;
    if ( ref === void 0 ) ref = {};
    var silent = ref.silent;
    var vmId = ref.vmId;

  if (this.paused) { return Promise.resolve(true); }

  return Promise.all(
    this.fields.filter({ vmId: vmId }).map(function (field) { return this$1._validate(field, field.value); })
  ).then(function (results) {
    if (!silent) {
      this$1._handleValidationResults(results, vmId);
    }

    return results.every(function (t) { return t.valid; });
  });
};

/**
 * Validates a value against the rules.
 */
Validator.prototype.verify = function verify (value, rules, options) {
    if ( options === void 0 ) options = {};

  var field = {
    name: (options && options.name) || '{field}',
    rules: normalizeRules(rules),
    bails: getPath('bails', options, true),
    forceRequired: false,
    get isRequired () {
      return !!this.rules.required || this.forceRequired;
    }
  };

  var targetRules = Object.keys(field.rules).filter(RuleContainer.isTargetRule);
  if (targetRules.length && options && isObject(options.values)) {
    field.dependencies = targetRules.map(function (rule) {
      var ref = field.rules[rule];
        var targetKey = ref[0];

      return {
        name: rule,
        field: { value: options.values[targetKey] }
      };
    });
  }

  return this._validate(field, value).then(function (result) {
    var errors = [];
    var ruleMap = {};
    result.errors.forEach(function (e) {
      errors.push(e.msg);
      ruleMap[e.rule] = e.msg;
    });

    return {
      valid: result.valid,
      errors: errors,
      failedRules: ruleMap
    };
  });
};

/**
 * Perform cleanup.
 */
Validator.prototype.destroy = function destroy () {
  this.$vee._vm.$off('localeChanged');
};

/**
 * Creates the fields to be validated.
 */
Validator.prototype._createFields = function _createFields (validations) {
    var this$1 = this;

  if (!validations) { return; }

  Object.keys(validations).forEach(function (field) {
    var options = assign({}, { name: field, rules: validations[field] });
    this$1.attach(options);
  });
};

/**
 * Date rules need the existence of a format, so date_format must be supplied.
 */
Validator.prototype._getDateFormat = function _getDateFormat (validations) {
  var format = null;
  if (validations.date_format && Array.isArray(validations.date_format)) {
    format = validations.date_format[0];
  }

  return format || DictionaryResolver.getDriver().getDateFormat(this.locale);
};

/**
 * Formats an error message for field and a rule.
 */
Validator.prototype._formatErrorMessage = function _formatErrorMessage (field, rule, data, targetName) {
    if ( data === void 0 ) data = {};
    if ( targetName === void 0 ) targetName = null;

  var name = this._getFieldDisplayName(field);
  var params = this._getLocalizedParams(rule, targetName);

  return DictionaryResolver.getDriver().getFieldMessage(this.locale, field.name, rule.name, [name, params, data]);
};

/**
 * We need to convert any object param to an array format since the locales do not handle params as objects yet.
 */
Validator.prototype._convertParamObjectToArray = function _convertParamObjectToArray (obj, ruleName) {
  if (Array.isArray(obj)) {
    return obj;
  }

  var paramNames = RuleContainer.getParamNames(ruleName);
  if (!paramNames || !isObject(obj)) {
    return obj;
  }

  return paramNames.reduce(function (prev, paramName) {
    if (paramName in obj) {
      prev.push(obj[paramName]);
    }

    return prev;
  }, []);
};

/**
 * Translates the parameters passed to the rule (mainly for target fields).
 */
Validator.prototype._getLocalizedParams = function _getLocalizedParams (rule, targetName) {
    if ( targetName === void 0 ) targetName = null;

  var params = this._convertParamObjectToArray(rule.params, rule.name);
  if (rule.options.hasTarget && params && params[0]) {
    var localizedName = targetName || DictionaryResolver.getDriver().getAttribute(this.locale, params[0], params[0]);
    return [localizedName].concat(params.slice(1));
  }

  return params;
};

/**
 * Resolves an appropriate display name, first checking 'data-as' or the registered 'prettyName'
 */
Validator.prototype._getFieldDisplayName = function _getFieldDisplayName (field) {
  return field.alias || DictionaryResolver.getDriver().getAttribute(this.locale, field.name, field.name);
};

/**
 * Converts an array of params to an object with named properties.
 * Only works if the rule is configured with a paramNames array.
 * Returns the same params if it cannot convert it.
 */
Validator.prototype._convertParamArrayToObj = function _convertParamArrayToObj (params, ruleName) {
  var paramNames = RuleContainer.getParamNames(ruleName);
  if (!paramNames) {
    return params;
  }

  if (isObject(params)) {
    // check if the object is either a config object or a single parameter that is an object.
    var hasKeys = paramNames.some(function (name) { return Object.keys(params).indexOf(name) !== -1; });
    // if it has some of the keys, return it as is.
    if (hasKeys) {
      return params;
    }
    // otherwise wrap the object in an array.
    params = [params];
  }

  // Reduce the paramsNames to a param object.
  return params.reduce(function (prev, value, idx) {
    prev[paramNames[idx]] = value;

    return prev;
  }, {});
};

/**
 * Tests a single input value against a rule.
 */
Validator.prototype._test = function _test (field, value, rule) {
    var this$1 = this;

  var validator = RuleContainer.getValidatorMethod(rule.name);
  var params = Array.isArray(rule.params) ? toArray(rule.params) : rule.params;
  if (!params) {
    params = [];
  }

  var targetName = null;
  if (!validator || typeof validator !== 'function') {
    return Promise.reject(createError(("No such validator '" + (rule.name) + "' exists.")));
  }

  // has field dependencies.
  if (rule.options.hasTarget && field.dependencies) {
    var target = find(field.dependencies, function (d) { return d.name === rule.name; });
    if (target) {
      targetName = target.field.alias;
      params = [target.field.value].concat(params.slice(1));
    }
  } else if (rule.name === 'required' && field.rejectsFalse) {
    // invalidate false if no args were specified and the field rejects false by default.
    params = params.length ? params : [true];
  }

  if (rule.options.isDate) {
    var dateFormat = this._getDateFormat(field.rules);
    if (rule.name !== 'date_format') {
      params.push(dateFormat);
    }
  }

  var result = validator(value, this._convertParamArrayToObj(params, rule.name));

  // If it is a promise.
  if (isCallable(result.then)) {
    return result.then(function (values) {
      var allValid = true;
      var data = {};
      if (Array.isArray(values)) {
        allValid = values.every(function (t) { return (isObject(t) ? t.valid : t); });
      } else { // Is a single object/boolean.
        allValid = isObject(values) ? values.valid : values;
        data = values.data;
      }

      return {
        valid: allValid,
        data: result.data,
        errors: allValid ? [] : [this$1._createFieldError(field, rule, data, targetName)]
      };
    });
  }

  if (!isObject(result)) {
    result = { valid: result, data: {} };
  }

  return {
    valid: result.valid,
    data: result.data,
    errors: result.valid ? [] : [this._createFieldError(field, rule, result.data, targetName)]
  };
};

/**
 * Merges a validator object into the RULES and Messages.
 */
Validator._merge = function _merge (name, ref) {
    var validator = ref.validator;
    var options = ref.options;
    var paramNames = ref.paramNames;

  var validate = isCallable(validator) ? validator : validator.validate;
  if (validator.getMessage) {
    DictionaryResolver.getDriver().setMessage(Validator.locale, name, validator.getMessage);
  }

  RuleContainer.add(name, {
    validate: validate,
    options: options,
    paramNames: paramNames
  });
};

/**
 * Guards from extension violations.
 */
Validator._guardExtend = function _guardExtend (name, validator) {
  if (isCallable(validator)) {
    return;
  }

  if (!isCallable(validator.validate)) {
    throw createError(
      ("Extension Error: The validator '" + name + "' must be a function or have a 'validate' method.")
    );
  }
};

/**
 * Creates a Field Error Object.
 */
Validator.prototype._createFieldError = function _createFieldError (field, rule, data, targetName) {
    var this$1 = this;

  return {
    id: field.id,
    vmId: field.vmId,
    field: field.name,
    msg: this._formatErrorMessage(field, rule, data, targetName),
    rule: rule.name,
    scope: field.scope,
    regenerate: function () {
      return this$1._formatErrorMessage(field, rule, data, targetName);
    }
  };
};

/**
 * Tries different strategies to find a field.
 */
Validator.prototype._resolveField = function _resolveField (name, scope, uid) {
  if (name[0] === '#') {
    return this.fields.findById(name.slice(1));
  }

  if (!isNullOrUndefined(scope)) {
    return this.fields.find({ name: name, scope: scope, vmId: uid });
  }

  if (includes(name, '.')) {
    var ref = name.split('.');
      var fieldScope = ref[0];
      var fieldName = ref.slice(1);
    var field = this.fields.find({ name: fieldName.join('.'), scope: fieldScope, vmId: uid });
    if (field) {
      return field;
    }
  }

  return this.fields.find({ name: name, scope: null, vmId: uid });
};

/**
 * Handles when a field is not found.
 */
Validator.prototype._handleFieldNotFound = function _handleFieldNotFound (name, scope) {
  var fullName = isNullOrUndefined(scope) ? name : ("" + (!isNullOrUndefined(scope) ? scope + '.' : '') + name);

  return Promise.reject(createError(
    ("Validating a non-existent field: \"" + fullName + "\". Use \"attach()\" first.")
  ));
};

/**
 * Handles validation results.
 */
Validator.prototype._handleValidationResults = function _handleValidationResults (results, vmId) {
    var this$1 = this;

  var matchers = results.map(function (result) { return ({ id: result.id }); });
  this.errors.removeById(matchers.map(function (m) { return m.id; }));
  // remove by name and scope to remove any custom errors added.
  results.forEach(function (result) {
    this$1.errors.remove(result.field, result.scope, vmId);
  });
  var allErrors = results.reduce(function (prev, curr) {
    prev.push.apply(prev, curr.errors);

    return prev;
  }, []);

  this.errors.add(allErrors);

  // handle flags.
  this.fields.filter(matchers).forEach(function (field) {
    var result = find(results, function (r) { return r.id === field.id; });
    field.setFlags({
      pending: false,
      valid: result.valid,
      validated: true
    });
  });
};

Validator.prototype._shouldSkip = function _shouldSkip (field, value) {
  // field is configured to run through the pipeline regardless
  if (field.bails === false) {
    return false;
  }

  // disabled fields are skipped if useConstraintAttrs is enabled in config
  if (field.isDisabled && getConfig().useConstraintAttrs) {
    return true;
  }

  // skip if the field is not required and has an empty value.
  return !field.isRequired && (isNullOrUndefined(value) || value === '' || isEmptyArray(value));
};

Validator.prototype._shouldBail = function _shouldBail (field) {
  // if the field was configured explicitly.
  if (field.bails !== undefined) {
    return field.bails;
  }

  return this.fastExit;
};

/**
 * Starts the validation process.
 */
Validator.prototype._validate = function _validate (field, value, ref) {
    var this$1 = this;
    if ( ref === void 0 ) ref = {};
    var initial = ref.initial;

  var requireRules = Object.keys(field.rules).filter(RuleContainer.isRequireRule);

  field.forceRequired = false;
  requireRules.forEach(function (rule) {
    var ruleOptions = RuleContainer.getOptions(rule);
    var result = this$1._test(field, value, { name: rule, params: field.rules[rule], options: ruleOptions });

    if (isCallable(result.then)) { throw createError('Require rules cannot be async'); }
    if (!isObject(result)) { throw createError('Require rules has to return an object (see docs)'); }

    if (result.data.required === true) {
      field.forceRequired = true;
    }
  });

  if (this._shouldSkip(field, value)) {
    return Promise.resolve({ valid: true, id: field.id, field: field.name, scope: field.scope, errors: [] });
  }

  var promises = [];
  var errors = [];
  var isExitEarly = false;
  if (isCallable(field.checkValueChanged)) {
    field.flags.changed = field.checkValueChanged();
  }

  // use of '.some()' is to break iteration in middle by returning true
  Object.keys(field.rules).filter(function (rule) {
    if (!initial || !RuleContainer.has(rule)) { return true; }

    return RuleContainer.isImmediate(rule);
  }).some(function (rule) {
    var ruleOptions = RuleContainer.getOptions(rule);
    var result = this$1._test(field, value, { name: rule, params: field.rules[rule], options: ruleOptions });
    if (isCallable(result.then)) {
      promises.push(result);
    } else if (!result.valid && this$1._shouldBail(field)) {
      errors.push.apply(errors, result.errors);
      isExitEarly = true;
    } else {
      // promisify the result.
      promises.push(new Promise(function (resolve) { return resolve(result); }));
    }

    return isExitEarly;
  });

  if (isExitEarly) {
    return Promise.resolve({ valid: false, errors: errors, id: field.id, field: field.name, scope: field.scope });
  }

  return Promise.all(promises).then(function (results) {
    return results.reduce(function (prev, v) {
        var ref;

      if (!v.valid) {
        (ref = prev.errors).push.apply(ref, v.errors);
      }

      prev.valid = prev.valid && v.valid;

      return prev;
    }, { valid: true, errors: errors, id: field.id, field: field.name, scope: field.scope });
  });
};

Object.defineProperties( Validator.prototype, prototypeAccessors$4 );
Object.defineProperties( Validator, staticAccessors$1 );

// 

var normalizeValue = function (value) {
  if (isObject(value)) {
    return Object.keys(value).reduce(function (prev, key) {
      prev[key] = normalizeValue(value[key]);

      return prev;
    }, {});
  }

  if (isCallable(value)) {
    return value('{0}', ['{1}', '{2}', '{3}']);
  }

  return value;
};

var normalizeFormat = function (locale) {
  // normalize messages
  var dictionary = {};
  if (locale.messages) {
    dictionary.messages = normalizeValue(locale.messages);
  }

  if (locale.custom) {
    dictionary.custom = normalizeValue(locale.custom);
  }

  if (locale.attributes) {
    dictionary.attributes = locale.attributes;
  }

  if (!isNullOrUndefined(locale.dateFormat)) {
    dictionary.dateFormat = locale.dateFormat;
  }

  return dictionary;
};

var I18nDictionary = function I18nDictionary (i18n, rootKey) {
  this.i18n = i18n;
  this.rootKey = rootKey;
};

var prototypeAccessors$5 = { locale: { configurable: true } };

prototypeAccessors$5.locale.get = function () {
  return this.i18n.locale;
};

prototypeAccessors$5.locale.set = function (value) {
  warn('Cannot set locale from the validator when using vue-i18n, use i18n.locale setter instead');
};

I18nDictionary.prototype.getDateFormat = function getDateFormat (locale) {
  return this.i18n.getDateTimeFormat(locale || this.locale);
};

I18nDictionary.prototype.setDateFormat = function setDateFormat (locale, value) {
  this.i18n.setDateTimeFormat(locale || this.locale, value);
};

I18nDictionary.prototype.getMessage = function getMessage (_, key, data) {
  var path = (this.rootKey) + ".messages." + key;
  var dataOptions = data;

  if (Array.isArray(data)) {
    dataOptions = [].concat.apply([], data);
  }

  if (this.i18n.te(path)) {
    return this.i18n.t(path, dataOptions);
  }

  // fallback to the fallback message
  if (this.i18n.te(path, this.i18n.fallbackLocale)) {
    return this.i18n.t(path, this.i18n.fallbackLocale, dataOptions);
  }

  // fallback to the root message
  return this.i18n.t(((this.rootKey) + ".messages._default"), dataOptions);
};

I18nDictionary.prototype.getAttribute = function getAttribute (_, key, fallback) {
    if ( fallback === void 0 ) fallback = '';

  var path = (this.rootKey) + ".attributes." + key;
  if (this.i18n.te(path)) {
    return this.i18n.t(path);
  }

  return fallback;
};

I18nDictionary.prototype.getFieldMessage = function getFieldMessage (_, field, key, data) {
  var path = (this.rootKey) + ".custom." + field + "." + key;
  if (this.i18n.te(path)) {
    return this.i18n.t(path, data);
  }

  return this.getMessage(_, key, data);
};

I18nDictionary.prototype.merge = function merge$1 (dictionary) {
    var this$1 = this;

  Object.keys(dictionary).forEach(function (localeKey) {
      var obj;

    // i18n doesn't deep merge
    // first clone the existing locale (avoid mutations to locale)
    var clone = merge({}, getPath((localeKey + "." + (this$1.rootKey)), this$1.i18n.messages, {}));
    // Merge cloned locale with new one
    var locale = merge(clone, normalizeFormat(dictionary[localeKey]));
    this$1.i18n.mergeLocaleMessage(localeKey, ( obj = {}, obj[this$1.rootKey] = locale, obj ));
    if (locale.dateFormat) {
      this$1.i18n.setDateTimeFormat(localeKey, locale.dateFormat);
    }
  });
};

I18nDictionary.prototype.setMessage = function setMessage (locale, key, value) {
    var obj, obj$1;

  this.merge(( obj$1 = {}, obj$1[locale] = {
      messages: ( obj = {}, obj[key] = value, obj )
    }, obj$1 ));
};

I18nDictionary.prototype.setAttribute = function setAttribute (locale, key, value) {
    var obj, obj$1;

  this.merge(( obj$1 = {}, obj$1[locale] = {
      attributes: ( obj = {}, obj[key] = value, obj )
    }, obj$1 ));
};

Object.defineProperties( I18nDictionary.prototype, prototypeAccessors$5 );

var aggressive = function () { return ({
  on: ['input']
}); };

var lazy = function () { return ({
  on: ['change']
}); };

var eager = function (ref) {
  var errors = ref.errors;

  if (errors.length) {
    return {
      on: ['input']
    };
  }

  return {
    on: ['change', 'blur']
  };
};

var passive = function () { return ({
  on: []
}); };

var modes = {
  aggressive: aggressive,
  eager: eager,
  passive: passive,
  lazy: lazy
};

// 

var Vue;
var pendingPlugins;
var pluginInstance;

var VeeValidate$1 = function VeeValidate (config, _Vue) {
  this.configure(config);
  pluginInstance = this;
  if (_Vue) {
    Vue = _Vue;
  }
  this._validator = setValidator(
    new Validator(null, { fastExit: config && config.fastExit }, this)
  );
  this._initVM(this.config);
  this._initI18n(this.config);
};

var prototypeAccessors$6 = { i18nDriver: { configurable: true },config: { configurable: true } };
var staticAccessors$2 = { i18nDriver: { configurable: true },config: { configurable: true } };

VeeValidate$1.setI18nDriver = function setI18nDriver (driver, instance) {
  DictionaryResolver.setDriver(driver, instance);
};

VeeValidate$1.configure = function configure (cfg) {
  setConfig(cfg);
};

VeeValidate$1.setMode = function setMode (mode, implementation) {
  setConfig({ mode: mode });
  if (!implementation) {
    return;
  }

  if (!isCallable(implementation)) {
    throw new Error('A mode implementation must be a function');
  }

  modes[mode] = implementation;
};

VeeValidate$1.use = function use (plugin, options) {
    if ( options === void 0 ) options = {};

  if (!isCallable(plugin)) {
    return warn('The plugin must be a callable function');
  }

  // Don't install plugins until vee-validate is installed.
  if (!pluginInstance) {
    if (!pendingPlugins) {
      pendingPlugins = [];
    }
    pendingPlugins.push({ plugin: plugin, options: options });
    return;
  }

  plugin({ Validator: Validator, ErrorBag: ErrorBag, Rules: Validator.rules }, options);
};
VeeValidate$1.install = function install (_Vue, opts) {
  if (Vue && _Vue === Vue) {
    if (true) {
      warn('already installed, Vue.use(VeeValidate) should only be called once.');
    }
    return;
  }

  Vue = _Vue;
  pluginInstance = new VeeValidate$1(opts);
  // inject the plugin container statically into the validator class
  Validator.$vee = pluginInstance;

  detectPassiveSupport();

  Vue.mixin(mixin);
  Vue.directive('validate', directive);
  if (pendingPlugins) {
    pendingPlugins.forEach(function (ref) {
        var plugin = ref.plugin;
        var options = ref.options;

      VeeValidate$1.use(plugin, options);
    });
    pendingPlugins = null;
  }
};

prototypeAccessors$6.i18nDriver.get = function () {
  return DictionaryResolver.getDriver();
};

staticAccessors$2.i18nDriver.get = function () {
  return DictionaryResolver.getDriver();
};

prototypeAccessors$6.config.get = function () {
  return getConfig();
};

staticAccessors$2.config.get = function () {
  return getConfig();
};

VeeValidate$1.prototype._initVM = function _initVM (config) {
    var this$1 = this;

  this._vm = new Vue({
    data: function () { return ({
      errors: this$1._validator.errors,
      fields: this$1._validator.fields
    }); }
  });
};

VeeValidate$1.prototype._initI18n = function _initI18n (config) {
    var this$1 = this;

  var dictionary = config.dictionary;
    var i18n = config.i18n;
    var i18nRootKey = config.i18nRootKey;
    var locale = config.locale;
  var onLocaleChanged = function () {
    if (dictionary) {
      this$1.i18nDriver.merge(dictionary);
    }

    this$1._validator.errors.regenerate();
  };

  // i18 is being used for localization.
  if (i18n) {
    VeeValidate$1.setI18nDriver('i18n', new I18nDictionary(i18n, i18nRootKey));
    i18n._vm.$watch('locale', onLocaleChanged);
  } else if (typeof window !== 'undefined') {
    this._vm.$on('localeChanged', onLocaleChanged);
  }

  if (dictionary) {
    this.i18nDriver.merge(dictionary);
  }

  if (locale && !i18n) {
    this._validator.localize(locale);
  }
};

VeeValidate$1.prototype.configure = function configure (cfg) {
  setConfig(cfg);
};

Object.defineProperties( VeeValidate$1.prototype, prototypeAccessors$6 );
Object.defineProperties( VeeValidate$1, staticAccessors$2 );

VeeValidate$1.mixin = mixin;
VeeValidate$1.directive = directive;
VeeValidate$1.Validator = Validator;
VeeValidate$1.ErrorBag = ErrorBag;

/**
 * Formates file size.
 *
 * @param {Number|String} size
 */
var formatFileSize = function (size) {
  var units = ['Byte', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  var threshold = 1024;
  size = Number(size) * threshold;
  var i = size === 0 ? 0 : Math.floor(Math.log(size) / Math.log(threshold));
  return (((size / Math.pow(threshold, i)).toFixed(2) * 1) + " " + (units[i]));
};

/**
 * Checks if vee-validate is defined globally.
 */
var isDefinedGlobally = function () {
  return typeof VeeValidate !== 'undefined';
};

var obj;

var messages = {
  _default: function (field) { return ("The " + field + " value is not valid"); },
  after: function (field, ref) {
    var target = ref[0];
    var inclusion = ref[1];

    return ("The " + field + " must be after " + (inclusion ? 'or equal to ' : '') + target);
},
  alpha: function (field) { return ("The " + field + " field may only contain alphabetic characters"); },
  alpha_dash: function (field) { return ("The " + field + " field may contain alpha-numeric characters as well as dashes and underscores"); },
  alpha_num: function (field) { return ("The " + field + " field may only contain alpha-numeric characters"); },
  alpha_spaces: function (field) { return ("The " + field + " field may only contain alphabetic characters as well as spaces"); },
  before: function (field, ref) {
    var target = ref[0];
    var inclusion = ref[1];

    return ("The " + field + " must be before " + (inclusion ? 'or equal to ' : '') + target);
},
  between: function (field, ref) {
    var min = ref[0];
    var max = ref[1];

    return ("The " + field + " field must be between " + min + " and " + max);
},
  confirmed: function (field) { return ("The " + field + " confirmation does not match"); },
  credit_card: function (field) { return ("The " + field + " field is invalid"); },
  date_between: function (field, ref) {
    var min = ref[0];
    var max = ref[1];

    return ("The " + field + " must be between " + min + " and " + max);
},
  date_format: function (field, ref) {
    var format = ref[0];

    return ("The " + field + " must be in the format " + format);
},
  decimal: function (field, ref) {
    if ( ref === void 0 ) ref = [];
    var decimals = ref[0]; if ( decimals === void 0 ) decimals = '*';

    return ("The " + field + " field must be numeric and may contain" + (!decimals || decimals === '*' ? '' : ' ' + decimals) + " decimal points");
},
  digits: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field must be numeric and contains exactly " + length + " digits");
},
  dimensions: function (field, ref) {
    var width = ref[0];
    var height = ref[1];

    return ("The " + field + " field must be " + width + " pixels by " + height + " pixels");
},
  email: function (field) { return ("The " + field + " field must be a valid email"); },
  excluded: function (field) { return ("The " + field + " field must be a valid value"); },
  ext: function (field) { return ("The " + field + " field must be a valid file"); },
  image: function (field) { return ("The " + field + " field must be an image"); },
  included: function (field) { return ("The " + field + " field must be a valid value"); },
  integer: function (field) { return ("The " + field + " field must be an integer"); },
  ip: function (field) { return ("The " + field + " field must be a valid ip address"); },
  ip_or_fqdn: function (field) { return ("The " + field + " field must be a valid ip address or FQDN"); },
  length: function (field, ref) {
    var length = ref[0];
    var max = ref[1];

    if (max) {
      return ("The " + field + " length must be between " + length + " and " + max);
    }

    return ("The " + field + " length must be " + length);
  },
  max: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field may not be greater than " + length + " characters");
},
  max_value: function (field, ref) {
    var max = ref[0];

    return ("The " + field + " field must be " + max + " or less");
},
  mimes: function (field) { return ("The " + field + " field must have a valid file type"); },
  min: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field must be at least " + length + " characters");
},
  min_value: function (field, ref) {
    var min = ref[0];

    return ("The " + field + " field must be " + min + " or more");
},
  numeric: function (field) { return ("The " + field + " field may only contain numeric characters"); },
  regex: function (field) { return ("The " + field + " field format is invalid"); },
  required: function (field) { return ("The " + field + " field is required"); },
  required_if: function (field, ref) {
    var target = ref[0];

    return ("The " + field + " field is required when the " + target + " field has this value");
},
  size: function (field, ref) {
    var size = ref[0];

    return ("The " + field + " size must be less than " + (formatFileSize(size)));
},
  url: function (field) { return ("The " + field + " field is not a valid URL"); }
};

var locale = {
  name: 'en',
  messages: messages,
  attributes: {}
};

if (isDefinedGlobally()) {
  // eslint-disable-next-line
  VeeValidate.Validator.localize(( obj = {}, obj[locale.name] = locale, obj ));
}

function toInteger (dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number)
}

var MILLISECONDS_IN_MINUTE = 60000;

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds (dirtyDate) {
  var date = new Date(dirtyDate.getTime());
  var baseTimezoneOffset = date.getTimezoneOffset();
  date.setSeconds(0, 0);
  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;

  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset
}

var MILLISECONDS_IN_HOUR = 3600000;
var MILLISECONDS_IN_MINUTE$1 = 60000;
var DEFAULT_ADDITIONAL_DIGITS = 2;

var patterns = {
  dateTimeDelimeter: /[T ]/,
  plainTime: /:/,
  timeZoneDelimeter: /[Z ]/i,

  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/, // 0 additional digits
    /^([+-]\d{3})$/, // 1 additional digit
    /^([+-]\d{4})$/ // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/, // 0 additional digits
    /^([+-]\d{5})/, // 1 additional digit
    /^([+-]\d{6})/ // 2 additional digits
  ],

  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,

  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,

  // timezone tokens
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-])(\d{2})$/,
  timezoneHHMM: /^([+-])(\d{2}):?(\d{2})$/
};

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If an argument is a string, the function tries to parse it.
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 * If the function cannot parse the string or the values are invalid, it returns Invalid Date.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.
 *
 * @param {Date|String|Number} argument - the value to convert
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * var result = toDate('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * var result = toDate('+02014101', {additionalDigits: 1})
 * //=> Fri Apr 11 2014 00:00:00
 */
function toDate (argument, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  if (argument === null) {
    return new Date(NaN)
  }

  var options = dirtyOptions || {};

  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError('additionalDigits must be 0, 1 or 2')
  }

  // Clone the date
  if (argument instanceof Date ||
    (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')
  ) {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime())
  } else if (typeof argument === 'number' || Object.prototype.toString.call(argument) === '[object Number]') {
    return new Date(argument)
  } else if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
    return new Date(NaN)
  }

  var dateStrings = splitDateString(argument);

  var parseYearResult = parseYear(dateStrings.date, additionalDigits);
  var year = parseYearResult.year;
  var restDateString = parseYearResult.restDateString;

  var date = parseDate(restDateString, year);

  if (isNaN(date)) {
    return new Date(NaN)
  }

  if (date) {
    var timestamp = date.getTime();
    var time = 0;
    var offset;

    if (dateStrings.time) {
      time = parseTime(dateStrings.time);

      if (isNaN(time)) {
        return new Date(NaN)
      }
    }

    if (dateStrings.timezone) {
      offset = parseTimezone(dateStrings.timezone);
      if (isNaN(offset)) {
        return new Date(NaN)
      }
    } else {
      // get offset accurate to hour in timezones that change offset
      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time));
      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset));
    }

    return new Date(timestamp + time + offset)
  } else {
    return new Date(NaN)
  }
}

function splitDateString (dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimeter);
  var timeString;

  if (patterns.plainTime.test(array[0])) {
    dateStrings.date = null;
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimeter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimeter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }

  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], '');
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }

  return dateStrings
}

function parseYear (dateString, additionalDigits) {
  var patternYYY = patterns.YYY[additionalDigits];
  var patternYYYYY = patterns.YYYYY[additionalDigits];

  var token;

  // YYYY or ±YYYYY
  token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);
  if (token) {
    var yearString = token[1];
    return {
      year: parseInt(yearString, 10),
      restDateString: dateString.slice(yearString.length)
    }
  }

  // YY or ±YYY
  token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);
  if (token) {
    var centuryString = token[1];
    return {
      year: parseInt(centuryString, 10) * 100,
      restDateString: dateString.slice(centuryString.length)
    }
  }

  // Invalid ISO-formatted year
  return {
    year: null
  }
}

function parseDate (dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) {
    return null
  }

  var token;
  var date;
  var month;
  var week;

  // YYYY
  if (dateString.length === 0) {
    date = new Date(0);
    date.setUTCFullYear(year);
    return date
  }

  // YYYY-MM
  token = patterns.MM.exec(dateString);
  if (token) {
    date = new Date(0);
    month = parseInt(token[1], 10) - 1;

    if (!validateDate(year, month)) {
      return new Date(NaN)
    }

    date.setUTCFullYear(year, month);
    return date
  }

  // YYYY-DDD or YYYYDDD
  token = patterns.DDD.exec(dateString);
  if (token) {
    date = new Date(0);
    var dayOfYear = parseInt(token[1], 10);

    if (!validateDayOfYearDate(year, dayOfYear)) {
      return new Date(NaN)
    }

    date.setUTCFullYear(year, 0, dayOfYear);
    return date
  }

  // YYYY-MM-DD or YYYYMMDD
  token = patterns.MMDD.exec(dateString);
  if (token) {
    date = new Date(0);
    month = parseInt(token[1], 10) - 1;
    var day = parseInt(token[2], 10);

    if (!validateDate(year, month, day)) {
      return new Date(NaN)
    }

    date.setUTCFullYear(year, month, day);
    return date
  }

  // YYYY-Www or YYYYWww
  token = patterns.Www.exec(dateString);
  if (token) {
    week = parseInt(token[1], 10) - 1;

    if (!validateWeekDate(year, week)) {
      return new Date(NaN)
    }

    return dayOfISOWeekYear(year, week)
  }

  // YYYY-Www-D or YYYYWwwD
  token = patterns.WwwD.exec(dateString);
  if (token) {
    week = parseInt(token[1], 10) - 1;
    var dayOfWeek = parseInt(token[2], 10) - 1;

    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN)
    }

    return dayOfISOWeekYear(year, week, dayOfWeek)
  }

  // Invalid ISO-formatted date
  return null
}

function parseTime (timeString) {
  var token;
  var hours;
  var minutes;

  // hh
  token = patterns.HH.exec(timeString);
  if (token) {
    hours = parseFloat(token[1].replace(',', '.'));

    if (!validateTime(hours)) {
      return NaN
    }

    return (hours % 24) * MILLISECONDS_IN_HOUR
  }

  // hh:mm or hhmm
  token = patterns.HHMM.exec(timeString);
  if (token) {
    hours = parseInt(token[1], 10);
    minutes = parseFloat(token[2].replace(',', '.'));

    if (!validateTime(hours, minutes)) {
      return NaN
    }

    return (hours % 24) * MILLISECONDS_IN_HOUR +
      minutes * MILLISECONDS_IN_MINUTE$1
  }

  // hh:mm:ss or hhmmss
  token = patterns.HHMMSS.exec(timeString);
  if (token) {
    hours = parseInt(token[1], 10);
    minutes = parseInt(token[2], 10);
    var seconds = parseFloat(token[3].replace(',', '.'));

    if (!validateTime(hours, minutes, seconds)) {
      return NaN
    }

    return (hours % 24) * MILLISECONDS_IN_HOUR +
      minutes * MILLISECONDS_IN_MINUTE$1 +
      seconds * 1000
  }

  // Invalid ISO-formatted time
  return null
}

function parseTimezone (timezoneString) {
  var token;
  var absoluteOffset;

  // Z
  token = patterns.timezoneZ.exec(timezoneString);
  if (token) {
    return 0
  }

  var hours;

  // ±hh
  token = patterns.timezoneHH.exec(timezoneString);
  if (token) {
    hours = parseInt(token[2], 10);

    if (!validateTimezone()) {
      return NaN
    }

    absoluteOffset = hours * MILLISECONDS_IN_HOUR;
    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
  }

  // ±hh:mm or ±hhmm
  token = patterns.timezoneHHMM.exec(timezoneString);
  if (token) {
    hours = parseInt(token[2], 10);
    var minutes = parseInt(token[3], 10);

    if (!validateTimezone(hours, minutes)) {
      return NaN
    }

    absoluteOffset = hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE$1;
    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
  }

  return 0
}

function dayOfISOWeekYear (isoWeekYear, week, day) {
  week = week || 0;
  day = day || 0;
  var date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = week * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date
}

// Validation functions

var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function isLeapYearIndex (year) {
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)
}

function validateDate (year, month, date) {
  if (month < 0 || month > 11) {
    return false
  }

  if (date != null) {
    if (date < 1) {
      return false
    }

    var isLeapYear = isLeapYearIndex(year);
    if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {
      return false
    }
    if (!isLeapYear && date > DAYS_IN_MONTH[month]) {
      return false
    }
  }

  return true
}

function validateDayOfYearDate (year, dayOfYear) {
  if (dayOfYear < 1) {
    return false
  }

  var isLeapYear = isLeapYearIndex(year);
  if (isLeapYear && dayOfYear > 366) {
    return false
  }
  if (!isLeapYear && dayOfYear > 365) {
    return false
  }

  return true
}

function validateWeekDate (year, week, day) {
  if (week < 0 || week > 52) {
    return false
  }

  if (day != null && (day < 0 || day > 6)) {
    return false
  }

  return true
}

function validateTime (hours, minutes, seconds) {
  if (hours != null && (hours < 0 || hours >= 25)) {
    return false
  }

  if (minutes != null && (minutes < 0 || minutes >= 60)) {
    return false
  }

  if (seconds != null && (seconds < 0 || seconds >= 60)) {
    return false
  }

  return true
}

function validateTimezone (hours, minutes) {
  if (minutes != null && (minutes < 0 || minutes > 59)) {
    return false
  }

  return true
}

/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|String|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */
function addMilliseconds (dirtyDate, dirtyAmount, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var timestamp = toDate(dirtyDate, dirtyOptions).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount)
}

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {*} date - the date to check
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid('2014-02-31')
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */
function isValid (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  return !isNaN(date)
}

var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },

  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },

  halfAMinute: 'half a minute',

  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },

  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },

  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },

  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },

  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },

  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },

  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },

  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },

  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },

  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },

  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};

function formatDistance (token, count, options) {
  options = options || {};

  var result;
  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result
    } else {
      return result + ' ago'
    }
  }

  return result
}

function buildFormatLongFn (args) {
  return function (dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format
  }
}

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};

var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};

var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};

var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),

  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),

  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};

var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};

function formatRelative (token, date, baseDate, options) {
  return formatRelativeLocale[token]
}

function buildLocalizeFn (args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var context = options.context ? String(options.context) : 'standalone';

    var valuesArray;
    if (context === 'formatting' && args.formattingValues) {
      valuesArray = args.formattingValues[width] || args.formattingValues[args.defaultFormattingWidth];
    } else {
      valuesArray = args.values[width] || args.values[args.defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index]
  }
}

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};

var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};

var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};

var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber (dirtyNumber, dirtyOptions) {
  var number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st'
      case 2:
        return number + 'nd'
      case 3:
        return number + 'rd'
    }
  }
  return number + 'th'
}

var localize = {
  ordinalNumber: ordinalNumber,

  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),

  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1
    }
  }),

  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),

  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),

  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaulFormattingWidth: 'wide'
  })
};

function buildMatchPatternFn (args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};

    var matchResult = string.match(args.matchPattern);
    if (!matchResult) {
      return null
    }
    var matchedString = matchResult[0];

    var parseResult = string.match(args.parsePattern);
    if (!parseResult) {
      return null
    }
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;

    return {
      value: value,
      rest: string.slice(matchedString.length)
    }
  }
}

function buildMatchFn (args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var width = options.width;

    var matchPattern = (width && args.matchPatterns[width]) || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null
    }
    var matchedString = matchResult[0];

    var parsePatterns = (width && args.parsePatterns[width]) || args.parsePatterns[args.defaultParseWidth];

    var value;
    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
      value = parsePatterns.findIndex(function (pattern) {
        return pattern.test(string)
      });
    } else {
      value = findKey(parsePatterns, function (pattern) {
        return pattern.test(string)
      });
    }

    value = args.valueCallback ? args.valueCallback(value) : value;
    value = options.valueCallback ? options.valueCallback(value) : value;

    return {
      value: value,
      rest: string.slice(matchedString.length)
    }
  }
}

function findKey (object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key
    }
  }
}

var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;

var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};

var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};

var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};

var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};

var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};

var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10)
    }
  }),

  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),

  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1
    }
  }),

  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),

  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),

  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};

/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale$1 = {
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1
  }
};

var MILLISECONDS_IN_DAY = 86400000;

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function getUTCDayOfYear (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function startOfUTCISOWeek (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var weekStartsOn = 1;

  var date = toDate(dirtyDate, dirtyOptions);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function getUTCISOWeekYear (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();

  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear, dirtyOptions);

  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year
  } else {
    return year - 1
  }
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function startOfUTCISOWeekYear (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var year = getUTCISOWeekYear(dirtyDate, dirtyOptions);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary, dirtyOptions);
  return date
}

var MILLISECONDS_IN_WEEK = 604800000;

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function getUTCISOWeek (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var diff = startOfUTCISOWeek(date, dirtyOptions).getTime() - startOfUTCISOWeekYear(date, dirtyOptions).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function startOfUTCWeek (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')
  }

  var date = toDate(dirtyDate, options);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function getUTCWeekYear (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale &&
    locale.options &&
    locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate =
    localeFirstWeekContainsDate == null
      ? 1
      : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate =
    options.firstWeekContainsDate == null
      ? defaultFirstWeekContainsDate
      : toInteger(options.firstWeekContainsDate);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively')
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);

  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year
  } else {
    return year - 1
  }
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function startOfUTCWeekYear (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale &&
    locale.options &&
    locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate =
    localeFirstWeekContainsDate == null
      ? 1
      : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate =
    options.firstWeekContainsDate == null
      ? defaultFirstWeekContainsDate
      : toInteger(options.firstWeekContainsDate);

  var year = getUTCWeekYear(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, dirtyOptions);
  return date
}

var MILLISECONDS_IN_WEEK$1 = 604800000;

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function getUTCWeek (dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var diff = startOfUTCWeek(date, dirtyOptions).getTime() - startOfUTCWeekYear(date, dirtyOptions).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1
}

var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

var formatters = {
  // Era
  G: function (date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {width: 'abbreviated'})
      // A, B
      case 'GGGGG':
        return localize.era(era, {width: 'narrow'})
      // Anno Domini, Before Christ
      case 'GGGG':
      default:
        return localize.era(era, {width: 'wide'})
    }
  },

  // Year
  y: function (date, token, localize, options) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    var signedYear = date.getUTCFullYear();

    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var year = signedYear > 0 ? signedYear : 1 - signedYear;

    // Two digit year
    if (token === 'yy') {
      var twoDigitYear = year % 100;
      return addLeadingZeros(twoDigitYear, 2)
    }

    // Ordinal number
    if (token === 'yo') {
      return localize.ordinalNumber(year, {unit: 'year'})
    }

    // Padding
    return addLeadingZeros(year, token.length)
  },

  // Local week-numbering year
  Y: function (date, token, localize, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2)
    }

    // Ordinal number
    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {unit: 'year'})
    }

    // Padding
    return addLeadingZeros(weekYear, token.length)
  },

  // ISO week-numbering year
  R: function (date, token, localize, options) {
    var isoWeekYear = getUTCISOWeekYear(date, options);

    // Padding
    return addLeadingZeros(isoWeekYear, token.length)
  },

  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token, localize, options) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length)
  },

  // Quarter
  Q: function (date, token, localize, options) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter)
      // 01, 02, 03, 04
      case 'QQ':
        return addLeadingZeros(quarter, 2)
      // 1st, 2nd, 3rd, 4th
      case 'Qo':
        return localize.ordinalNumber(quarter, {unit: 'quarter'})
      // Q1, Q2, Q3, Q4
      case 'QQQ':
        return localize.quarter(quarter, {width: 'abbreviated', context: 'formatting'})
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'QQQQQ':
        return localize.quarter(quarter, {width: 'narrow', context: 'formatting'})
      // 1st quarter, 2nd quarter, ...
      case 'QQQQ':
      default:
        return localize.quarter(quarter, {width: 'wide', context: 'formatting'})
    }
  },

  // Stand-alone quarter
  q: function (date, token, localize, options) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter)
      // 01, 02, 03, 04
      case 'qq':
        return addLeadingZeros(quarter, 2)
      // 1st, 2nd, 3rd, 4th
      case 'qo':
        return localize.ordinalNumber(quarter, {unit: 'quarter'})
      // Q1, Q2, Q3, Q4
      case 'qqq':
        return localize.quarter(quarter, {width: 'abbreviated', context: 'standalone'})
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'qqqqq':
        return localize.quarter(quarter, {width: 'narrow', context: 'standalone'})
      // 1st quarter, 2nd quarter, ...
      case 'qqqq':
      default:
        return localize.quarter(quarter, {width: 'wide', context: 'standalone'})
    }
  },

  // Month
  M: function (date, token, localize, options) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'M':
        return String(month + 1)
      // 01, 02, ..., 12
      case 'MM':
        return addLeadingZeros(month + 1, 2)
      // 1st, 2nd, ..., 12th
      case 'Mo':
        return localize.ordinalNumber(month + 1, {unit: 'month'})
      // Jan, Feb, ..., Dec
      case 'MMM':
        return localize.month(month, {width: 'abbreviated', context: 'formatting'})
      // J, F, ..., D
      case 'MMMMM':
        return localize.month(month, {width: 'narrow', context: 'formatting'})
      // January, February, ..., December
      case 'MMMM':
      default:
        return localize.month(month, {width: 'wide', context: 'formatting'})
    }
  },

  // Stand-alone month
  L: function (date, token, localize, options) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1)
      // 01, 02, ..., 12
      case 'LL':
        return addLeadingZeros(month + 1, 2)
      // 1st, 2nd, ..., 12th
      case 'Lo':
        return localize.ordinalNumber(month + 1, {unit: 'month'})
      // Jan, Feb, ..., Dec
      case 'LLL':
        return localize.month(month, {width: 'abbreviated', context: 'standalone'})
      // J, F, ..., D
      case 'LLLLL':
        return localize.month(month, {width: 'narrow', context: 'standalone'})
      // January, February, ..., December
      case 'LLLL':
      default:
        return localize.month(month, {width: 'wide', context: 'standalone'})
    }
  },

  // Local week of year
  w: function (date, token, localize, options) {
    var week = getUTCWeek(date, options);

    if (token === 'wo') {
      return localize.ordinalNumber(week, {unit: 'week'})
    }

    return addLeadingZeros(week, token.length)
  },

  // ISO week of year
  I: function (date, token, localize, options) {
    var isoWeek = getUTCISOWeek(date, options);

    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {unit: 'week'})
    }

    return addLeadingZeros(isoWeek, token.length)
  },

  // Day of the month
  d: function (date, token, localize, options) {
    var dayOfMonth = date.getUTCDate();

    if (token === 'do') {
      return localize.ordinalNumber(dayOfMonth, {unit: 'date'})
    }

    return addLeadingZeros(dayOfMonth, token.length)
  },

  // Day of year
  D: function (date, token, localize, options) {
    var dayOfYear = getUTCDayOfYear(date, options);

    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {unit: 'dayOfYear'})
    }

    return addLeadingZeros(dayOfYear, token.length)
  },

  // Day of week
  E: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})
      // T
      case 'EEEEE':
        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})
      // Tu
      case 'EEEEEE':
        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})
      // Tuesday
      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})
    }
  },

  // Local day of week
  e: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = ((dayOfWeek - options.weekStartsOn + 8) % 7) || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek)
      // Padded numerical value
      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2)
      // 1st, 2nd, ..., 7th
      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {unit: 'day'})
      case 'eee':
        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})
      // T
      case 'eeeee':
        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})
      // Tu
      case 'eeeeee':
        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})
      // Tuesday
      case 'eeee':
      default:
        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})
    }
  },

  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = ((dayOfWeek - options.weekStartsOn + 8) % 7) || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek)
      // Padded numberical value
      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length)
      // 1st, 2nd, ..., 7th
      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {unit: 'day'})
      case 'ccc':
        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'standalone'})
      // T
      case 'ccccc':
        return localize.day(dayOfWeek, {width: 'narrow', context: 'standalone'})
      // Tu
      case 'cccccc':
        return localize.day(dayOfWeek, {width: 'short', context: 'standalone'})
      // Tuesday
      case 'cccc':
      default:
        return localize.day(dayOfWeek, {width: 'wide', context: 'standalone'})
    }
  },

  // ISO day of week
  i: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek)
      // 02
      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length)
      // 2nd
      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {unit: 'day'})
      // Tue
      case 'iii':
        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})
      // T
      case 'iiiii':
        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})
      // Tu
      case 'iiiiii':
        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})
      // Tuesday
      case 'iiii':
      default:
        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})
    }
  },

  // AM or PM
  a: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = (hours / 12) >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})
      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})
      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})
    }
  },

  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = (hours / 12) >= 1 ? 'pm' : 'am';
    }

    switch (token) {
      case 'b':
      case 'bb':
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})
      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})
      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})
    }
  },

  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})
      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})
      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})
    }
  },

  // Hour [1-12]
  h: function (date, token, localize, options) {
    var hours = date.getUTCHours() % 12;

    if (hours === 0) {
      hours = 12;
    }

    if (token === 'ho') {
      return localize.ordinalNumber(hours, {unit: 'hour'})
    }

    return addLeadingZeros(hours, token.length)
  },

  // Hour [0-23]
  H: function (date, token, localize, options) {
    var hours = date.getUTCHours();

    if (token === 'Ho') {
      return localize.ordinalNumber(hours, {unit: 'hour'})
    }

    return addLeadingZeros(hours, token.length)
  },

  // Hour [0-11]
  K: function (date, token, localize, options) {
    var hours = date.getUTCHours() % 12;

    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {unit: 'hour'})
    }

    return addLeadingZeros(hours, token.length)
  },

  // Hour [1-24]
  k: function (date, token, localize, options) {
    var hours = date.getUTCHours();

    if (hours === 0) {
      hours = 24;
    }

    if (token === 'ko') {
      return localize.ordinalNumber(hours, {unit: 'hour'})
    }

    return addLeadingZeros(hours, token.length)
  },

  // Minute
  m: function (date, token, localize, options) {
    var minutes = date.getUTCMinutes();

    if (token === 'mo') {
      return localize.ordinalNumber(minutes, {unit: 'minute'})
    }

    return addLeadingZeros(minutes, token.length)
  },

  // Second
  s: function (date, token, localize, options) {
    var seconds = date.getUTCSeconds();

    if (token === 'so') {
      return localize.ordinalNumber(seconds, {unit: 'second'})
    }

    return addLeadingZeros(seconds, token.length)
  },

  // Fraction of second
  S: function (date, token, localize, options) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, numberOfDigits)
  },

  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return 'Z'
    }

    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset)

      // Hours, minutes and optional seconds without `:` delimeter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case 'XXXX':
      case 'XX': // Hours and minutes without `:` delimeter
        return formatTimezone(timezoneOffset)

      // Hours, minutes and optional seconds with `:` delimeter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimeter
      default:
        return formatTimezone(timezoneOffset, ':')
    }
  },

  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset)

      // Hours, minutes and optional seconds without `:` delimeter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case 'xxxx':
      case 'xx': // Hours and minutes without `:` delimeter
        return formatTimezone(timezoneOffset)

      // Hours, minutes and optional seconds with `:` delimeter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimeter
      default:
        return formatTimezone(timezoneOffset, ':')
    }
  },

  // Timezone (GMT)
  O: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')
      // Long
      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':')
    }
  },

  // Timezone (specific non-location)
  z: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')
      // Long
      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':')
    }
  },

  // Seconds timestamp
  t: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length)
  },

  // Milliseconds timestamp
  T: function (date, token, localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length)
  }
};

function addLeadingZeros (number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = '0' + output;
  }
  return sign + output
}

function formatTimezone (offset, dirtyDelimeter) {
  var delimeter = dirtyDelimeter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimeter + minutes
}

function formatTimezoneWithOptionalMinutes (offset, dirtyDelimeter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)
  }
  return formatTimezone(offset, dirtyDelimeter)
}

function formatTimezoneShort (offset, dirtyDelimeter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours)
  }
  var delimeter = dirtyDelimeter || '';
  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2)
}

function dateLongFormatter (pattern, formatLong, options) {
  switch (pattern) {
    case 'P':
      return formatLong.date({width: 'short'})
    case 'PP':
      return formatLong.date({width: 'medium'})
    case 'PPP':
      return formatLong.date({width: 'long'})
    case 'PPPP':
    default:
      return formatLong.date({width: 'full'})
  }
}

function timeLongFormatter (pattern, formatLong, options) {
  switch (pattern) {
    case 'p':
      return formatLong.time({width: 'short'})
    case 'pp':
      return formatLong.time({width: 'medium'})
    case 'ppp':
      return formatLong.time({width: 'long'})
    case 'pppp':
    default:
      return formatLong.time({width: 'full'})
  }
}

function dateTimeLongFormatter (pattern, formatLong, options) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong)
  }

  var dateTimeFormat;

  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({width: 'short'});
      break
    case 'PP':
      dateTimeFormat = formatLong.dateTime({width: 'medium'});
      break
    case 'PPP':
      dateTimeFormat = formatLong.dateTime({width: 'long'});
      break
    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({width: 'full'});
      break
  }

  return dateTimeFormat
    .replace('{{date}}', dateLongFormatter(datePattern, formatLong))
    .replace('{{time}}', timeLongFormatter(timePattern, formatLong))
}

var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};

/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @param {Date|String|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */
function subMilliseconds (dirtyDate, dirtyAmount, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount, dirtyOptions)
}

var protectedTokens = ['D', 'DD', 'YY', 'YYYY'];

function isProtectedToken(token) {
  return protectedTokens.indexOf(token) !== -1
}

function throwProtectedError(token) {
  throw new RangeError(
    '`options.awareOfUnicodeTokens` must be set to `true` to use `' +
      token +
      '` token; see: https://git.io/fxCyr'
  )
}

// This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;

var escapedStringRegExp = /^'(.*?)'?$/;
var doubleQuoteRegExp = /''/g;

/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aaa  | AM, PM                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 0001, ..., 999               |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 05/29/1453                        | 7     |
 * |                                 | PP      | May 29, 1453                      | 7     |
 * |                                 | PPP     | May 29th, 1453                    | 7     |
 * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
 * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. These tokens are often confused with others. See: https://git.io/fxCyr
 *
 * @param {Date|String|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
 *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
 *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
 *   See: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(
 *   new Date(2014, 1, 11),
 *   'MM/dd/yyyy'
 * )
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(
 *   new Date(2014, 6, 2),
 *   "do 'de' MMMM yyyy",
 *   {locale: eoLocale}
 * )
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(
 *   new Date(2014, 6, 2, 15),
 *   "h 'o''clock'"
 * )
 * //=> "3 o'clock"
 */
function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError(
      '2 arguments required, but only ' + arguments.length + ' present'
    )
  }

  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};

  var locale = options.locale || locale$1;

  var localeFirstWeekContainsDate =
    locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate =
    localeFirstWeekContainsDate == null
      ? 1
      : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate =
    options.firstWeekContainsDate == null
      ? defaultFirstWeekContainsDate
      : toInteger(options.firstWeekContainsDate);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError(
      'firstWeekContainsDate must be between 1 and 7 inclusively'
    )
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn =
    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn =
    options.weekStartsOn == null
      ? defaultWeekStartsOn
      : toInteger(options.weekStartsOn);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')
  }

  if (!locale.localize) {
    throw new RangeError('locale must contain localize property')
  }

  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property')
  }

  var originalDate = toDate(dirtyDate, options);

  if (!isValid(originalDate, options)) {
    return 'Invalid Date'
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset, options);

  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };

  var result = formatStr
    .match(longFormattingTokensRegExp)
    .map(function(substring) {
      var firstCharacter = substring[0];
      if (firstCharacter === 'p' || firstCharacter === 'P') {
        var longFormatter = longFormatters[firstCharacter];
        return longFormatter(substring, locale.formatLong, formatterOptions)
      }
      return substring
    })
    .join('')
    .match(formattingTokensRegExp)
    .map(function(substring) {
      // Replace two single quote characters with one single quote character
      if (substring === "''") {
        return "'"
      }

      var firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return cleanEscapedString(substring)
      }

      var formatter = formatters[firstCharacter];
      if (formatter) {
        if (!options.awareOfUnicodeTokens && isProtectedToken(substring)) {
          throwProtectedError(substring);
        }
        return formatter(utcDate, substring, locale.localize, formatterOptions)
      }

      return substring
    })
    .join('');

  return result
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'")
}

/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @param {Date|String|Number} date - the date that should be after the other one to return true
 * @param {Date|String|Number} dateToCompare - the date to compare with
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */
function isAfter (dirtyDate, dirtyDateToCompare, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions);
  return date.getTime() > dateToCompare.getTime()
}

/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * @param {Date|String|Number} date - the date that should be before the other one to return true
 * @param {Date|String|Number} dateToCompare - the date to compare with
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Boolean} the first date is before the second date
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */
function isBefore (dirtyDate, dirtyDateToCompare, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions);
  return date.getTime() < dateToCompare.getTime()
}

/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * @param {Date|String|Number} dateLeft - the first date to compare
 * @param {Date|String|Number} dateRight - the second date to compare
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Boolean} the dates are equal
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * var result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0)
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */
function isEqual$1 (dirtyLeftDate, dirtyRightDate, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var dateLeft = toDate(dirtyLeftDate, dirtyOptions);
  var dateRight = toDate(dirtyRightDate, dirtyOptions);
  return dateLeft.getTime() === dateRight.getTime()
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function setUTCDay (dirtyDate, dirtyDay, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var day = toInteger(dirtyDay);

  var currentDay = date.getUTCDay();

  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;

  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;

  date.setUTCDate(date.getUTCDate() + diff);
  return date
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function setUTCWeek (dirtyDate, dirtyWeek, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var week = toInteger(dirtyWeek);
  var diff = getUTCWeek(date, dirtyOptions) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function setUTCISODay (dirtyDate, dirtyDay, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var day = toInteger(dirtyDay);

  if (day % 7 === 0) {
    day = day - 7;
  }

  var weekStartsOn = 1;
  var date = toDate(dirtyDate, dirtyOptions);
  var currentDay = date.getUTCDay();

  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;

  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;

  date.setUTCDate(date.getUTCDate() + diff);
  return date
}

// This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376
function setUTCISOWeek (dirtyDate, dirtyISOWeek, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var isoWeek = toInteger(dirtyISOWeek);
  var diff = getUTCISOWeek(date, dirtyOptions) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date
}

var MILLISECONDS_IN_HOUR$1 = 3600000;
var MILLISECONDS_IN_MINUTE$2 = 60000;
var MILLISECONDS_IN_SECOND = 1000;

var numericPatterns = {
  month: /^(1[0-2]|0?\d)/, // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/, // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/, // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/, // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/, // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/, // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/, // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/, // 0 to 12
  minute: /^[0-5]?\d/, // 0 to 59
  second: /^[0-5]?\d/, // 0 to 59

  singleDigit: /^\d/, // 0 to 9
  twoDigits: /^\d{1,2}/, // 0 to 99
  threeDigits: /^\d{1,3}/, // 0 to 999
  fourDigits: /^\d{1,4}/, // 0 to 9999

  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/, // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/, // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/, // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
};

var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

function parseNumericPattern (pattern, string, valueCallback) {
  var matchResult = string.match(pattern);

  if (!matchResult) {
    return null
  }

  var value = parseInt(matchResult[0], 10);

  return {
    value: valueCallback ? valueCallback(value) : value,
    rest: string.slice(matchResult[0].length)
  }
}

function parseTimezonePattern (pattern, string) {
  var matchResult = string.match(pattern);

  if (!matchResult) {
    return null
  }

  // Input is 'Z'
  if (matchResult[0] === 'Z') {
    return {
      value: 0,
      rest: string.slice(1)
    }
  }

  var sign = matchResult[1] === '+' ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;

  return {
    value: sign * (
      hours * MILLISECONDS_IN_HOUR$1 +
        minutes * MILLISECONDS_IN_MINUTE$2 +
        seconds * MILLISECONDS_IN_SECOND
    ),
    rest: string.slice(matchResult[0].length)
  }
}

function parseAnyDigitsSigned (string, valueCallback) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback)
}

function parseNDigits (n, string, valueCallback) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback)
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback)
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback)
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback)
    default:
      return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback)
  }
}

function parseNDigitsSigned (n, string, valueCallback) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback)
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback)
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback)
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback)
    default:
      return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback)
  }
}

function dayPeriodEnumToHours (enumValue) {
  switch (enumValue) {
    case 'morning':
      return 4
    case 'evening':
      return 17
    case 'pm':
    case 'noon':
    case 'afternoon':
      return 12
    case 'am':
    case 'midnight':
    case 'night':
    default:
      return 0
  }
}

function normalizeTwoDigitYear (twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;

  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }

  return isCommonEra ? result : 1 - result
}

var DAYS_IN_MONTH$1 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR$1 = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

// User for validation
function isLeapYearIndex$1 (year) {
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)
}

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */
var parsers = {
  // Era
  G: {
    priority: 140,
    parse: function (string, token, match, options) {
      switch (token) {
        // AD, BC
        case 'G':
        case 'GG':
        case 'GGG':
          return match.era(string, {width: 'abbreviated'}) ||
            match.era(string, {width: 'narrow'})
        // A, B
        case 'GGGGG':
          return match.era(string, {width: 'narrow'})
        // Anno Domini, Before Christ
        case 'GGGG':
        default:
          return match.era(string, {width: 'wide'}) ||
            match.era(string, {width: 'abbreviated'}) ||
            match.era(string, {width: 'narrow'})
      }
    },
    set: function (date, value, options) {
      // Sets year 10 BC if BC, or 10 AC if AC
      date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Year
  y: {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    priority: 130,
    parse: function (string, token, match, options) {
      var valueCallback = function (year) {
        return {
          year: year,
          isTwoDigitYear: token === 'yy'
        }
      };

      switch (token) {
        case 'y':
          return parseNDigits(4, string, valueCallback)
        case 'yo':
          return match.ordinalNumber(string, {unit: 'year', valueCallback: valueCallback})
        default:
          return parseNDigits(token.length, string, valueCallback)
      }
    },
    validate: function (date, value, options) {
      return value.isTwoDigitYear || value.year > 0
    },
    set: function (date, value, options) {
      var currentYear = getUTCWeekYear(date, options);

      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date
      }

      var year = currentYear > 0 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Local week-numbering year
  Y: {
    priority: 130,
    parse: function (string, token, match, options) {
      var valueCallback = function (year) {
        return {
          year: year,
          isTwoDigitYear: token === 'YY'
        }
      };

      switch (token) {
        case 'Y':
          return parseNDigits(4, string, valueCallback)
        case 'Yo':
          return match.ordinalNumber(string, {unit: 'year', valueCallback: valueCallback})
        default:
          return parseNDigits(token.length, string, valueCallback)
      }
    },
    validate: function (date, value, options) {
      return value.isTwoDigitYear || value.year > 0
    },
    set: function (date, value, options) {
      var currentYear = date.getUTCFullYear();

      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date, options)
      }

      var year = currentYear > 0 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek(date, options)
    }
  },

  // ISO week-numbering year
  R: {
    priority: 130,
    parse: function (string, token, match, options) {
      if (token === 'R') {
        return parseNDigitsSigned(4, string)
      }

      return parseNDigitsSigned(token.length, string)
    },
    set: function (date, value, options) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek(firstWeekOfYear)
    }
  },

  // Extended year
  u: {
    priority: 130,
    parse: function (string, token, match, options) {
      if (token === 'u') {
        return parseNDigitsSigned(4, string)
      }

      return parseNDigitsSigned(token.length, string)
    },
    set: function (date, value, options) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Quarter
  Q: {
    priority: 120,
    parse: function (string, token, match, options) {
      switch (token) {
        // 1, 2, 3, 4
        case 'Q':
        case 'QQ': // 01, 02, 03, 04
          return parseNDigits(token.length, string)
        // 1st, 2nd, 3rd, 4th
        case 'Qo':
          return match.ordinalNumber(string, {unit: 'quarter'})
        // Q1, Q2, Q3, Q4
        case 'QQQ':
          return match.quarter(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.quarter(string, {width: 'narrow', context: 'formatting'})
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'QQQQQ':
          return match.quarter(string, {width: 'narrow', context: 'formatting'})
        // 1st quarter, 2nd quarter, ...
        case 'QQQQ':
        default:
          return match.quarter(string, {width: 'wide', context: 'formatting'}) ||
            match.quarter(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.quarter(string, {width: 'narrow', context: 'formatting'})
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 4
    },
    set: function (date, value, options) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Stand-alone quarter
  q: {
    priority: 120,
    parse: function (string, token, match, options) {
      switch (token) {
        // 1, 2, 3, 4
        case 'q':
        case 'qq': // 01, 02, 03, 04
          return parseNDigits(token.length, string)
        // 1st, 2nd, 3rd, 4th
        case 'qo':
          return match.ordinalNumber(string, {unit: 'quarter'})
        // Q1, Q2, Q3, Q4
        case 'qqq':
          return match.quarter(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.quarter(string, {width: 'narrow', context: 'standalone'})
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'qqqqq':
          return match.quarter(string, {width: 'narrow', context: 'standalone'})
        // 1st quarter, 2nd quarter, ...
        case 'qqqq':
        default:
          return match.quarter(string, {width: 'wide', context: 'standalone'}) ||
            match.quarter(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.quarter(string, {width: 'narrow', context: 'standalone'})
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 4
    },
    set: function (date, value, options) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Month
  M: {
    priority: 110,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        return value - 1
      };

      switch (token) {
        // 1, 2, ..., 12
        case 'M':
          return parseNumericPattern(numericPatterns.month, string, valueCallback)
        // 01, 02, ..., 12
        case 'MM':
          return parseNDigits(2, string, valueCallback)
        // 1st, 2nd, ..., 12th
        case 'Mo':
          return match.ordinalNumber(string, {unit: 'month', valueCallback: valueCallback})
        // Jan, Feb, ..., Dec
        case 'MMM':
          return match.month(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.month(string, {width: 'narrow', context: 'formatting'})
        // J, F, ..., D
        case 'MMMMM':
          return match.month(string, {width: 'narrow', context: 'formatting'})
        // January, February, ..., December
        case 'MMMM':
        default:
          return match.month(string, {width: 'wide', context: 'formatting'}) ||
            match.month(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.month(string, {width: 'narrow', context: 'formatting'})
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 11
    },
    set: function (date, value, options) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Stand-alone month
  L: {
    priority: 110,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        return value - 1
      };

      switch (token) {
        // 1, 2, ..., 12
        case 'L':
          return parseNumericPattern(numericPatterns.month, string, valueCallback)
        // 01, 02, ..., 12
        case 'LL':
          return parseNDigits(2, string, valueCallback)
        // 1st, 2nd, ..., 12th
        case 'Lo':
          return match.ordinalNumber(string, {unit: 'month', valueCallback: valueCallback})
        // Jan, Feb, ..., Dec
        case 'LLL':
          return match.month(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.month(string, {width: 'narrow', context: 'standalone'})
        // J, F, ..., D
        case 'LLLLL':
          return match.month(string, {width: 'narrow', context: 'standalone'})
        // January, February, ..., December
        case 'LLLL':
        default:
          return match.month(string, {width: 'wide', context: 'standalone'}) ||
            match.month(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.month(string, {width: 'narrow', context: 'standalone'})
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 11
    },
    set: function (date, value, options) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Local week of year
  w: {
    priority: 100,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'w':
          return parseNumericPattern(numericPatterns.week, string)
        case 'wo':
          return match.ordinalNumber(string, {unit: 'week'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 53
    },
    set: function (date, value, options) {
      return startOfUTCWeek(setUTCWeek(date, value, options), options)
    }
  },

  // ISO week of year
  I: {
    priority: 100,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'I':
          return parseNumericPattern(numericPatterns.week, string)
        case 'Io':
          return match.ordinalNumber(string, {unit: 'week'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 53
    },
    set: function (date, value, options) {
      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options)
    }
  },

  // Day of the month
  d: {
    priority: 90,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'd':
          return parseNumericPattern(numericPatterns.date, string)
        case 'do':
          return match.ordinalNumber(string, {unit: 'date'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex$1(year);
      var month = date.getUTCMonth();
      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR$1[month]
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH$1[month]
      }
    },
    set: function (date, value, options) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Day of year
  D: {
    priority: 90,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'D':
        case 'DD':
          return parseNumericPattern(numericPatterns.dayOfYear, string)
        case 'Do':
          return match.ordinalNumber(string, {unit: 'date'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex$1(year);
      if (isLeapYear) {
        return value >= 1 && value <= 366
      } else {
        return value >= 1 && value <= 365
      }
    },
    set: function (date, value, options) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Day of week
  E: {
    priority: 90,
    parse: function (string, token, match, options) {
      switch (token) {
        // Tue
        case 'E':
        case 'EE':
        case 'EEE':
          return match.day(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.day(string, {width: 'short', context: 'formatting'}) ||
            match.day(string, {width: 'narrow', context: 'formatting'})
        // T
        case 'EEEEE':
          return match.day(string, {width: 'narrow', context: 'formatting'})
        // Tu
        case 'EEEEEE':
          return match.day(string, {width: 'short', context: 'formatting'}) ||
          match.day(string, {width: 'narrow', context: 'formatting'})
        // Tuesday
        case 'EEEE':
        default:
          return match.day(string, {width: 'wide', context: 'formatting'}) ||
            match.day(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.day(string, {width: 'short', context: 'formatting'}) ||
            match.day(string, {width: 'narrow', context: 'formatting'})
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 6
    },
    set: function (date, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Local day of week
  e: {
    priority: 90,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays
      };

      switch (token) {
        // 3
        case 'e':
        case 'ee': // 03
          return parseNDigits(token.length, string, valueCallback)
        // 3rd
        case 'eo':
          return match.ordinalNumber(string, {unit: 'day', valueCallback: valueCallback})
        // Tue
        case 'eee':
          return match.day(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.day(string, {width: 'short', context: 'formatting'}) ||
            match.day(string, {width: 'narrow', context: 'formatting'})
        // T
        case 'eeeee':
          return match.day(string, {width: 'narrow', context: 'formatting'})
        // Tu
        case 'eeeeee':
          return match.day(string, {width: 'short', context: 'formatting'}) ||
          match.day(string, {width: 'narrow', context: 'formatting'})
        // Tuesday
        case 'eeee':
        default:
          return match.day(string, {width: 'wide', context: 'formatting'}) ||
            match.day(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.day(string, {width: 'short', context: 'formatting'}) ||
            match.day(string, {width: 'narrow', context: 'formatting'})
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 6
    },
    set: function (date, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // Stand-alone local day of week
  c: {
    priority: 90,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays
      };

      switch (token) {
        // 3
        case 'c':
        case 'cc': // 03
          return parseNDigits(token.length, string, valueCallback)
        // 3rd
        case 'co':
          return match.ordinalNumber(string, {unit: 'day', valueCallback: valueCallback})
        // Tue
        case 'ccc':
          return match.day(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.day(string, {width: 'short', context: 'standalone'}) ||
            match.day(string, {width: 'narrow', context: 'standalone'})
        // T
        case 'ccccc':
          return match.day(string, {width: 'narrow', context: 'standalone'})
        // Tu
        case 'cccccc':
          return match.day(string, {width: 'short', context: 'standalone'}) ||
          match.day(string, {width: 'narrow', context: 'standalone'})
        // Tuesday
        case 'cccc':
        default:
          return match.day(string, {width: 'wide', context: 'standalone'}) ||
            match.day(string, {width: 'abbreviated', context: 'standalone'}) ||
            match.day(string, {width: 'short', context: 'standalone'}) ||
            match.day(string, {width: 'narrow', context: 'standalone'})
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 6
    },
    set: function (date, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // ISO day of week
  i: {
    priority: 90,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        if (value === 0) {
          return 7
        }
        return value
      };

      switch (token) {
        // 2
        case 'i':
        case 'ii': // 02
          return parseNDigits(token.length, string)
        // 2nd
        case 'io':
          return match.ordinalNumber(string, {unit: 'day'})
        // Tue
        case 'iii':
          return match.day(string, {width: 'abbreviated', context: 'formatting', valueCallback: valueCallback}) ||
            match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||
            match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})
        // T
        case 'iiiii':
          return match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})
        // Tu
        case 'iiiiii':
          return match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||
          match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})
        // Tuesday
        case 'iiii':
        default:
          return match.day(string, {width: 'wide', context: 'formatting', valueCallback: valueCallback}) ||
            match.day(string, {width: 'abbreviated', context: 'formatting', valueCallback: valueCallback}) ||
            match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||
            match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 7
    },
    set: function (date, value, options) {
      date = setUTCISODay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date
    }
  },

  // AM or PM
  a: {
    priority: 80,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'a':
        case 'aa':
        case 'aaa':
          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'aaaaa':
          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'aaaa':
        default:
          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
      }
    },
    set: function (date, value, options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date
    }
  },

  // AM, PM, midnight
  b: {
    priority: 80,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'b':
        case 'bb':
        case 'bbb':
          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'bbbbb':
          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'bbbb':
        default:
          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
      }
    },
    set: function (date, value, options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date
    }
  },

  // in the morning, in the afternoon, in the evening, at night
  B: {
    priority: 80,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'B':
        case 'BB':
        case 'BBB':
          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'BBBBB':
          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
        case 'BBBB':
        default:
          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||
            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})
      }
    },
    set: function (date, value, options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date
    }
  },

  // Hour [1-12]
  h: {
    priority: 70,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'h':
          return parseNumericPattern(numericPatterns.hour12h, string)
        case 'ho':
          return match.ordinalNumber(string, {unit: 'hour'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 12
    },
    set: function (date, value, options) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date
    }
  },

  // Hour [0-23]
  H: {
    priority: 70,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'H':
          return parseNumericPattern(numericPatterns.hour23h, string)
        case 'Ho':
          return match.ordinalNumber(string, {unit: 'hour'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 23
    },
    set: function (date, value, options) {
      date.setUTCHours(value, 0, 0, 0);
      return date
    }
  },

  // Hour [0-11]
  K: {
    priority: 70,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'K':
          return parseNumericPattern(numericPatterns.hour11h, string)
        case 'Ko':
          return match.ordinalNumber(string, {unit: 'hour'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 11
    },
    set: function (date, value, options) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date
    }
  },

  // Hour [1-24]
  k: {
    priority: 70,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'k':
          return parseNumericPattern(numericPatterns.hour24h, string)
        case 'ko':
          return match.ordinalNumber(string, {unit: 'hour'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 1 && value <= 24
    },
    set: function (date, value, options) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date
    }
  },

  // Minute
  m: {
    priority: 60,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'm':
          return parseNumericPattern(numericPatterns.minute, string)
        case 'mo':
          return match.ordinalNumber(string, {unit: 'minute'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 59
    },
    set: function (date, value, options) {
      date.setUTCMinutes(value, 0, 0);
      return date
    }
  },

  // Second
  s: {
    priority: 50,
    parse: function (string, token, match, options) {
      switch (token) {
        case 's':
          return parseNumericPattern(numericPatterns.second, string)
        case 'so':
          return match.ordinalNumber(string, {unit: 'second'})
        default:
          return parseNDigits(token.length, string)
      }
    },
    validate: function (date, value, options) {
      return value >= 0 && value <= 59
    },
    set: function (date, value, options) {
      date.setUTCSeconds(value, 0);
      return date
    }
  },

  // Fraction of second
  S: {
    priority: 40,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        return Math.floor(value * Math.pow(10, -token.length + 3))
      };
      return parseNDigits(token.length, string, valueCallback)
    },
    set: function (date, value, options) {
      date.setUTCMilliseconds(value);
      return date
    }
  },

  // Timezone (ISO-8601. +00:00 is `'Z'`)
  X: {
    priority: 20,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'X':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string)
        case 'XX':
          return parseTimezonePattern(timezonePatterns.basic, string)
        case 'XXXX':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string)
        case 'XXXXX':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string)
        case 'XXX':
        default:
          return parseTimezonePattern(timezonePatterns.extended, string)
      }
    },
    set: function (date, value, options) {
      return new Date(date.getTime() - value)
    }
  },

  // Timezone (ISO-8601)
  x: {
    priority: 20,
    parse: function (string, token, match, options) {
      switch (token) {
        case 'x':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string)
        case 'xx':
          return parseTimezonePattern(timezonePatterns.basic, string)
        case 'xxxx':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string)
        case 'xxxxx':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string)
        case 'xxx':
        default:
          return parseTimezonePattern(timezonePatterns.extended, string)
      }
    },
    set: function (date, value, options) {
      return new Date(date.getTime() - value)
    }
  },

  // Seconds timestamp
  t: {
    priority: 10,
    parse: function (string, token, match, options) {
      return parseAnyDigitsSigned(string)
    },
    set: function (date, value, options) {
      return new Date(value * 1000)
    }
  },

  // Milliseconds timestamp
  T: {
    priority: 10,
    parse: function (string, token, match, options) {
      return parseAnyDigitsSigned(string)
    },
    set: function (date, value, options) {
      return new Date(value)
    }
  }
};

var TIMEZONE_UNIT_PRIORITY = 20;

// This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

var escapedStringRegExp$1 = /^'(.*?)'?$/;
var doubleQuoteRegExp$1 = /''/g;

var notWhitespaceRegExp = /\S/;

/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 6     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 6     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              |  40 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  20 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  20 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Seconds timestamp               |  10 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Milliseconds timestamp          |  10 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `baseDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *
 * 6. These tokens are often confused with others. See: https://git.io/fxCyr
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `baseDate` which works as a context of parsing.
 *
 * `baseDate` must be passed for correct work of the function.
 * If you're not sure which `baseDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `baseDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `baseDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|String|Number} baseDate - defines values missing from the parsed dateString
 * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
 *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
 *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
 *   See: https://git.io/fxCyr
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse(
 *   '02/11/2014',
 *   'MM/dd/yyyy',
 *   new Date()
 * )
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse(
 *   '28-a de februaro',
 *   "do 'de' MMMM",
 *   new Date(2010, 0, 1),
 *   {locale: eo}
 * )
 * //=> Sun Feb 28 2010 00:00:00
 */
function parse(
  dirtyDateString,
  dirtyFormatString,
  dirtyBaseDate,
  dirtyOptions
) {
  if (arguments.length < 3) {
    throw new TypeError(
      '3 arguments required, but only ' + arguments.length + ' present'
    )
  }

  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var options = dirtyOptions || {};

  var locale = options.locale || locale$1;

  if (!locale.match) {
    throw new RangeError('locale must contain match property')
  }

  var localeFirstWeekContainsDate =
    locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate =
    localeFirstWeekContainsDate == null
      ? 1
      : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate =
    options.firstWeekContainsDate == null
      ? defaultFirstWeekContainsDate
      : toInteger(options.firstWeekContainsDate);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError(
      'firstWeekContainsDate must be between 1 and 7 inclusively'
    )
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn =
    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn =
    options.weekStartsOn == null
      ? defaultWeekStartsOn
      : toInteger(options.weekStartsOn);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')
  }

  if (formatString === '') {
    if (dateString === '') {
      return toDate(dirtyBaseDate, options)
    } else {
      return new Date(NaN)
    }
  }

  var subFnOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale
  };

  // If timezone isn't specified, it will be set to the system timezone
  var setters = [
    {
      priority: TIMEZONE_UNIT_PRIORITY,
      set: dateToSystemTimezone,
      index: 0
    }
  ];

  var i;

  var tokens = formatString.match(formattingTokensRegExp$1);

  for (i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (!options.awareOfUnicodeTokens && isProtectedToken(token)) {
      throwProtectedError(token);
    }

    var firstCharacter = token[0];
    var parser = parsers[firstCharacter];
    if (parser) {
      var parseResult = parser.parse(
        dateString,
        token,
        locale.match,
        subFnOptions
      );

      if (!parseResult) {
        return new Date(NaN)
      }

      setters.push({
        priority: parser.priority,
        set: parser.set,
        validate: parser.validate,
        value: parseResult.value,
        index: setters.length
      });

      dateString = parseResult.rest;
    } else {
      // Replace two single quote characters with one single quote character
      if (token === "''") {
        token = "'";
      } else if (firstCharacter === "'") {
        token = cleanEscapedString$1(token);
      }

      // Cut token from string, or, if string doesn't match the token, return Invalid Date
      if (dateString.indexOf(token) === 0) {
        dateString = dateString.slice(token.length);
      } else {
        return new Date(NaN)
      }
    }
  }

  // Check if the remaining input contains something other than whitespace
  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return new Date(NaN)
  }

  var uniquePrioritySetters = setters
    .map(function(setter) {
      return setter.priority
    })
    .sort(function(a, b) {
      return b - a
    })
    .filter(function(priority, index, array) {
      return array.indexOf(priority) === index
    })
    .map(function(priority) {
      return setters
        .filter(function(setter) {
          return setter.priority === priority
        })
        .reverse()
    })
    .map(function(setterArray) {
      return setterArray[0]
    });

  var date = toDate(dirtyBaseDate, options);

  if (isNaN(date)) {
    return new Date(NaN)
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37
  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));

  for (i = 0; i < uniquePrioritySetters.length; i++) {
    var setter = uniquePrioritySetters[i];

    if (
      setter.validate &&
      !setter.validate(utcDate, setter.value, subFnOptions)
    ) {
      return new Date(NaN)
    }

    utcDate = setter.set(utcDate, setter.value, subFnOptions);
  }

  return utcDate
}

function dateToSystemTimezone(date) {
  var convertedDate = new Date(0);
  convertedDate.setFullYear(
    date.getUTCFullYear(),
    date.getUTCMonth(),
    date.getUTCDate()
  );
  convertedDate.setHours(
    date.getUTCHours(),
    date.getUTCMinutes(),
    date.getUTCSeconds(),
    date.getUTCMilliseconds()
  );
  return convertedDate
}

function cleanEscapedString$1(input) {
  return input.match(escapedStringRegExp$1)[1].replace(doubleQuoteRegExp$1, "'")
}

// 

/**
 * Custom parse behavior on top of date-fns parse function.
 */
function parseDate$1 (date, format$1) {
  if (typeof date !== 'string') {
    return isValid(date) ? date : null;
  }

  var parsed = parse(date, format$1, new Date());

  // if date is not valid or the formatted output after parsing does not match
  // the string value passed in (avoids overflows)
  if (!isValid(parsed) || format(parsed, format$1) !== date) {
    return null;
  }

  return parsed;
}

var afterValidator = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var targetValue = ref.targetValue;
  var inclusion = ref.inclusion; if ( inclusion === void 0 ) inclusion = false;
  var format = ref.format;

  if (typeof format === 'undefined') {
    format = inclusion;
    inclusion = false;
  }

  value = parseDate$1(value, format);
  targetValue = parseDate$1(targetValue, format);

  // if either is not valid.
  if (!value || !targetValue) {
    return false;
  }

  return isAfter(value, targetValue) || (inclusion && isEqual$1(value, targetValue));
};

var options = {
  hasTarget: true,
  isDate: true
};

// required to convert from a list of array values to an object.
var paramNames = ['targetValue', 'inclusion', 'format'];

var after = {
  validate: afterValidator,
  options: options,
  paramNames: paramNames
};

/**
 * Some Alpha Regex helpers.
 * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js
 */

var alpha = {
  en: /^[A-Z]*$/i,
  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
  da: /^[A-ZÆØÅ]*$/i,
  de: /^[A-ZÄÖÜß]*$/i,
  es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,
  fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,
  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
  it: /^[A-Z\xC0-\xFF]*$/i,
  lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,
  nl: /^[A-ZÉËÏÓÖÜ]*$/i,
  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
  ru: /^[А-ЯЁ]*$/i,
  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
  sr: /^[A-ZČĆŽŠĐ]*$/i,
  sv: /^[A-ZÅÄÖ]*$/i,
  tr: /^[A-ZÇĞİıÖŞÜ]*$/i,
  uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,
  az: /^[A-ZÇƏĞİıÖŞÜ]*$/i
};

var alphaSpaces = {
  en: /^[A-Z\s]*$/i,
  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\s]*$/i,
  da: /^[A-ZÆØÅ\s]*$/i,
  de: /^[A-ZÄÖÜß\s]*$/i,
  es: /^[A-ZÁÉÍÑÓÚÜ\s]*$/i,
  fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی\s]*$/,
  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\s]*$/i,
  it: /^[A-Z\xC0-\xFF\s]*$/i,
  lt: /^[A-ZĄČĘĖĮŠŲŪŽ\s]*$/i,
  nl: /^[A-ZÉËÏÓÖÜ\s]*$/i,
  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\s]*$/i,
  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\s]*$/i,
  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\s]*$/i,
  ru: /^[А-ЯЁ\s]*$/i,
  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\s]*$/i,
  sr: /^[A-ZČĆŽŠĐ\s]*$/i,
  sv: /^[A-ZÅÄÖ\s]*$/i,
  tr: /^[A-ZÇĞİıÖŞÜ\s]*$/i,
  uk: /^[А-ЩЬЮЯЄІЇҐ\s]*$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\s]*$/,
  az: /^[A-ZÇƏĞİıÖŞÜ\s]*$/i
};

var alphanumeric = {
  en: /^[0-9A-Z]*$/i,
  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
  da: /^[0-9A-ZÆØÅ]$/i,
  de: /^[0-9A-ZÄÖÜß]*$/i,
  es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,
  fa: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,
  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
  it: /^[0-9A-Z\xC0-\xFF]*$/i,
  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,
  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
  nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,
  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
  ru: /^[0-9А-ЯЁ]*$/i,
  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
  sr: /^[0-9A-ZČĆŽŠĐ]*$/i,
  sv: /^[0-9A-ZÅÄÖ]*$/i,
  tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,
  uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,
  az: /^[0-9A-ZÇƏĞİıÖŞÜ]*$/i
};

var alphaDash = {
  en: /^[0-9A-Z_-]*$/i,
  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,
  da: /^[0-9A-ZÆØÅ_-]*$/i,
  de: /^[0-9A-ZÄÖÜß_-]*$/i,
  es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,
  fa: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی_-]*$/,
  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,
  it: /^[0-9A-Z\xC0-\xFF_-]*$/i,
  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,
  nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,
  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,
  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,
  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,
  ru: /^[0-9А-ЯЁ_-]*$/i,
  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,
  sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,
  sv: /^[0-9A-ZÅÄÖ_-]*$/i,
  tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,
  uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/,
  az: /^[0-9A-ZÇƏĞİıÖŞÜ_-]*$/i
};

var validate = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var locale = ref.locale;

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alpha).some(function (loc) { return alpha[loc].test(value); });
  }

  return (alpha[locale] || alpha.en).test(value);
};

var paramNames$1 = ['locale'];

var alpha$1 = {
  validate: validate,
  paramNames: paramNames$1
};

var validate$1 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var locale = ref.locale;

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$1(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });
  }

  return (alphaDash[locale] || alphaDash.en).test(value);
};

var paramNames$2 = ['locale'];

var alpha_dash = {
  validate: validate$1,
  paramNames: paramNames$2
};

var validate$2 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var locale = ref.locale;

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$2(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });
  }

  return (alphanumeric[locale] || alphanumeric.en).test(value);
};

var paramNames$3 = ['locale'];

var alpha_num = {
  validate: validate$2,
  paramNames: paramNames$3
};

var validate$3 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var locale = ref.locale;

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$3(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });
  }

  return (alphaSpaces[locale] || alphaSpaces.en).test(value);
};

var paramNames$4 = ['locale'];

var alpha_spaces = {
  validate: validate$3,
  paramNames: paramNames$4
};

var validate$4 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var targetValue = ref.targetValue;
  var inclusion = ref.inclusion; if ( inclusion === void 0 ) inclusion = false;
  var format = ref.format;

  if (typeof format === 'undefined') {
    format = inclusion;
    inclusion = false;
  }

  value = parseDate$1(value, format);
  targetValue = parseDate$1(targetValue, format);

  // if either is not valid.
  if (!value || !targetValue) {
    return false;
  }

  return isBefore(value, targetValue) || (inclusion && isEqual$1(value, targetValue));
};

var options$1 = {
  hasTarget: true,
  isDate: true
};

var paramNames$5 = ['targetValue', 'inclusion', 'format'];

var before = {
  validate: validate$4,
  options: options$1,
  paramNames: paramNames$5
};

var validate$5 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var min = ref.min;
  var max = ref.max;

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$5(val, { min: min, max: max }); });
  }

  return Number(min) <= value && Number(max) >= value;
};

var paramNames$6 = ['min', 'max'];

var between = {
  validate: validate$5,
  paramNames: paramNames$6
};

var validate$6 = function (value, ref) {
  var targetValue = ref.targetValue;

  return String(value) === String(targetValue);
};
var options$2 = {
  hasTarget: true
};

var paramNames$7 = ['targetValue'];

var confirmed = {
  validate: validate$6,
  options: options$2,
  paramNames: paramNames$7
};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var assertString_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function assertString(input) {
  var isString = typeof input === 'string' || input instanceof String;

  if (!isString) {
    var invalidType;

    if (input === null) {
      invalidType = 'null';
    } else {
      invalidType = _typeof(input);

      if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {
        invalidType = input.constructor.name;
      } else {
        invalidType = "a ".concat(invalidType);
      }
    }

    throw new TypeError("Expected string but received ".concat(invalidType, "."));
  }
}

module.exports = exports.default;
module.exports.default = exports.default;
});

unwrapExports(assertString_1);

var isCreditCard_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCreditCard;

var _assertString = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;
/* eslint-enable max-len */

function isCreditCard(str) {
  (0, _assertString.default)(str);
  var sanitized = str.replace(/[- ]+/g, '');

  if (!creditCard.test(sanitized)) {
    return false;
  }

  var sum = 0;
  var digit;
  var tmpNum;
  var shouldDouble;

  for (var i = sanitized.length - 1; i >= 0; i--) {
    digit = sanitized.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);

    if (shouldDouble) {
      tmpNum *= 2;

      if (tmpNum >= 10) {
        sum += tmpNum % 10 + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }

    shouldDouble = !shouldDouble;
  }

  return !!(sum % 10 === 0 ? sanitized : false);
}

module.exports = exports.default;
module.exports.default = exports.default;
});

var isCreditCard = unwrapExports(isCreditCard_1);

var validate$7 = function (value) { return isCreditCard(String(value)); };

var credit_card = {
  validate: validate$7
};

var validate$8 = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var min = ref.min;
  var max = ref.max;
  var inclusivity = ref.inclusivity; if ( inclusivity === void 0 ) inclusivity = '()';
  var format = ref.format;

  if (typeof format === 'undefined') {
    format = inclusivity;
    inclusivity = '()';
  }

  var minDate = parseDate$1(String(min), format);
  var maxDate = parseDate$1(String(max), format);
  var dateVal = parseDate$1(String(value), format);

  if (!minDate || !maxDate || !dateVal) {
    return false;
  }

  if (inclusivity === '()') {
    return isAfter(dateVal, minDate) && isBefore(dateVal, maxDate);
  }

  if (inclusivity === '(]') {
    return isAfter(dateVal, minDate) && (isEqual$1(dateVal, maxDate) || isBefore(dateVal, maxDate));
  }

  if (inclusivity === '[)') {
    return isBefore(dateVal, maxDate) && (isEqual$1(dateVal, minDate) || isAfter(dateVal, minDate));
  }

  return isEqual$1(dateVal, maxDate) || isEqual$1(dateVal, minDate) ||
    (isBefore(dateVal, maxDate) && isAfter(dateVal, minDate));
};

var options$3 = {
  isDate: true
};

var paramNames$8 = ['min', 'max', 'inclusivity', 'format'];

var date_between = {
  validate: validate$8,
  options: options$3,
  paramNames: paramNames$8
};

var validate$9 = function (value, ref) {
  var format = ref.format;

  return !!parseDate$1(value, format);
};

var options$4 = {
  isDate: true
};

var paramNames$9 = ['format'];

var date_format = {
  validate: validate$9,
  options: options$4,
  paramNames: paramNames$9
};

var validate$a = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var decimals = ref.decimals; if ( decimals === void 0 ) decimals = '*';
  var separator = ref.separator; if ( separator === void 0 ) separator = '.';

  if (isNullOrUndefined(value) || value === '') {
    return false;
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$a(val, { decimals: decimals, separator: separator }); });
  }

  // if is 0.
  if (Number(decimals) === 0) {
    return /^-?\d*$/.test(value);
  }

  var regexPart = decimals === '*' ? '+' : ("{1," + decimals + "}");
  var regex = new RegExp(("^[-+]?\\d*(\\" + separator + "\\d" + regexPart + ")?([eE]{1}[-]?\\d+)?$"));

  if (! regex.test(value)) {
    return false;
  }

  var parsedValue = parseFloat(value);

  // eslint-disable-next-line
  return parsedValue === parsedValue;
};

var paramNames$a = ['decimals', 'separator'];

var decimal = {
  validate: validate$a,
  paramNames: paramNames$a
};

var validate$b = function (value, ref) {
  var length = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$b(val, [length]); });
  }
  var strVal = String(value);

  return /^[0-9]*$/.test(strVal) && strVal.length === Number(length);
};

var digits = {
  validate: validate$b
};

var imageRegex = /\.(jpg|svg|jpeg|png|bmp|gif)$/i;

var validateImage = function (file, width, height) {
  var URL = window.URL || window.webkitURL;
  return new Promise(function (resolve) {
    var image = new Image();
    image.onerror = function () { return resolve({ valid: false }); };
    image.onload = function () { return resolve({
      valid: image.width === Number(width) && image.height === Number(height)
    }); };

    image.src = URL.createObjectURL(file);
  });
};

var validate$c = function (files, ref) {
  var width = ref[0];
  var height = ref[1];

  var images = ensureArray(files).filter(function (file) { return imageRegex.test(file.name); });
  if (images.length === 0) {
    return false;
  }
  return Promise.all(images.map(function (image) { return validateImage(image, width, height); }));
};

var dimensions = {
  validate: validate$c
};

var merge_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;

function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments.length > 1 ? arguments[1] : undefined;

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }

  return obj;
}

module.exports = exports.default;
module.exports.default = exports.default;
});

unwrapExports(merge_1);

var isByteLength_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isByteLength;

var _assertString = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* eslint-disable prefer-rest-params */
function isByteLength(str, options) {
  (0, _assertString.default)(str);
  var min;
  var max;

  if (_typeof(options) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isByteLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }

  var len = encodeURI(str).split(/%..|./).length - 1;
  return len >= min && (typeof max === 'undefined' || len <= max);
}

module.exports = exports.default;
module.exports.default = exports.default;
});

unwrapExports(isByteLength_1);

var isFQDN_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFQDN;

var _assertString = _interopRequireDefault(assertString_1);

var _merge = _interopRequireDefault(merge_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_fqdn_options = {
  require_tld: true,
  allow_underscores: false,
  allow_trailing_dot: false
};

function isFQDN(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_fqdn_options);
  /* Remove the optional trailing dot before checking validity */

  if (options.allow_trailing_dot && str[str.length - 1] === '.') {
    str = str.substring(0, str.length - 1);
  }

  var parts = str.split('.');

  for (var i = 0; i < parts.length; i++) {
    if (parts[i].length > 63) {
      return false;
    }
  }

  if (options.require_tld) {
    var tld = parts.pop();

    if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
      return false;
    } // disallow spaces


    if (/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(tld)) {
      return false;
    }
  }

  for (var part, _i = 0; _i < parts.length; _i++) {
    part = parts[_i];

    if (options.allow_underscores) {
      part = part.replace(/_/g, '');
    }

    if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
      return false;
    } // disallow full-width chars


    if (/[\uff01-\uff5e]/.test(part)) {
      return false;
    }

    if (part[0] === '-' || part[part.length - 1] === '-') {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
});

var isFQDN = unwrapExports(isFQDN_1);

var isIP_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIP;

var _assertString = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;

function isIP(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  (0, _assertString.default)(str);
  version = String(version);

  if (!version) {
    return isIP(str, 4) || isIP(str, 6);
  } else if (version === '4') {
    if (!ipv4Maybe.test(str)) {
      return false;
    }

    var parts = str.split('.').sort(function (a, b) {
      return a - b;
    });
    return parts[3] <= 255;
  } else if (version === '6') {
    var blocks = str.split(':');
    var foundOmissionBlock = false; // marker to indicate ::
    // At least some OS accept the last 32 bits of an IPv6 address
    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
    // and '::a.b.c.d' is deprecated, but also valid.

    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

    if (blocks.length > expectedNumberOfBlocks) {
      return false;
    } // initial or final ::


    if (str === '::') {
      return true;
    } else if (str.substr(0, 2) === '::') {
      blocks.shift();
      blocks.shift();
      foundOmissionBlock = true;
    } else if (str.substr(str.length - 2) === '::') {
      blocks.pop();
      blocks.pop();
      foundOmissionBlock = true;
    }

    for (var i = 0; i < blocks.length; ++i) {
      // test for a :: which can not be at the string start/end
      // since those cases have been handled above
      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
        if (foundOmissionBlock) {
          return false; // multiple :: in address
        }

        foundOmissionBlock = true;
      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) ; else if (!ipv6Block.test(blocks[i])) {
        return false;
      }
    }

    if (foundOmissionBlock) {
      return blocks.length >= 1;
    }

    return blocks.length === expectedNumberOfBlocks;
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
});

var isIP = unwrapExports(isIP_1);

var isEmail_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmail;

var _assertString = _interopRequireDefault(assertString_1);

var _merge = _interopRequireDefault(merge_1);

var _isByteLength = _interopRequireDefault(isByteLength_1);

var _isFQDN = _interopRequireDefault(isFQDN_1);

var _isIP = _interopRequireDefault(isIP_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_email_options = {
  allow_display_name: false,
  require_display_name: false,
  allow_utf8_local_part: true,
  require_tld: true
};
/* eslint-disable max-len */

/* eslint-disable no-control-regex */

var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var gmailUserPart = /^[a-z\d]+$/;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
/* eslint-enable max-len */

/* eslint-enable no-control-regex */

function isEmail(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_email_options);

  if (options.require_display_name || options.allow_display_name) {
    var display_email = str.match(displayName);

    if (display_email) {
      str = display_email[1];
    } else if (options.require_display_name) {
      return false;
    }
  }

  var parts = str.split('@');
  var domain = parts.pop();
  var user = parts.join('@');
  var lower_domain = domain.toLowerCase();

  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {
    /*
      Previously we removed dots for gmail addresses before validating.
      This was removed because it allows `multiple..dots@gmail.com`
      to be reported as valid, but it is not.
      Gmail only normalizes single dots, removing them from here is pointless,
      should be done in normalizeEmail
    */
    user = user.toLowerCase(); // Removing sub-address from username before gmail validation

    var username = user.split('+')[0]; // Dots are not included in gmail length restriction

    if (!(0, _isByteLength.default)(username.replace('.', ''), {
      min: 6,
      max: 30
    })) {
      return false;
    }

    var _user_parts = username.split('.');

    for (var i = 0; i < _user_parts.length; i++) {
      if (!gmailUserPart.test(_user_parts[i])) {
        return false;
      }
    }
  }

  if (!(0, _isByteLength.default)(user, {
    max: 64
  }) || !(0, _isByteLength.default)(domain, {
    max: 254
  })) {
    return false;
  }

  if (!(0, _isFQDN.default)(domain, {
    require_tld: options.require_tld
  })) {
    if (!options.allow_ip_domain) {
      return false;
    }

    if (!(0, _isIP.default)(domain)) {
      if (!domain.startsWith('[') || !domain.endsWith(']')) {
        return false;
      }

      var noBracketdomain = domain.substr(1, domain.length - 2);

      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {
        return false;
      }
    }
  }

  if (user[0] === '"') {
    user = user.slice(1, user.length - 1);
    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
  }

  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;
  var user_parts = user.split('.');

  for (var _i = 0; _i < user_parts.length; _i++) {
    if (!pattern.test(user_parts[_i])) {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
});

var isEmail = unwrapExports(isEmail_1);

function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }

var validate$d = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var multiple = ref.multiple; if ( multiple === void 0 ) multiple = false;
  var rest = objectWithoutProperties( ref, ["multiple"] );
  var options = rest;

  if (multiple && !Array.isArray(value)) {
    value = String(value).split(',').map(function (emailStr) { return emailStr.trim(); });
  }

  var validatorOptions = assign({}, options);

  if (Array.isArray(value)) {
    return value.every(function (val) { return isEmail(String(val), validatorOptions); });
  }

  return isEmail(String(value), validatorOptions);
};

var email = {
  validate: validate$d
};

var validate$e = function (value, options) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$e(val, options); });
  }

  return toArray(options).some(function (item) {
    // eslint-disable-next-line
    return item == value;
  });
};

var included = {
  validate: validate$e
};

var validate$f = function () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return !validate$e.apply(void 0, args);
};

var excluded = {
  validate: validate$f
};

var validate$g = function (files, extensions) {
  var regex = new RegExp((".(" + (extensions.join('|')) + ")$"), 'i');
  return ensureArray(files).every(function (file) { return regex.test(file.name); });
};

var ext = {
  validate: validate$g
};

var validate$h = function (files) { return (Array.isArray(files) ? files : [files]).every(function (file) { return /\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(file.name); }); };

var image = {
  validate: validate$h
};

var validate$i = function (value) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return /^-?[0-9]+$/.test(String(val)); });
  }

  return /^-?[0-9]+$/.test(String(value));
};

var integer = {
  validate: validate$i
};

var validate$j = function (value, ref) {
  if ( ref === void 0 ) ref = {};
  var version = ref.version; if ( version === void 0 ) version = 4;

  if (isNullOrUndefined(value)) {
    value = '';
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return isIP(val, version); });
  }

  return isIP(value, version);
};

var paramNames$b = ['version'];

var ip = {
  validate: validate$j,
  paramNames: paramNames$b
};

var validate$k = function (value) {
  if (isNullOrUndefined(value)) {
    value = '';
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return (isIP(val, '') || isFQDN(val)); });
  }

  return isIP(value, '') || isFQDN(value);
};

var ip_or_fqdn = {
  validate: validate$k
};

var validate$l = function (value, ref) {
  if ( ref === void 0 ) ref = [];
  var other = ref[0];

  return value === other;
};

var is = {
  validate: validate$l
};

var validate$m = function (value, ref) {
  if ( ref === void 0 ) ref = [];
  var other = ref[0];

  return value !== other;
};

var is_not = {
  validate: validate$m
};

/**
 * @param {Array|String} value
 * @param {Number} length
 * @param {Number} max
 */
var compare = function (value, length, max) {
  if (max === undefined) {
    return value.length === length;
  }

  // cast to number.
  max = Number(max);

  return value.length >= length && value.length <= max;
};

var validate$n = function (value, ref) {
  var length = ref[0];
  var max = ref[1]; if ( max === void 0 ) max = undefined;

  if (isNullOrUndefined(value)) {
    return false;
  }

  length = Number(length);
  if (typeof value === 'number') {
    value = String(value);
  }

  if (!value.length) {
    value = toArray(value);
  }

  return compare(value, length, max);
};

var length = {
  validate: validate$n
};

var validate$o = function (value, ref) {
  var length = ref[0];

  if (isNullOrUndefined(value)) {
    return length >= 0;
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$o(val, [length]); });
  }

  return String(value).length <= length;
};

var max = {
  validate: validate$o
};

var validate$p = function (value, ref) {
  var max = ref[0];

  if (isNullOrUndefined(value) || value === '') {
    return false;
  }

  if (Array.isArray(value)) {
    return value.length > 0 && value.every(function (val) { return validate$p(val, [max]); });
  }

  return Number(value) <= max;
};

var max_value = {
  validate: validate$p
};

var validate$q = function (files, mimes) {
  var regex = new RegExp(((mimes.join('|').replace('*', '.+')) + "$"), 'i');
  return ensureArray(files).every(function (file) { return regex.test(file.type); });
};

var mimes = {
  validate: validate$q
};

var validate$r = function (value, ref) {
  var length = ref[0];

  if (isNullOrUndefined(value)) {
    return false;
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$r(val, [length]); });
  }

  return String(value).length >= length;
};

var min = {
  validate: validate$r
};

var validate$s = function (value, ref) {
  var min = ref[0];

  if (isNullOrUndefined(value) || value === '') {
    return false;
  }

  if (Array.isArray(value)) {
    return value.length > 0 && value.every(function (val) { return validate$s(val, [min]); });
  }

  return Number(value) >= min;
};

var min_value = {
  validate: validate$s
};

var ar = /^[٠١٢٣٤٥٦٧٨٩]+$/;
var en = /^[0-9]+$/;

var validate$t = function (value) {
  var testValue = function (val) {
    var strValue = String(val);

    return en.test(strValue) || ar.test(strValue);
  };

  if (Array.isArray(value)) {
    return value.every(testValue);
  }

  return testValue(value);
};

var numeric = {
  validate: validate$t
};

var validate$u = function (value, ref) {
  var expression = ref.expression;

  if (typeof expression === 'string') {
    expression = new RegExp(expression);
  }

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$u(val, { expression: expression }); });
  }

  return expression.test(String(value));
};

var paramNames$c = ['expression'];

var regex = {
  validate: validate$u,
  paramNames: paramNames$c
};

var validate$v = function (value, ref) {
  if ( ref === void 0 ) ref = [];
  var invalidateFalse = ref[0]; if ( invalidateFalse === void 0 ) invalidateFalse = false;

  if (isNullOrUndefined(value) || isEmptyArray(value)) {
    return false;
  }

  // incase a field considers `false` as an empty value like checkboxes.
  if (value === false && invalidateFalse) {
    return false;
  }

  return !!String(value).trim().length;
};

var required = {
  validate: validate$v
};

var validate$w = function (value, ref) {
  if ( ref === void 0 ) ref = [];
  var otherFieldVal = ref[0];
  var possibleVals = ref.slice(1);

  var required = possibleVals.includes(String(otherFieldVal).trim());

  if (!required) {
    return {
      valid: true,
      data: {
        required: required
      }
    };
  }

  var invalid = (isEmptyArray(value) || [false, null, undefined].includes(value));

  invalid = invalid || !String(value).trim().length;

  return {
    valid: !invalid,
    data: {
      required: required
    }
  };
};

var options$5 = {
  hasTarget: true,
  computesRequired: true
};

var required_if = {
  validate: validate$w,
  options: options$5
};

var validate$x = function (files, ref) {
  var size = ref[0];

  if (isNaN(size)) {
    return false;
  }
  var nSize = Number(size) * 1024;
  return ensureArray(files).every(function (file) { return file.size <= nSize; });
};

var size = {
  validate: validate$x
};

var isURL_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isURL;

var _assertString = _interopRequireDefault(assertString_1);

var _isFQDN = _interopRequireDefault(isFQDN_1);

var _isIP = _interopRequireDefault(isIP_1);

var _merge = _interopRequireDefault(merge_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_url_options = {
  protocols: ['http', 'https', 'ftp'],
  require_tld: true,
  require_protocol: false,
  require_host: true,
  require_valid_protocol: true,
  allow_underscores: false,
  allow_trailing_dot: false,
  allow_protocol_relative_urls: false
};
var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;

function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
}

function checkHost(host, matches) {
  for (var i = 0; i < matches.length; i++) {
    var match = matches[i];

    if (host === match || isRegExp(match) && match.test(host)) {
      return true;
    }
  }

  return false;
}

function isURL(url, options) {
  (0, _assertString.default)(url);

  if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
    return false;
  }

  if (url.indexOf('mailto:') === 0) {
    return false;
  }

  options = (0, _merge.default)(options, default_url_options);
  var protocol, auth, host, hostname, port, port_str, split, ipv6;
  split = url.split('#');
  url = split.shift();
  split = url.split('?');
  url = split.shift();
  split = url.split('://');

  if (split.length > 1) {
    protocol = split.shift().toLowerCase();

    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
      return false;
    }
  } else if (options.require_protocol) {
    return false;
  } else if (url.substr(0, 2) === '//') {
    if (!options.allow_protocol_relative_urls) {
      return false;
    }

    split[0] = url.substr(2);
  }

  url = split.join('://');

  if (url === '') {
    return false;
  }

  split = url.split('/');
  url = split.shift();

  if (url === '' && !options.require_host) {
    return true;
  }

  split = url.split('@');

  if (split.length > 1) {
    if (options.disallow_auth) {
      return false;
    }

    auth = split.shift();

    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
      return false;
    }
  }

  hostname = split.join('@');
  port_str = null;
  ipv6 = null;
  var ipv6_match = hostname.match(wrapped_ipv6);

  if (ipv6_match) {
    host = '';
    ipv6 = ipv6_match[1];
    port_str = ipv6_match[2] || null;
  } else {
    split = hostname.split(':');
    host = split.shift();

    if (split.length) {
      port_str = split.join(':');
    }
  }

  if (port_str !== null) {
    port = parseInt(port_str, 10);

    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
      return false;
    }
  }

  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {
    return false;
  }

  host = host || ipv6;

  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {
    return false;
  }

  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
    return false;
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
});

var isURL = unwrapExports(isURL_1);

var validate$y = function (value, options) {
  if ( options === void 0 ) options = {};

  if (isNullOrUndefined(value)) {
    value = '';
  }

  var validatorOptions = assign({}, options);

  if (Array.isArray(value)) {
    return value.every(function (val) { return isURL(val, validatorOptions); });
  }

  return isURL(value, validatorOptions);
};

var url = {
  validate: validate$y
};

/* eslint-disable camelcase */

var Rules = /*#__PURE__*/Object.freeze({
  after: after,
  alpha_dash: alpha_dash,
  alpha_num: alpha_num,
  alpha_spaces: alpha_spaces,
  alpha: alpha$1,
  before: before,
  between: between,
  confirmed: confirmed,
  credit_card: credit_card,
  date_between: date_between,
  date_format: date_format,
  decimal: decimal,
  digits: digits,
  dimensions: dimensions,
  email: email,
  ext: ext,
  image: image,
  included: included,
  integer: integer,
  length: length,
  ip: ip,
  ip_or_fqdn: ip_or_fqdn,
  is_not: is_not,
  is: is,
  max: max,
  max_value: max_value,
  mimes: mimes,
  min: min,
  min_value: min_value,
  excluded: excluded,
  numeric: numeric,
  regex: regex,
  required: required,
  required_if: required_if,
  size: size,
  url: url
});

// 

var normalize = function (fields) {
  if (Array.isArray(fields)) {
    return fields.reduce(function (prev, curr) {
      if (includes(curr, '.')) {
        prev[curr.split('.')[1]] = curr;
      } else {
        prev[curr] = curr;
      }

      return prev;
    }, {});
  }

  return fields;
};

// Combines two flags using either AND or OR depending on the flag type.
var combine = function (lhs, rhs) {
  var mapper = {
    pristine: function (lhs, rhs) { return lhs && rhs; },
    dirty: function (lhs, rhs) { return lhs || rhs; },
    touched: function (lhs, rhs) { return lhs || rhs; },
    untouched: function (lhs, rhs) { return lhs && rhs; },
    valid: function (lhs, rhs) { return lhs && rhs; },
    invalid: function (lhs, rhs) { return lhs || rhs; },
    pending: function (lhs, rhs) { return lhs || rhs; },
    required: function (lhs, rhs) { return lhs || rhs; },
    validated: function (lhs, rhs) { return lhs && rhs; }
  };

  return Object.keys(mapper).reduce(function (flags, flag) {
    flags[flag] = mapper[flag](lhs[flag], rhs[flag]);

    return flags;
  }, {});
};

var mapScope = function (scope, deep) {
  if ( deep === void 0 ) deep = true;

  return Object.keys(scope).reduce(function (flags, field) {
    if (!flags) {
      flags = assign({}, scope[field]);
      return flags;
    }

    // scope.
    var isScope = field.indexOf('$') === 0;
    if (deep && isScope) {
      return combine(mapScope(scope[field]), flags);
    } else if (!deep && isScope) {
      return flags;
    }

    flags = combine(flags, scope[field]);

    return flags;
  }, null);
};

/**
 * Maps fields to computed functions.
 */
var mapFields = function (fields) {
  if (!fields) {
    return function () {
      return mapScope(this.$validator.flags);
    };
  }

  var normalized = normalize(fields);
  return Object.keys(normalized).reduce(function (prev, curr) {
    var field = normalized[curr];
    prev[curr] = function mappedField () {
      // if field exists
      if (this.$validator.flags[field]) {
        return this.$validator.flags[field];
      }

      // scopeless fields were selected.
      if (normalized[curr] === '*') {
        return mapScope(this.$validator.flags, false);
      }

      // if it has a scope defined
      var index = field.indexOf('.');
      if (index <= 0) {
        return {};
      }

      var ref = field.split('.');
      var scope = ref[0];
      var name = ref.slice(1);

      scope = this.$validator.flags[("$" + scope)];
      name = name.join('.');

      // an entire scope was selected: scope.*
      if (name === '*' && scope) {
        return mapScope(scope);
      }

      if (scope && scope[name]) {
        return scope[name];
      }

      return {};
    };

    return prev;
  }, {});
};

var $validator = null;

var PROVIDER_COUNTER = 0;

var ValidationProvider = {
  $__veeInject: false,
  inject: {
    $_veeObserver: {
      from: '$_veeObserver',
      default: function default$1 () {
        if (!this.$vnode.context.$_veeObserver) {
          this.$vnode.context.$_veeObserver = createObserver();
        }

        return this.$vnode.context.$_veeObserver;
      }
    }
  },
  props: {
    vid: {
      type: [String, Number],
      default: function () {
        PROVIDER_COUNTER++;

        return ("_vee_" + PROVIDER_COUNTER);
      }
    },
    name: {
      type: String,
      default: null
    },
    mode: {
      type: [String, Function],
      default: function () {
        return getConfig().mode;
      }
    },
    events: {
      type: Array,
      validate: function () {
        /* istanbul ignore next */
        if (true) {
          warn('events prop and config will be deprecated in future version please use the interaction modes instead');
        }

        return true;
      },
      default: function () {
        var events = getConfig().events;
        if (typeof events === 'string') {
          return events.split('|');
        }

        return events;
      }
    },
    rules: {
      type: [Object, String],
      default: null
    },
    immediate: {
      type: Boolean,
      default: false
    },
    persist: {
      type: Boolean,
      default: false
    },
    bails: {
      type: Boolean,
      default: function () { return getConfig().fastExit; }
    },
    debounce: {
      type: Number,
      default: function () { return getConfig().delay || 0; }
    },
    tag: {
      type: String,
      default: 'span'
    },
    slim: {
      type: Boolean,
      default: false
    }
  },
  watch: {
    rules: {
      deep: true,
      handler: function handler (val, oldVal) {
        this._needsValidation = !isEqual(val, oldVal);
      }
    }
  },
  data: function () { return ({
    messages: [],
    value: undefined,
    initialized: false,
    initialValue: undefined,
    flags: createFlags(),
    failedRules: {},
    forceRequired: false,
    isDeactivated: false,
    id: null
  }); },
  computed: {
    isValid: function isValid () {
      return this.flags.valid;
    },
    fieldDeps: function fieldDeps () {
      var this$1 = this;

      var rules = normalizeRules(this.rules);

      return Object.keys(rules).filter(RuleContainer.isTargetRule).map(function (rule) {
        var depName = rules[rule][0];
        watchCrossFieldDep(this$1, depName);

        return depName;
      });
    },
    normalizedEvents: function normalizedEvents () {
      var this$1 = this;

      var ref = computeModeSetting(this);
      var on = ref.on;

      return normalizeEvents(on || this.events || []).map(function (e) {
        if (e === 'input') {
          return this$1._inputEventName;
        }

        return e;
      });
    },
    isRequired: function isRequired () {
      var rules = normalizeRules(this.rules);
      var forceRequired = this.forceRequired;

      var isRequired = rules.required || forceRequired;
      this.flags.required = isRequired;

      return isRequired;
    },
    classes: function classes () {
      var this$1 = this;

      var names = getConfig().classNames;
      return Object.keys(this.flags).reduce(function (classes, flag) {
        var className = (names && names[flag]) || flag;
        if (isNullOrUndefined(this$1.flags[flag])) {
          return classes;
        }

        if (className) {
          classes[className] = this$1.flags[flag];
        }

        return classes;
      }, {});
    }
  },
  render: function render (h) {
    var this$1 = this;

    this.registerField();
    var ctx = createValidationCtx(this);

    // Gracefully handle non-existent scoped slots.
    var slot = this.$scopedSlots.default;
    /* istanbul ignore next */
    if (!isCallable(slot)) {
      if (true) {
        warn('ValidationProvider expects a scoped slot. Did you forget to add "v-slot" to your slot?');
      }

      return h(this.tag, this.$slots.default);
    }

    var nodes = slot(ctx);
    // Handle single-root slot.
    extractVNodes(nodes).forEach(function (input) {
      addListeners.call(this$1, input);
    });

    return this.slim ? createRenderless(h, nodes) : h(this.tag, nodes);
  },
  beforeDestroy: function beforeDestroy () {
    // cleanup reference.
    this.$_veeObserver.unsubscribe(this);
  },
  activated: function activated () {
    this.$_veeObserver.subscribe(this);
    this.isDeactivated = false;
  },
  deactivated: function deactivated () {
    this.$_veeObserver.unsubscribe(this);
    this.isDeactivated = true;
  },
  methods: {
    setFlags: function setFlags (flags) {
      var this$1 = this;

      Object.keys(flags).forEach(function (flag) {
        this$1.flags[flag] = flags[flag];
      });
    },
    syncValue: function syncValue (e) {
      var value = normalizeValue$1(e);
      this.value = value;
      this.flags.changed = this.initialValue !== value;
    },
    reset: function reset () {
      this.messages = [];
      this._pendingValidation = null;
      this.initialValue = this.value;
      var flags = createFlags();
      this.setFlags(flags);
    },
    validate: function validate () {
      var this$1 = this;
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (args.length > 0) {
        this.syncValue(args[0]);
      }

      return this.validateSilent().then(function (result) {
        this$1.applyResult(result);

        return result;
      });
    },
    validateSilent: function validateSilent () {
      var this$1 = this;

      this.setFlags({ pending: true });

      return $validator.verify(this.value, this.rules, {
        name: this.name,
        values: createValuesLookup(this),
        bails: this.bails
      }).then(function (result) {
        this$1.setFlags({ pending: false });
        if (!this$1.isRequired) {
          this$1.setFlags({ valid: result.valid, invalid: !result.valid });
        }

        return result;
      });
    },
    applyResult: function applyResult (ref) {
      var errors = ref.errors;
      var failedRules = ref.failedRules;

      this.messages = errors;
      this.failedRules = assign({}, failedRules);
      this.setFlags({
        valid: !errors.length,
        changed: this.value !== this.initialValue,
        invalid: !!errors.length,
        validated: true
      });
    },
    registerField: function registerField () {
      if (!$validator) {
        $validator = getValidator() || new Validator(null, { fastExit: getConfig().fastExit });
      }

      updateRenderingContextRefs(this);
    }
  }
};

function createValidationCtx (ctx) {
  return {
    errors: ctx.messages,
    flags: ctx.flags,
    classes: ctx.classes,
    valid: ctx.isValid,
    failedRules: ctx.failedRules,
    reset: function () { return ctx.reset(); },
    validate: function () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      return ctx.validate.apply(ctx, args);
  },
    aria: {
      'aria-invalid': ctx.flags.invalid ? 'true' : 'false',
      'aria-required': ctx.isRequired ? 'true' : 'false'
    }
  };
}

function normalizeValue$1 (value) {
  if (isEvent(value)) {
    return value.target.type === 'file' ? toArray(value.target.files) : value.target.value;
  }

  return value;
}

/**
 * Determines if a provider needs to run validation.
 */
function shouldValidate (ctx, model) {
  // when an immediate/initial validation is needed and wasn't done before.
  if (!ctx._ignoreImmediate && ctx.immediate) {
    return true;
  }

  // when the value changes for whatever reason.
  if (ctx.value !== model.value) {
    return true;
  }

  // when it needs validation due to props/cross-fields changes.
  if (ctx._needsValidation) {
    return true;
  }

  // when the initial value is undefined and the field wasn't rendered yet.
  if (!ctx.initialized && model.value === undefined) {
    return true;
  }

  return false;
}

function computeModeSetting (ctx) {
  var compute = isCallable(ctx.mode) ? ctx.mode : modes[ctx.mode];

  return compute({
    errors: ctx.messages,
    value: ctx.value,
    flags: ctx.flags
  });
}

function onRenderUpdate (model) {
  if (!this.initialized) {
    this.initialValue = model.value;
  }

  var validateNow = shouldValidate(this, model);
  this._needsValidation = false;
  this.value = model.value;
  this._ignoreImmediate = true;

  if (!validateNow) {
    return;
  }

  this.validateSilent().then(this.immediate || this.flags.validated ? this.applyResult : function (x) { return x; });
}

// Creates the common handlers for a validatable context.
function createCommonHandlers (ctx) {
  var onInput = function (e) {
    ctx.syncValue(e); // track and keep the value updated.
    ctx.setFlags({ dirty: true, pristine: false });
  };

  // Blur event listener.
  var onBlur = function () {
    ctx.setFlags({ touched: true, untouched: false });
  };

  var onValidate = ctx.$veeHandler;
  var mode = computeModeSetting(ctx);

  // Handle debounce changes.
  if (!onValidate || ctx.$veeDebounce !== ctx.debounce) {
    onValidate = debounce(
      function () {
        ctx.$nextTick(function () {
          var pendingPromise = ctx.validateSilent();
          // avoids race conditions between successive validations.
          ctx._pendingValidation = pendingPromise;
          pendingPromise.then(function (result) {
            if (pendingPromise === ctx._pendingValidation) {
              ctx.applyResult(result);
              ctx._pendingValidation = null;
            }
          });
        });
      },
      mode.debounce || ctx.debounce
    );

    // Cache the handler so we don't create it each time.
    ctx.$veeHandler = onValidate;
    // cache the debounce value so we detect if it was changed.
    ctx.$veeDebounce = ctx.debounce;
  }

  return { onInput: onInput, onBlur: onBlur, onValidate: onValidate };
}

// Adds all plugin listeners to the vnode.
function addListeners (node) {
  var model = findModel(node);
  // cache the input eventName.
  this._inputEventName = this._inputEventName || getInputEventName(node, model);

  onRenderUpdate.call(this, model);

  var ref = createCommonHandlers(this);
  var onInput = ref.onInput;
  var onBlur = ref.onBlur;
  var onValidate = ref.onValidate;
  addVNodeListener(node, this._inputEventName, onInput);
  addVNodeListener(node, 'blur', onBlur);

  // add the validation listeners.
  this.normalizedEvents.forEach(function (evt) {
    addVNodeListener(node, evt, onValidate);
  });

  this.initialized = true;
}

function createValuesLookup (ctx) {
  var providers = ctx.$_veeObserver.refs;

  return ctx.fieldDeps.reduce(function (acc, depName) {
    if (!providers[depName]) {
      return acc;
    }

    acc[depName] = providers[depName].value;

    return acc;
  }, {});
}

function updateRenderingContextRefs (ctx) {
  // IDs should not be nullable.
  if (isNullOrUndefined(ctx.id) && ctx.id === ctx.vid) {
    ctx.id = PROVIDER_COUNTER;
    PROVIDER_COUNTER++;
  }

  var id = ctx.id;
  var vid = ctx.vid;
  // Nothing has changed.
  if (ctx.isDeactivated || (id === vid && ctx.$_veeObserver.refs[id])) {
    return;
  }

  // vid was changed.
  if (id !== vid && ctx.$_veeObserver.refs[id] === ctx) {
    ctx.$_veeObserver.unsubscribe({ vid: id });
  }

  ctx.$_veeObserver.subscribe(ctx);
  ctx.id = vid;
}

function createObserver () {
  return {
    refs: {},
    subscribe: function subscribe (ctx) {
      this.refs[ctx.vid] = ctx;
    },
    unsubscribe: function unsubscribe (ctx) {
      delete this.refs[ctx.vid];
    }
  };
}

function watchCrossFieldDep (ctx, depName, withHooks) {
  if ( withHooks === void 0 ) withHooks = true;

  var providers = ctx.$_veeObserver.refs;
  if (!ctx._veeWatchers) {
    ctx._veeWatchers = {};
  }

  if (!providers[depName] && withHooks) {
    return ctx.$once('hook:mounted', function () {
      watchCrossFieldDep(ctx, depName, false);
    });
  }

  if (!isCallable(ctx._veeWatchers[depName]) && providers[depName]) {
    ctx._veeWatchers[depName] = providers[depName].$watch('value', function () {
      if (ctx.flags.validated) {
        ctx._needsValidation = true;
        ctx.validate();
      }
    });
  }
}

var flagMergingStrategy = {
  pristine: 'every',
  dirty: 'some',
  touched: 'some',
  untouched: 'every',
  valid: 'every',
  invalid: 'some',
  pending: 'some',
  validated: 'every'
};

function mergeFlags (lhs, rhs, strategy) {
  var stratName = flagMergingStrategy[strategy];

  return [lhs, rhs][stratName](function (f) { return f; });
}

var OBSERVER_COUNTER = 0;

var ValidationObserver = {
  name: 'ValidationObserver',
  provide: function provide () {
    return {
      $_veeObserver: this
    };
  },
  inject: {
    $_veeObserver: {
      from: '$_veeObserver',
      default: function default$1 () {
        if (!this.$vnode.context.$_veeObserver) {
          return null;
        }

        return this.$vnode.context.$_veeObserver;
      }
    }
  },
  props: {
    tag: {
      type: String,
      default: 'span'
    },
    slim: {
      type: Boolean,
      default: false
    }
  },
  data: function () { return ({
    vid: ("obs_" + (OBSERVER_COUNTER++)),
    refs: {},
    observers: [],
    persistedStore: {}
  }); },
  computed: {
    ctx: function ctx () {
      var this$1 = this;

      var ctx = {
        errors: {},
        validate: function (arg) {
          var promise = this$1.validate(arg);

          return {
            then: function then (thenable) {
              return promise.then(function (success) {
                if (success && isCallable(thenable)) {
                  return Promise.resolve(thenable());
                }

                return Promise.resolve(success);
              });
            }
          };
        },
        reset: function () { return this$1.reset(); }
      };

      return values(this.refs).concat( Object.keys(this.persistedStore).map(function (key) {
          return {
            vid: key,
            flags: this$1.persistedStore[key].flags,
            messages: this$1.persistedStore[key].errors
          };
        }),
        this.observers ).reduce(function (acc, provider) {
        Object.keys(flagMergingStrategy).forEach(function (flag) {
          var flags = provider.flags || provider.ctx;
          if (!(flag in acc)) {
            acc[flag] = flags[flag];
            return;
          }

          acc[flag] = mergeFlags(acc[flag], flags[flag], flag);
        });

        acc.errors[provider.vid] = provider.messages || values(provider.ctx.errors).reduce(function (errs, obsErrors) {
          return errs.concat(obsErrors);
        }, []);

        return acc;
      }, ctx);
    }
  },
  created: function created () {
    if (this.$_veeObserver) {
      this.$_veeObserver.subscribe(this, 'observer');
    }
  },
  activated: function activated () {
    if (this.$_veeObserver) {
      this.$_veeObserver.subscribe(this, 'observer');
    }
  },
  deactivated: function deactivated () {
    if (this.$_veeObserver) {
      this.$_veeObserver.unsubscribe(this, 'observer');
    }
  },
  beforeDestroy: function beforeDestroy () {
    if (this.$_veeObserver) {
      this.$_veeObserver.unsubscribe(this, 'observer');
    }
  },
  render: function render (h) {
    var slots = this.$slots.default || this.$scopedSlots.default || [];
    if (isCallable(slots)) {
      slots = slots(this.ctx);
    }

    return this.slim ? createRenderless(h, slots) : h(this.tag, { on: this.$listeners, attrs: this.$attrs }, slots);
  },
  methods: {
    subscribe: function subscribe (subscriber, kind) {
      var obj;

      if ( kind === void 0 ) kind = 'provider';
      if (kind === 'observer') {
        this.observers.push(subscriber);
        return;
      }

      this.refs = Object.assign({}, this.refs, ( obj = {}, obj[subscriber.vid] = subscriber, obj ));
      if (subscriber.persist && this.persistedStore[subscriber.vid]) {
        this.restoreProviderState(subscriber);
      }
    },
    unsubscribe: function unsubscribe (ref, kind) {
      var vid = ref.vid;
      if ( kind === void 0 ) kind = 'provider';

      if (kind === 'provider') {
        this.removeProvider(vid);
      }

      var idx = findIndex(this.observers, function (o) { return o.vid === vid; });
      if (idx !== -1) {
        this.observers.splice(idx, 1);
      }
    },
    validate: function validate (ref) {
      if ( ref === void 0 ) ref = { silent: false };
      var silent = ref.silent;

      return Promise.all(values(this.refs).map(function (ref) { return ref[silent ? 'validateSilent' : 'validate']().then(function (r) { return r.valid; }); }).concat( this.observers.map(function (obs) { return obs.validate({ silent: silent }); })
      )).then(function (results) { return results.every(function (r) { return r; }); });
    },
    reset: function reset () {
      var this$1 = this;

      Object.keys(this.persistedStore).forEach(function (key) {
        this$1.$delete(this$1.persistedStore, key);
      });
      return values(this.refs).concat( this.observers).forEach(function (ref) { return ref.reset(); });
    },
    restoreProviderState: function restoreProviderState (provider) {
      var state = this.persistedStore[provider.vid];
      provider.setFlags(state.flags);
      provider.applyResult(state);
      this.$delete(this.persistedStore, provider.vid);
    },
    removeProvider: function removeProvider (vid) {
      var obj;

      var provider = this.refs[vid];
      // save it for the next time.
      if (provider && provider.persist) {
        /* istanbul ignore else */
        if (true) {
          if (vid.indexOf('_vee_') === 0) {
            warn('Please provide a `vid` prop when using `persist`, there might be unexpected issues otherwise.');
          }
        }

        this.persistedStore = assign({}, this.persistedStore, ( obj = {}, obj[vid] = {
            flags: provider.flags,
            errors: provider.messages,
            failedRules: provider.failedRules
          }, obj ));
      }

      this.$delete(this.refs, vid);
    },
  }
};

function withValidation (component, ctxToProps) {
  if ( ctxToProps === void 0 ) ctxToProps = null;

  var options = isCallable(component) ? component.options : component;
  options.$__veeInject = false;
  var hoc = {
    name: ((options.name || 'AnonymousHoc') + "WithValidation"),
    props: assign({}, ValidationProvider.props),
    data: ValidationProvider.data,
    computed: assign({}, ValidationProvider.computed),
    methods: assign({}, ValidationProvider.methods),
    $__veeInject: false,
    beforeDestroy: ValidationProvider.beforeDestroy,
    inject: ValidationProvider.inject
  };

  // Default ctx converts ctx props to component props.
  if (!ctxToProps) {
    ctxToProps = function (ctx) { return ctx; };
  }

  var eventName = (options.model && options.model.event) || 'input';

  hoc.render = function (h) {
    var obj;

    this.registerField();
    var vctx = createValidationCtx(this);
    var listeners = assign({}, this.$listeners);

    var model = findModel(this.$vnode);
    this._inputEventName = this._inputEventName || getInputEventName(this.$vnode, model);
    onRenderUpdate.call(this, model);

    var ref = createCommonHandlers(this);
    var onInput = ref.onInput;
    var onBlur = ref.onBlur;
    var onValidate = ref.onValidate;

    mergeVNodeListeners(listeners, eventName, onInput);
    mergeVNodeListeners(listeners, 'blur', onBlur);
    this.normalizedEvents.forEach(function (evt, idx) {
      mergeVNodeListeners(listeners, evt, onValidate);
    });

    // Props are any attrs not associated with ValidationProvider Plus the model prop.
    // WARNING: Accidental prop overwrite will probably happen.
    var ref$1 = findModelConfig(this.$vnode) || { prop: 'value' };
    var prop = ref$1.prop;
    var props = assign({}, this.$attrs, ( obj = {}, obj[prop] = model.value, obj ), ctxToProps(vctx));

    return h(options, {
      attrs: this.$attrs,
      props: props,
      on: listeners
    }, normalizeSlots(this.$slots, this.$vnode.context));
  };

  return hoc;
}

var version = '2.2.15';

Object.keys(Rules).forEach(function (rule) {
  Validator.extend(rule, Rules[rule].validate, assign({}, Rules[rule].options, { paramNames: Rules[rule].paramNames }));
});

// Merge the english messages.
Validator.localize({ en: locale });

var install = VeeValidate$1.install;

VeeValidate$1.version = version;
VeeValidate$1.mapFields = mapFields;
VeeValidate$1.ValidationProvider = ValidationProvider;
VeeValidate$1.ValidationObserver = ValidationObserver;
VeeValidate$1.withValidation = withValidation;

/* harmony default export */ __webpack_exports__["a"] = (VeeValidate$1);



/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.swal=e():t.swal=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=8)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="swal-button";e.CLASS_NAMES={MODAL:"swal-modal",OVERLAY:"swal-overlay",SHOW_MODAL:"swal-overlay--show-modal",MODAL_TITLE:"swal-title",MODAL_TEXT:"swal-text",ICON:"swal-icon",ICON_CUSTOM:"swal-icon--custom",CONTENT:"swal-content",FOOTER:"swal-footer",BUTTON_CONTAINER:"swal-button-container",BUTTON:o,CONFIRM_BUTTON:o+"--confirm",CANCEL_BUTTON:o+"--cancel",DANGER_BUTTON:o+"--danger",BUTTON_LOADING:o+"--loading",BUTTON_LOADER:o+"__loader"},e.default=e.CLASS_NAMES},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getNode=function(t){var e="."+t;return document.querySelector(e)},e.stringToNode=function(t){var e=document.createElement("div");return e.innerHTML=t.trim(),e.firstChild},e.insertAfter=function(t,e){var n=e.nextSibling;e.parentNode.insertBefore(t,n)},e.removeNode=function(t){t.parentElement.removeChild(t)},e.throwErr=function(t){throw t=t.replace(/ +(?= )/g,""),"SweetAlert: "+(t=t.trim())},e.isPlainObject=function(t){if("[object Object]"!==Object.prototype.toString.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.ordinalSuffixOf=function(t){var e=t%10,n=t%100;return 1===e&&11!==n?t+"st":2===e&&12!==n?t+"nd":3===e&&13!==n?t+"rd":t+"th"}},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(25));var r=n(26);e.overlayMarkup=r.default,o(n(27)),o(n(28)),o(n(29));var i=n(0),a=i.default.MODAL_TITLE,s=i.default.MODAL_TEXT,c=i.default.ICON,l=i.default.FOOTER;e.iconMarkup='\n  <div class="'+c+'"></div>',e.titleMarkup='\n  <div class="'+a+'"></div>\n',e.textMarkup='\n  <div class="'+s+'"></div>',e.footerMarkup='\n  <div class="'+l+'"></div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1);e.CONFIRM_KEY="confirm",e.CANCEL_KEY="cancel";var r={visible:!0,text:null,value:null,className:"",closeModal:!0},i=Object.assign({},r,{visible:!1,text:"Cancel",value:null}),a=Object.assign({},r,{text:"OK",value:!0});e.defaultButtonList={cancel:i,confirm:a};var s=function(t){switch(t){case e.CONFIRM_KEY:return a;case e.CANCEL_KEY:return i;default:var n=t.charAt(0).toUpperCase()+t.slice(1);return Object.assign({},r,{text:n,value:t})}},c=function(t,e){var n=s(t);return!0===e?Object.assign({},n,{visible:!0}):"string"==typeof e?Object.assign({},n,{visible:!0,text:e}):o.isPlainObject(e)?Object.assign({visible:!0},n,e):Object.assign({},n,{visible:!1})},l=function(t){for(var e={},n=0,o=Object.keys(t);n<o.length;n++){var r=o[n],a=t[r],s=c(r,a);e[r]=s}return e.cancel||(e.cancel=i),e},u=function(t){var n={};switch(t.length){case 1:n[e.CANCEL_KEY]=Object.assign({},i,{visible:!1});break;case 2:n[e.CANCEL_KEY]=c(e.CANCEL_KEY,t[0]),n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t[1]);break;default:o.throwErr("Invalid number of 'buttons' in array ("+t.length+").\n      If you want more than 2 buttons, you need to use an object!")}return n};e.getButtonListOpts=function(t){var n=e.defaultButtonList;return"string"==typeof t?n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t):Array.isArray(t)?n=u(t):o.isPlainObject(t)?n=l(t):!0===t?n=u([!0,!0]):!1===t?n=u([!1,!1]):void 0===t&&(n=e.defaultButtonList),n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=n(0),a=i.default.MODAL,s=i.default.OVERLAY,c=n(30),l=n(31),u=n(32),f=n(33);e.injectElIntoModal=function(t){var e=o.getNode(a),n=o.stringToNode(t);return e.appendChild(n),n};var d=function(t){t.className=a,t.textContent=""},p=function(t,e){d(t);var n=e.className;n&&t.classList.add(n)};e.initModalContent=function(t){var e=o.getNode(a);p(e,t),c.default(t.icon),l.initTitle(t.title),l.initText(t.text),f.default(t.content),u.default(t.buttons,t.dangerMode)};var m=function(){var t=o.getNode(s),e=o.stringToNode(r.modalMarkup);t.appendChild(e)};e.default=m},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r={isOpen:!1,promise:null,actions:{},timer:null},i=Object.assign({},r);e.resetState=function(){i=Object.assign({},r)},e.setActionValue=function(t){if("string"==typeof t)return a(o.CONFIRM_KEY,t);for(var e in t)a(e,t[e])};var a=function(t,e){i.actions[t]||(i.actions[t]={}),Object.assign(i.actions[t],{value:e})};e.setActionOptionsFor=function(t,e){var n=(void 0===e?{}:e).closeModal,o=void 0===n||n;Object.assign(i.actions[t],{closeModal:o})},e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(0),a=i.default.OVERLAY,s=i.default.SHOW_MODAL,c=i.default.BUTTON,l=i.default.BUTTON_LOADING,u=n(5);e.openModal=function(){o.getNode(a).classList.add(s),u.default.isOpen=!0};var f=function(){o.getNode(a).classList.remove(s),u.default.isOpen=!1};e.onAction=function(t){void 0===t&&(t=r.CANCEL_KEY);var e=u.default.actions[t],n=e.value;if(!1===e.closeModal){var i=c+"--"+t;o.getNode(i).classList.add(l)}else f();u.default.promise.resolve(n)},e.getState=function(){var t=Object.assign({},u.default);return delete t.promise,delete t.timer,t},e.stopLoading=function(){for(var t=document.querySelectorAll("."+c),e=0;e<t.length;e++){t[e].classList.remove(l)}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(e){t.exports=e.sweetAlert=n(9)}).call(e,n(7))},function(t,e,n){(function(e){t.exports=e.swal=n(10)}).call(e,n(7))},function(t,e,n){"undefined"!=typeof window&&n(11),n(16);var o=n(23).default;t.exports=o},function(t,e,n){var o=n(12);"string"==typeof o&&(o=[[t.i,o,""]]);var r={insertAt:"top"};r.transform=void 0;n(14)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){e=t.exports=n(13)(void 0),e.push([t.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',""])},function(t,e){function n(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"})).concat([i]).join("\n")}return[n].join("\n")}function o(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var o=n(e,t);return e[2]?"@media "+e[2]+"{"+o+"}":o}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function o(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=m[o.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](o.parts[i]);for(;i<o.parts.length;i++)r.parts.push(u(o.parts[i],e))}else{for(var a=[],i=0;i<o.parts.length;i++)a.push(u(o.parts[i],e));m[o.id]={id:o.id,refs:1,parts:a}}}}function r(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s=i[1],c=i[2],l=i[3],u={css:s,media:c,sourceMap:l};o[a]?o[a].parts.push(u):n.push(o[a]={id:a,parts:[u]})}return n}function i(t,e){var n=v(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=w[w.length-1];if("top"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),w.push(e);else{if("bottom"!==t.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=w.indexOf(t);e>=0&&w.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function u(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=h++;n=g||(g=s(e)),o=f.bind(null,n,l,!1),r=f.bind(null,n,l,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),o=p.bind(null,n,e),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),o=d.bind(null,n),r=function(){a(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}function f(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,o=e.media;if(o&&t.setAttribute("media",o),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function p(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=y(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},b=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),v=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}(function(t){return document.querySelector(t)}),g=null,h=0,w=[],y=n(15);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");e=e||{},e.attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=b()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=r(t,e);return o(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a],c=m[s.id];c.refs--,i.push(c)}if(t){o(r(t,e),e)}for(var a=0;a<i.length;a++){var c=i[a];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete m[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,o=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return t;var i;return i=0===r.indexOf("//")?r:0===r.indexOf("/")?n+r:o+r.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}},function(t,e,n){var o=n(17);"undefined"==typeof window||window.Promise||(window.Promise=o),n(21),String.prototype.includes||(String.prototype.includes=function(t,e){"use strict";return"number"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(t,e){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;for(var r=0|e,i=Math.max(r>=0?r:o-Math.abs(r),0);i<o;){if(function(t,e){return t===e||"number"==typeof t&&"number"==typeof e&&isNaN(t)&&isNaN(e)}(n[i],t))return!0;i++}return!1}}),"undefined"!=typeof window&&function(t){t.forEach(function(t){t.hasOwnProperty("remove")||Object.defineProperty(t,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(t,e,n){(function(e){!function(n){function o(){}function r(t,e){return function(){t.apply(e,arguments)}}function i(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],f(t,this)}function a(t,e){for(;3===t._state;)t=t._value;if(0===t._state)return void t._deferreds.push(e);t._handled=!0,i._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?s:c)(e.promise,t._value);var o;try{o=n(t._value)}catch(t){return void c(e.promise,t)}s(e.promise,o)})}function s(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var n=e.then;if(e instanceof i)return t._state=3,t._value=e,void l(t);if("function"==typeof n)return void f(r(n,e),t)}t._state=1,t._value=e,l(t)}catch(e){c(t,e)}}function c(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&i._immediateFn(function(){t._handled||i._unhandledRejectionFn(t._value)});for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function u(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function f(t,e){var n=!1;try{t(function(t){n||(n=!0,s(e,t))},function(t){n||(n=!0,c(e,t))})}catch(t){if(n)return;n=!0,c(e,t)}}var d=setTimeout;i.prototype.catch=function(t){return this.then(null,t)},i.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new u(t,e,n)),n},i.all=function(t){var e=Array.prototype.slice.call(t);return new i(function(t,n){function o(i,a){try{if(a&&("object"==typeof a||"function"==typeof a)){var s=a.then;if("function"==typeof s)return void s.call(a,function(t){o(i,t)},n)}e[i]=a,0==--r&&t(e)}catch(t){n(t)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},i.resolve=function(t){return t&&"object"==typeof t&&t.constructor===i?t:new i(function(e){e(t)})},i.reject=function(t){return new i(function(e,n){n(t)})},i.race=function(t){return new i(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},i._immediateFn="function"==typeof e&&function(t){e(t)}||function(t){d(t,0)},i._unhandledRejectionFn=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)},i._setImmediateFn=function(t){i._immediateFn=t},i._setUnhandledRejectionFn=function(t){i._unhandledRejectionFn=t},void 0!==t&&t.exports?t.exports=i:n.Promise||(n.Promise=i)}(this)}).call(e,n(18).setImmediate)},function(t,e,n){function o(t,e){this._id=t,this._clearFn=e}var r=Function.prototype.apply;e.setTimeout=function(){return new o(r.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(19),e.setImmediate=setImmediate,e.clearImmediate=clearImmediate},function(t,e,n){(function(t,e){!function(t,n){"use strict";function o(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return l[c]=o,s(c),c++}function r(t){delete l[t]}function i(t){var e=t.callback,o=t.args;switch(o.length){case 0:e();break;case 1:e(o[0]);break;case 2:e(o[0],o[1]);break;case 3:e(o[0],o[1],o[2]);break;default:e.apply(n,o)}}function a(t){if(u)setTimeout(a,0,t);else{var e=l[t];if(e){u=!0;try{i(e)}finally{r(t),u=!1}}}}if(!t.setImmediate){var s,c=1,l={},u=!1,f=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,"[object process]"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),s=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&"onreadystatechange"in f.createElement("script")?function(){var t=f.documentElement;s=function(e){var n=f.createElement("script");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),d.setImmediate=o,d.clearImmediate=r}}("undefined"==typeof self?void 0===t?this:t:self)}).call(e,n(7),n(20))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function r(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(f===clearTimeout)return clearTimeout(t);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){b&&p&&(b=!1,p.length?m=p.concat(m):v=-1,m.length&&s())}function s(){if(!b){var t=r(a);b=!0;for(var e=m.length;e;){for(p=m,m=[];++v<e;)p&&p[v].run();v=-1,e=m.length}p=null,b=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(t){f=o}}();var p,m=[],b=!1,v=-1;d.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];m.push(new c(t,e)),1!==m.length||b||r(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(t){return[]},d.binding=function(t){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(t){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(t,e,n){"use strict";n(22).polyfill()},function(t,e,n){"use strict";function o(t,e){if(void 0===t||null===t)throw new TypeError("Cannot convert first argument to object");for(var n=Object(t),o=1;o<arguments.length;o++){var r=arguments[o];if(void 0!==r&&null!==r)for(var i=Object.keys(Object(r)),a=0,s=i.length;a<s;a++){var c=i[a],l=Object.getOwnPropertyDescriptor(r,c);void 0!==l&&l.enumerable&&(n[c]=r[c])}}return n}function r(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:o})}t.exports={assign:o,polyfill:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(24),r=n(6),i=n(5),a=n(36),s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if("undefined"!=typeof window){var n=a.getOpts.apply(void 0,t);return new Promise(function(t,e){i.default.promise={resolve:t,reject:e},o.default(n),setTimeout(function(){r.openModal()})})}};s.close=r.onAction,s.getState=r.getState,s.setActionValue=i.setActionValue,s.stopLoading=r.stopLoading,s.setDefaults=a.setDefaults,e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(0),i=r.default.MODAL,a=n(4),s=n(34),c=n(35),l=n(1);e.init=function(t){o.getNode(i)||(document.body||l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"),s.default(),a.default()),a.initModalContent(t),c.default(t)},e.default=e.init},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.MODAL;e.modalMarkup='\n  <div class="'+r+'" role="dialog" aria-modal="true"></div>',e.default=e.modalMarkup},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.OVERLAY,i='<div \n    class="'+r+'"\n    tabIndex="-1">\n  </div>';e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.ICON;e.errorIconMarkup=function(){var t=r+"--error",e=t+"__line";return'\n    <div class="'+t+'__x-mark">\n      <span class="'+e+" "+e+'--left"></span>\n      <span class="'+e+" "+e+'--right"></span>\n    </div>\n  '},e.warningIconMarkup=function(){var t=r+"--warning";return'\n    <span class="'+t+'__body">\n      <span class="'+t+'__dot"></span>\n    </span>\n  '},e.successIconMarkup=function(){var t=r+"--success";return'\n    <span class="'+t+"__line "+t+'__line--long"></span>\n    <span class="'+t+"__line "+t+'__line--tip"></span>\n\n    <div class="'+t+'__ring"></div>\n    <div class="'+t+'__hide-corners"></div>\n  '}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.CONTENT;e.contentMarkup='\n  <div class="'+r+'">\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.BUTTON_CONTAINER,i=o.default.BUTTON,a=o.default.BUTTON_LOADER;e.buttonMarkup='\n  <div class="'+r+'">\n\n    <button\n      class="'+i+'"\n    ></button>\n\n    <div class="'+a+'">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),r=n(2),i=n(0),a=i.default.ICON,s=i.default.ICON_CUSTOM,c=["error","warning","success","info"],l={error:r.errorIconMarkup(),warning:r.warningIconMarkup(),success:r.successIconMarkup()},u=function(t,e){var n=a+"--"+t;e.classList.add(n);var o=l[t];o&&(e.innerHTML=o)},f=function(t,e){e.classList.add(s);var n=document.createElement("img");n.src=t,e.appendChild(n)},d=function(t){if(t){var e=o.injectElIntoModal(r.iconMarkup);c.includes(t)?u(t,e):f(t,e)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(4),i=function(t){navigator.userAgent.includes("AppleWebKit")&&(t.style.display="none",t.offsetHeight,t.style.display="")};e.initTitle=function(t){if(t){var e=r.injectElIntoModal(o.titleMarkup);e.textContent=t,i(e)}},e.initText=function(t){if(t){var e=document.createDocumentFragment();t.split("\n").forEach(function(t,n,o){e.appendChild(document.createTextNode(t)),n<o.length-1&&e.appendChild(document.createElement("br"))});var n=r.injectElIntoModal(o.textMarkup);n.appendChild(e),i(n)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(4),i=n(0),a=i.default.BUTTON,s=i.default.DANGER_BUTTON,c=n(3),l=n(2),u=n(6),f=n(5),d=function(t,e,n){var r=e.text,i=e.value,d=e.className,p=e.closeModal,m=o.stringToNode(l.buttonMarkup),b=m.querySelector("."+a),v=a+"--"+t;if(b.classList.add(v),d){(Array.isArray(d)?d:d.split(" ")).filter(function(t){return t.length>0}).forEach(function(t){b.classList.add(t)})}n&&t===c.CONFIRM_KEY&&b.classList.add(s),b.textContent=r;var g={};return g[t]=i,f.setActionValue(g),f.setActionOptionsFor(t,{closeModal:p}),b.addEventListener("click",function(){return u.onAction(t)}),m},p=function(t,e){var n=r.injectElIntoModal(l.footerMarkup);for(var o in t){var i=t[o],a=d(o,i,e);i.visible&&n.appendChild(a)}0===n.children.length&&n.remove()};e.default=p},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(4),i=n(2),a=n(5),s=n(6),c=n(0),l=c.default.CONTENT,u=function(t){t.addEventListener("input",function(t){var e=t.target,n=e.value;a.setActionValue(n)}),t.addEventListener("keyup",function(t){if("Enter"===t.key)return s.onAction(o.CONFIRM_KEY)}),setTimeout(function(){t.focus(),a.setActionValue("")},0)},f=function(t,e,n){var o=document.createElement(e),r=l+"__"+e;o.classList.add(r);for(var i in n){var a=n[i];o[i]=a}"input"===e&&u(o),t.appendChild(o)},d=function(t){if(t){var e=r.injectElIntoModal(i.contentMarkup),n=t.element,o=t.attributes;"string"==typeof n?f(e,n,o):e.appendChild(n)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){var t=o.stringToNode(r.overlayMarkup);document.body.appendChild(t)};e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=n(6),i=n(1),a=n(3),s=n(0),c=s.default.MODAL,l=s.default.BUTTON,u=s.default.OVERLAY,f=function(t){t.preventDefault(),v()},d=function(t){t.preventDefault(),g()},p=function(t){if(o.default.isOpen)switch(t.key){case"Escape":return r.onAction(a.CANCEL_KEY)}},m=function(t){if(o.default.isOpen)switch(t.key){case"Tab":return f(t)}},b=function(t){if(o.default.isOpen)return"Tab"===t.key&&t.shiftKey?d(t):void 0},v=function(){var t=i.getNode(l);t&&(t.tabIndex=0,t.focus())},g=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l),n=e.length-1,o=e[n];o&&o.focus()},h=function(t){t[t.length-1].addEventListener("keydown",m)},w=function(t){t[0].addEventListener("keydown",b)},y=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l);e.length&&(h(e),w(e))},x=function(t){if(i.getNode(u)===t.target)return r.onAction(a.CANCEL_KEY)},_=function(t){var e=i.getNode(u);e.removeEventListener("click",x),t&&e.addEventListener("click",x)},k=function(t){o.default.timer&&clearTimeout(o.default.timer),t&&(o.default.timer=window.setTimeout(function(){return r.onAction(a.CANCEL_KEY)},t))},O=function(t){t.closeOnEsc?document.addEventListener("keyup",p):document.removeEventListener("keyup",p),t.dangerMode?v():g(),y(),_(t.closeOnClickOutside),k(t.timer)};e.default=O},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(37),a=n(38),s={title:null,text:null,icon:null,buttons:r.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},c=Object.assign({},s);e.setDefaults=function(t){c=Object.assign({},s,t)};var l=function(t){var e=t&&t.button,n=t&&t.buttons;return void 0!==e&&void 0!==n&&o.throwErr("Cannot set both 'button' and 'buttons' options!"),void 0!==e?{confirm:e}:n},u=function(t){return o.ordinalSuffixOf(t+1)},f=function(t,e){o.throwErr(u(e)+" argument ('"+t+"') is invalid")},d=function(t,e){var n=t+1,r=e[n];o.isPlainObject(r)||void 0===r||o.throwErr("Expected "+u(n)+" argument ('"+r+"') to be a plain object")},p=function(t,e){var n=t+1,r=e[n];void 0!==r&&o.throwErr("Unexpected "+u(n)+" argument ("+r+")")},m=function(t,e,n,r){var i=typeof e,a="string"===i,s=e instanceof Element;if(a){if(0===n)return{text:e};if(1===n)return{text:e,title:r[0]};if(2===n)return d(n,r),{icon:e};f(e,n)}else{if(s&&0===n)return d(n,r),{content:e};if(o.isPlainObject(e))return p(n,r),e;f(e,n)}};e.getOpts=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n={};t.forEach(function(e,o){var r=m(0,e,o,t);Object.assign(n,r)});var o=l(n);n.buttons=r.getButtonListOpts(o),delete n.button,n.content=i.getContentOpts(n.content);var u=Object.assign({},s,c,n);return Object.keys(u).forEach(function(t){a.DEPRECATED_OPTS[t]&&a.logDeprecation(t)}),u}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r={element:"input",attributes:{placeholder:""}};e.getContentOpts=function(t){var e={};return o.isPlainObject(t)?Object.assign(e,t):t instanceof Element?{element:t}:"input"===t?r:null}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logDeprecation=function(t){var n=e.DEPRECATED_OPTS[t],o=n.onlyRename,r=n.replacement,i=n.subOption,a=n.link,s=o?"renamed":"deprecated",c='SweetAlert warning: "'+t+'" option has been '+s+".";if(r){c+=" Please use"+(i?' "'+i+'" in ':" ")+'"'+r+'" instead.'}var l="https://sweetalert.js.org";c+=a?" More details: "+l+a:" More details: "+l+"/guides/#upgrading-from-1x",console.warn(c)},e.DEPRECATED_OPTS={type:{replacement:"icon",link:"/docs/#icon"},imageUrl:{replacement:"icon",link:"/docs/#icon"},customClass:{replacement:"className",onlyRename:!0,link:"/docs/#classname"},imageSize:{},showCancelButton:{replacement:"buttons",link:"/docs/#buttons"},showConfirmButton:{replacement:"button",link:"/docs/#button"},confirmButtonText:{replacement:"button",link:"/docs/#button"},confirmButtonColor:{},cancelButtonText:{replacement:"buttons",link:"/docs/#buttons"},closeOnConfirm:{replacement:"button",subOption:"closeModal",link:"/docs/#button"},closeOnCancel:{replacement:"buttons",subOption:"closeModal",link:"/docs/#buttons"},showLoaderOnConfirm:{replacement:"buttons"},animation:{},inputType:{replacement:"content",link:"/docs/#content"},inputValue:{replacement:"content",link:"/docs/#content"},inputPlaceholder:{replacement:"content",link:"/docs/#content"},html:{replacement:"content",link:"/docs/#content"},allowEscapeKey:{replacement:"closeOnEsc",onlyRename:!0,link:"/docs/#closeonesc"},allowClickOutside:{replacement:"closeOnClickOutside",onlyRename:!0,link:"/docs/#closeonclickoutside"}}}])});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26).setImmediate, __webpack_require__(26).clearImmediate))

/***/ }),
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery, __webpack_provided_window_dot_$) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vee_validate__ = __webpack_require__(35);




try {
    __webpack_provided_window_dot_$ = __webpack_provided_window_dot_jQuery = __webpack_require__(14);
    __webpack_require__(45);
} catch (e) {}

window.axios = __webpack_require__(46);

__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vue_router__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_2_vee_validate__["a" /* default */]);

var token = document.head.querySelector('meta[name="csrf-token"]');

if (token) {
    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;
} else {
    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14), __webpack_require__(14)))

/***/ }),
/* 44 */,
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/*!
 * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)
 * Copyright 2011-2017 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.')
}

+function ($) {
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] >= 4)) {
    throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')
  }
}(jQuery);


+function () {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): util.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Util = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */

  var transition = false;

  var MAX_UID = 1000000;

  var TransitionEndEvent = {
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'transitionend',
    OTransition: 'oTransitionEnd otransitionend',
    transition: 'transitionend'
  };

  // shoutout AngusCroll (https://goo.gl/pxwQGp)
  function toType(obj) {
    return {}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
  }

  function isElement(obj) {
    return (obj[0] || obj).nodeType;
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: transition.end,
      delegateType: transition.end,
      handle: function handle(event) {
        if ($(event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }
        return undefined;
      }
    };
  }

  function transitionEndTest() {
    if (window.QUnit) {
      return false;
    }

    var el = document.createElement('bootstrap');

    for (var name in TransitionEndEvent) {
      if (el.style[name] !== undefined) {
        return {
          end: TransitionEndEvent[name]
        };
      }
    }

    return false;
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;

    $(this).one(Util.TRANSITION_END, function () {
      called = true;
    });

    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);

    return this;
  }

  function setTransitionEndSupport() {
    transition = transitionEndTest();

    $.fn.emulateTransitionEnd = transitionEndEmulator;

    if (Util.supportsTransitionEnd()) {
      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
    }
  }

  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */

  var Util = {

    TRANSITION_END: 'bsTransitionEnd',

    getUID: function getUID(prefix) {
      do {
        // eslint-disable-next-line no-bitwise
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));
      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector) {
        selector = element.getAttribute('href') || '';
        selector = /^#[a-z]/i.test(selector) ? selector : null;
      }

      return selector;
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $(element).trigger(transition.end);
    },
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(transition);
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (configTypes.hasOwnProperty(property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ': ' + ('Option "' + property + '" provided type "' + valueType + '" ') + ('but expected type "' + expectedTypes + '".'));
          }
        }
      }
    }
  };

  setTransitionEndSupport();

  return Util;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): alert.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Alert = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'alert';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.alert';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 150;

  var Selector = {
    DISMISS: '[data-dismiss="alert"]'
  };

  var Event = {
    CLOSE: 'close' + EVENT_KEY,
    CLOSED: 'closed' + EVENT_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    ALERT: 'alert',
    FADE: 'fade',
    SHOW: 'show'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Alert = function () {
    function Alert(element) {
      _classCallCheck(this, Alert);

      this._element = element;
    }

    // getters

    // public

    Alert.prototype.close = function close(element) {
      element = element || this._element;

      var rootElement = this._getRootElement(element);
      var customEvent = this._triggerCloseEvent(rootElement);

      if (customEvent.isDefaultPrevented()) {
        return;
      }

      this._removeElement(rootElement);
    };

    Alert.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    };

    // private

    Alert.prototype._getRootElement = function _getRootElement(element) {
      var selector = Util.getSelectorFromElement(element);
      var parent = false;

      if (selector) {
        parent = $(selector)[0];
      }

      if (!parent) {
        parent = $(element).closest('.' + ClassName.ALERT)[0];
      }

      return parent;
    };

    Alert.prototype._triggerCloseEvent = function _triggerCloseEvent(element) {
      var closeEvent = $.Event(Event.CLOSE);

      $(element).trigger(closeEvent);
      return closeEvent;
    };

    Alert.prototype._removeElement = function _removeElement(element) {
      var _this2 = this;

      $(element).removeClass(ClassName.SHOW);

      if (!Util.supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {
        this._destroyElement(element);
        return;
      }

      $(element).one(Util.TRANSITION_END, function (event) {
        return _this2._destroyElement(element, event);
      }).emulateTransitionEnd(TRANSITION_DURATION);
    };

    Alert.prototype._destroyElement = function _destroyElement(element) {
      $(element).detach().trigger(Event.CLOSED).remove();
    };

    // static

    Alert._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $(this);
        var data = $element.data(DATA_KEY);

        if (!data) {
          data = new Alert(this);
          $element.data(DATA_KEY, data);
        }

        if (config === 'close') {
          data[config](this);
        }
      });
    };

    Alert._handleDismiss = function _handleDismiss(alertInstance) {
      return function (event) {
        if (event) {
          event.preventDefault();
        }

        alertInstance.close(this);
      };
    };

    _createClass(Alert, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }]);

    return Alert;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Alert._jQueryInterface;
  $.fn[NAME].Constructor = Alert;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Alert._jQueryInterface;
  };

  return Alert;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): button.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Button = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'button';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.button';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];

  var ClassName = {
    ACTIVE: 'active',
    BUTTON: 'btn',
    FOCUS: 'focus'
  };

  var Selector = {
    DATA_TOGGLE_CARROT: '[data-toggle^="button"]',
    DATA_TOGGLE: '[data-toggle="buttons"]',
    INPUT: 'input',
    ACTIVE: '.active',
    BUTTON: '.btn'
  };

  var Event = {
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,
    FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Button = function () {
    function Button(element) {
      _classCallCheck(this, Button);

      this._element = element;
    }

    // getters

    // public

    Button.prototype.toggle = function toggle() {
      var triggerChangeEvent = true;
      var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];

      if (rootElement) {
        var input = $(this._element).find(Selector.INPUT)[0];

        if (input) {
          if (input.type === 'radio') {
            if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {
              triggerChangeEvent = false;
            } else {
              var activeElement = $(rootElement).find(Selector.ACTIVE)[0];

              if (activeElement) {
                $(activeElement).removeClass(ClassName.ACTIVE);
              }
            }
          }

          if (triggerChangeEvent) {
            input.checked = !$(this._element).hasClass(ClassName.ACTIVE);
            $(input).trigger('change');
          }

          input.focus();
        }
      }

      this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));

      if (triggerChangeEvent) {
        $(this._element).toggleClass(ClassName.ACTIVE);
      }
    };

    Button.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    };

    // static

    Button._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        if (!data) {
          data = new Button(this);
          $(this).data(DATA_KEY, data);
        }

        if (config === 'toggle') {
          data[config]();
        }
      });
    };

    _createClass(Button, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }]);

    return Button;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
    event.preventDefault();

    var button = event.target;

    if (!$(button).hasClass(ClassName.BUTTON)) {
      button = $(button).closest(Selector.BUTTON);
    }

    Button._jQueryInterface.call($(button), 'toggle');
  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
    var button = $(event.target).closest(Selector.BUTTON)[0];
    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Button._jQueryInterface;
  $.fn[NAME].Constructor = Button;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Button._jQueryInterface;
  };

  return Button;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Carousel = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'carousel';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.carousel';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 600;
  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key
  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

  var Default = {
    interval: 5000,
    keyboard: true,
    slide: false,
    pause: 'hover',
    wrap: true
  };

  var DefaultType = {
    interval: '(number|boolean)',
    keyboard: 'boolean',
    slide: '(boolean|string)',
    pause: '(string|boolean)',
    wrap: 'boolean'
  };

  var Direction = {
    NEXT: 'next',
    PREV: 'prev',
    LEFT: 'left',
    RIGHT: 'right'
  };

  var Event = {
    SLIDE: 'slide' + EVENT_KEY,
    SLID: 'slid' + EVENT_KEY,
    KEYDOWN: 'keydown' + EVENT_KEY,
    MOUSEENTER: 'mouseenter' + EVENT_KEY,
    MOUSELEAVE: 'mouseleave' + EVENT_KEY,
    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    CAROUSEL: 'carousel',
    ACTIVE: 'active',
    SLIDE: 'slide',
    RIGHT: 'carousel-item-right',
    LEFT: 'carousel-item-left',
    NEXT: 'carousel-item-next',
    PREV: 'carousel-item-prev',
    ITEM: 'carousel-item'
  };

  var Selector = {
    ACTIVE: '.active',
    ACTIVE_ITEM: '.active.carousel-item',
    ITEM: '.carousel-item',
    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',
    INDICATORS: '.carousel-indicators',
    DATA_SLIDE: '[data-slide], [data-slide-to]',
    DATA_RIDE: '[data-ride="carousel"]'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Carousel = function () {
    function Carousel(element, config) {
      _classCallCheck(this, Carousel);

      this._items = null;
      this._interval = null;
      this._activeElement = null;

      this._isPaused = false;
      this._isSliding = false;

      this._config = this._getConfig(config);
      this._element = $(element)[0];
      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];

      this._addEventListeners();
    }

    // getters

    // public

    Carousel.prototype.next = function next() {
      if (this._isSliding) {
        throw new Error('Carousel is sliding');
      }
      this._slide(Direction.NEXT);
    };

    Carousel.prototype.nextWhenVisible = function nextWhenVisible() {
      // Don't call next when the page isn't visible
      if (!document.hidden) {
        this.next();
      }
    };

    Carousel.prototype.prev = function prev() {
      if (this._isSliding) {
        throw new Error('Carousel is sliding');
      }
      this._slide(Direction.PREVIOUS);
    };

    Carousel.prototype.pause = function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {
        Util.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval);
      this._interval = null;
    };

    Carousel.prototype.cycle = function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config.interval && !this._isPaused) {
        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    };

    Carousel.prototype.to = function to(index) {
      var _this3 = this;

      this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        $(this._element).one(Event.SLID, function () {
          return _this3.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;

      this._slide(direction, this._items[index]);
    };

    Carousel.prototype.dispose = function dispose() {
      $(this._element).off(EVENT_KEY);
      $.removeData(this._element, DATA_KEY);

      this._items = null;
      this._config = null;
      this._element = null;
      this._interval = null;
      this._isPaused = null;
      this._isSliding = null;
      this._activeElement = null;
      this._indicatorsElement = null;
    };

    // private

    Carousel.prototype._getConfig = function _getConfig(config) {
      config = $.extend({}, Default, config);
      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    Carousel.prototype._addEventListeners = function _addEventListeners() {
      var _this4 = this;

      if (this._config.keyboard) {
        $(this._element).on(Event.KEYDOWN, function (event) {
          return _this4._keydown(event);
        });
      }

      if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {
        $(this._element).on(Event.MOUSEENTER, function (event) {
          return _this4.pause(event);
        }).on(Event.MOUSELEAVE, function (event) {
          return _this4.cycle(event);
        });
      }
    };

    Carousel.prototype._keydown = function _keydown(event) {
      if (/input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;
        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;
        default:
          return;
      }
    };

    Carousel.prototype._getItemIndex = function _getItemIndex(element) {
      this._items = $.makeArray($(element).parent().find(Selector.ITEM));
      return this._items.indexOf(element);
    };

    Carousel.prototype._getItemByDirection = function _getItemByDirection(direction, activeElement) {
      var isNextDirection = direction === Direction.NEXT;
      var isPrevDirection = direction === Direction.PREVIOUS;
      var activeIndex = this._getItemIndex(activeElement);
      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === Direction.PREVIOUS ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;

      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    };

    Carousel.prototype._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var slideEvent = $.Event(Event.SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName
      });

      $(this._element).trigger(slideEvent);

      return slideEvent;
    };

    Carousel.prototype._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          $(nextIndicator).addClass(ClassName.ACTIVE);
        }
      }
    };

    Carousel.prototype._slide = function _slide(direction, element) {
      var _this5 = this;

      var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];
      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      var isCycling = Boolean(this._interval);

      var directionalClassName = void 0;
      var orderClassName = void 0;
      var eventDirectionName = void 0;

      if (direction === Direction.NEXT) {
        directionalClassName = ClassName.LEFT;
        orderClassName = ClassName.NEXT;
        eventDirectionName = Direction.LEFT;
      } else {
        directionalClassName = ClassName.RIGHT;
        orderClassName = ClassName.PREV;
        eventDirectionName = Direction.RIGHT;
      }

      if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);
      if (slideEvent.isDefaultPrevented()) {
        return;
      }

      if (!activeElement || !nextElement) {
        // some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      var slidEvent = $.Event(Event.SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName
      });

      if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {

        $(nextElement).addClass(orderClassName);

        Util.reflow(nextElement);

        $(activeElement).addClass(directionalClassName);
        $(nextElement).addClass(directionalClassName);

        $(activeElement).one(Util.TRANSITION_END, function () {
          $(nextElement).removeClass(directionalClassName + ' ' + orderClassName).addClass(ClassName.ACTIVE);

          $(activeElement).removeClass(ClassName.ACTIVE + ' ' + orderClassName + ' ' + directionalClassName);

          _this5._isSliding = false;

          setTimeout(function () {
            return $(_this5._element).trigger(slidEvent);
          }, 0);
        }).emulateTransitionEnd(TRANSITION_DURATION);
      } else {
        $(activeElement).removeClass(ClassName.ACTIVE);
        $(nextElement).addClass(ClassName.ACTIVE);

        this._isSliding = false;
        $(this._element).trigger(slidEvent);
      }

      if (isCycling) {
        this.cycle();
      }
    };

    // static

    Carousel._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);
        var _config = $.extend({}, Default, $(this).data());

        if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {
          $.extend(_config, config);
        }

        var action = typeof config === 'string' ? config : _config.slide;

        if (!data) {
          data = new Carousel(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'number') {
          data.to(config);
        } else if (typeof action === 'string') {
          if (data[action] === undefined) {
            throw new Error('No method named "' + action + '"');
          }
          data[action]();
        } else if (_config.interval) {
          data.pause();
          data.cycle();
        }
      });
    };

    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
      var selector = Util.getSelectorFromElement(this);

      if (!selector) {
        return;
      }

      var target = $(selector)[0];

      if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {
        return;
      }

      var config = $.extend({}, $(target).data(), $(this).data());
      var slideIndex = this.getAttribute('data-slide-to');

      if (slideIndex) {
        config.interval = false;
      }

      Carousel._jQueryInterface.call($(target), config);

      if (slideIndex) {
        $(target).data(DATA_KEY).to(slideIndex);
      }

      event.preventDefault();
    };

    _createClass(Carousel, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }]);

    return Carousel;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);

  $(window).on(Event.LOAD_DATA_API, function () {
    $(Selector.DATA_RIDE).each(function () {
      var $carousel = $(this);
      Carousel._jQueryInterface.call($carousel, $carousel.data());
    });
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Carousel._jQueryInterface;
  $.fn[NAME].Constructor = Carousel;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Carousel._jQueryInterface;
  };

  return Carousel;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Collapse = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'collapse';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.collapse';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 600;

  var Default = {
    toggle: true,
    parent: ''
  };

  var DefaultType = {
    toggle: 'boolean',
    parent: 'string'
  };

  var Event = {
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    SHOW: 'show',
    COLLAPSE: 'collapse',
    COLLAPSING: 'collapsing',
    COLLAPSED: 'collapsed'
  };

  var Dimension = {
    WIDTH: 'width',
    HEIGHT: 'height'
  };

  var Selector = {
    ACTIVES: '.card > .show, .card > .collapsing',
    DATA_TOGGLE: '[data-toggle="collapse"]'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Collapse = function () {
    function Collapse(element, config) {
      _classCallCheck(this, Collapse);

      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = $.makeArray($('[data-toggle="collapse"][href="#' + element.id + '"],' + ('[data-toggle="collapse"][data-target="#' + element.id + '"]')));

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    }

    // getters

    // public

    Collapse.prototype.toggle = function toggle() {
      if ($(this._element).hasClass(ClassName.SHOW)) {
        this.hide();
      } else {
        this.show();
      }
    };

    Collapse.prototype.show = function show() {
      var _this6 = this;

      if (this._isTransitioning) {
        throw new Error('Collapse is transitioning');
      }

      if ($(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var actives = void 0;
      var activesData = void 0;

      if (this._parent) {
        actives = $.makeArray($(this._parent).find(Selector.ACTIVES));
        if (!actives.length) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $(actives).data(DATA_KEY);
        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $.Event(Event.SHOW);
      $(this._element).trigger(startEvent);
      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($(actives), 'hide');
        if (!activesData) {
          $(actives).data(DATA_KEY, null);
        }
      }

      var dimension = this._getDimension();

      $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);

      this._element.style[dimension] = 0;
      this._element.setAttribute('aria-expanded', true);

      if (this._triggerArray.length) {
        $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $(_this6._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);

        _this6._element.style[dimension] = '';

        _this6.setTransitioning(false);

        $(_this6._element).trigger(Event.SHOWN);
      };

      if (!Util.supportsTransitionEnd()) {
        complete();
        return;
      }

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = 'scroll' + capitalizedDimension;

      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);

      this._element.style[dimension] = this._element[scrollSize] + 'px';
    };

    Collapse.prototype.hide = function hide() {
      var _this7 = this;

      if (this._isTransitioning) {
        throw new Error('Collapse is transitioning');
      }

      if (!$(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var startEvent = $.Event(Event.HIDE);
      $(this._element).trigger(startEvent);
      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();
      var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';

      this._element.style[dimension] = this._element[offsetDimension] + 'px';

      Util.reflow(this._element);

      $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);

      this._element.setAttribute('aria-expanded', false);

      if (this._triggerArray.length) {
        $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this7.setTransitioning(false);
        $(_this7._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);
      };

      this._element.style[dimension] = '';

      if (!Util.supportsTransitionEnd()) {
        complete();
        return;
      }

      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
    };

    Collapse.prototype.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    Collapse.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);

      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    };

    // private

    Collapse.prototype._getConfig = function _getConfig(config) {
      config = $.extend({}, Default, config);
      config.toggle = Boolean(config.toggle); // coerce string values
      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    Collapse.prototype._getDimension = function _getDimension() {
      var hasWidth = $(this._element).hasClass(Dimension.WIDTH);
      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;
    };

    Collapse.prototype._getParent = function _getParent() {
      var _this8 = this;

      var parent = $(this._config.parent)[0];
      var selector = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]';

      $(parent).find(selector).each(function (i, element) {
        _this8._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });

      return parent;
    };

    Collapse.prototype._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      if (element) {
        var isOpen = $(element).hasClass(ClassName.SHOW);
        element.setAttribute('aria-expanded', isOpen);

        if (triggerArray.length) {
          $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
        }
      }
    };

    // static

    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? $(selector)[0] : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY);
        var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);

        if (!data && _config.toggle && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $this.data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }]);

    return Collapse;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    event.preventDefault();

    var target = Collapse._getTargetFromElement(this);
    var data = $(target).data(DATA_KEY);
    var config = data ? 'toggle' : $(this).data();

    Collapse._jQueryInterface.call($(target), config);
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Collapse._jQueryInterface;
  $.fn[NAME].Constructor = Collapse;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Collapse._jQueryInterface;
  };

  return Collapse;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): dropdown.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Dropdown = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'dropdown';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.dropdown';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key
  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key
  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key
  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

  var Event = {
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    CLICK: 'click' + EVENT_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,
    FOCUSIN_DATA_API: 'focusin' + EVENT_KEY + DATA_API_KEY,
    KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    BACKDROP: 'dropdown-backdrop',
    DISABLED: 'disabled',
    SHOW: 'show'
  };

  var Selector = {
    BACKDROP: '.dropdown-backdrop',
    DATA_TOGGLE: '[data-toggle="dropdown"]',
    FORM_CHILD: '.dropdown form',
    ROLE_MENU: '[role="menu"]',
    ROLE_LISTBOX: '[role="listbox"]',
    NAVBAR_NAV: '.navbar-nav',
    VISIBLE_ITEMS: '[role="menu"] li:not(.disabled) a, ' + '[role="listbox"] li:not(.disabled) a'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Dropdown = function () {
    function Dropdown(element) {
      _classCallCheck(this, Dropdown);

      this._element = element;

      this._addEventListeners();
    }

    // getters

    // public

    Dropdown.prototype.toggle = function toggle() {
      if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {
        return false;
      }

      var parent = Dropdown._getParentFromElement(this);
      var isActive = $(parent).hasClass(ClassName.SHOW);

      Dropdown._clearMenus();

      if (isActive) {
        return false;
      }

      if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {

        // if mobile we use a backdrop because click events don't delegate
        var dropdown = document.createElement('div');
        dropdown.className = ClassName.BACKDROP;
        $(dropdown).insertBefore(this);
        $(dropdown).on('click', Dropdown._clearMenus);
      }

      var relatedTarget = {
        relatedTarget: this
      };
      var showEvent = $.Event(Event.SHOW, relatedTarget);

      $(parent).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return false;
      }

      this.focus();
      this.setAttribute('aria-expanded', true);

      $(parent).toggleClass(ClassName.SHOW);
      $(parent).trigger($.Event(Event.SHOWN, relatedTarget));

      return false;
    };

    Dropdown.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      $(this._element).off(EVENT_KEY);
      this._element = null;
    };

    // private

    Dropdown.prototype._addEventListeners = function _addEventListeners() {
      $(this._element).on(Event.CLICK, this.toggle);
    };

    // static

    Dropdown._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        if (!data) {
          data = new Dropdown(this);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config].call(this);
        }
      });
    };

    Dropdown._clearMenus = function _clearMenus(event) {
      if (event && event.which === RIGHT_MOUSE_BUTTON_WHICH) {
        return;
      }

      var backdrop = $(Selector.BACKDROP)[0];
      if (backdrop) {
        backdrop.parentNode.removeChild(backdrop);
      }

      var toggles = $.makeArray($(Selector.DATA_TOGGLE));

      for (var i = 0; i < toggles.length; i++) {
        var parent = Dropdown._getParentFromElement(toggles[i]);
        var relatedTarget = {
          relatedTarget: toggles[i]
        };

        if (!$(parent).hasClass(ClassName.SHOW)) {
          continue;
        }

        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'focusin') && $.contains(parent, event.target)) {
          continue;
        }

        var hideEvent = $.Event(Event.HIDE, relatedTarget);
        $(parent).trigger(hideEvent);
        if (hideEvent.isDefaultPrevented()) {
          continue;
        }

        toggles[i].setAttribute('aria-expanded', 'false');

        $(parent).removeClass(ClassName.SHOW).trigger($.Event(Event.HIDDEN, relatedTarget));
      }
    };

    Dropdown._getParentFromElement = function _getParentFromElement(element) {
      var parent = void 0;
      var selector = Util.getSelectorFromElement(element);

      if (selector) {
        parent = $(selector)[0];
      }

      return parent || element.parentNode;
    };

    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {
      if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {
        return;
      }

      event.preventDefault();
      event.stopPropagation();

      if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this);
      var isActive = $(parent).hasClass(ClassName.SHOW);

      if (!isActive && event.which !== ESCAPE_KEYCODE || isActive && event.which === ESCAPE_KEYCODE) {

        if (event.which === ESCAPE_KEYCODE) {
          var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];
          $(toggle).trigger('focus');
        }

        $(this).trigger('click');
        return;
      }

      var items = $(parent).find(Selector.VISIBLE_ITEMS).get();

      if (!items.length) {
        return;
      }

      var index = items.indexOf(event.target);

      if (event.which === ARROW_UP_KEYCODE && index > 0) {
        // up
        index--;
      }

      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {
        // down
        index++;
      }

      if (index < 0) {
        index = 0;
      }

      items[index].focus();
    };

    _createClass(Dropdown, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }]);

    return Dropdown;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + ' ' + Event.FOCUSIN_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {
    e.stopPropagation();
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Dropdown._jQueryInterface;
  $.fn[NAME].Constructor = Dropdown;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Dropdown._jQueryInterface;
  };

  return Dropdown;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Modal = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'modal';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.modal';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 300;
  var BACKDROP_TRANSITION_DURATION = 150;
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var Default = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: true
  };

  var DefaultType = {
    backdrop: '(boolean|string)',
    keyboard: 'boolean',
    focus: 'boolean',
    show: 'boolean'
  };

  var Event = {
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    FOCUSIN: 'focusin' + EVENT_KEY,
    RESIZE: 'resize' + EVENT_KEY,
    CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,
    KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,
    MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,
    MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
    BACKDROP: 'modal-backdrop',
    OPEN: 'modal-open',
    FADE: 'fade',
    SHOW: 'show'
  };

  var Selector = {
    DIALOG: '.modal-dialog',
    DATA_TOGGLE: '[data-toggle="modal"]',
    DATA_DISMISS: '[data-dismiss="modal"]',
    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Modal = function () {
    function Modal(element, config) {
      _classCallCheck(this, Modal);

      this._config = this._getConfig(config);
      this._element = element;
      this._dialog = $(element).find(Selector.DIALOG)[0];
      this._backdrop = null;
      this._isShown = false;
      this._isBodyOverflowing = false;
      this._ignoreBackdropClick = false;
      this._isTransitioning = false;
      this._originalBodyPadding = 0;
      this._scrollbarWidth = 0;
    }

    // getters

    // public

    Modal.prototype.toggle = function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    };

    Modal.prototype.show = function show(relatedTarget) {
      var _this9 = this;

      if (this._isTransitioning) {
        throw new Error('Modal is transitioning');
      }

      if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
        this._isTransitioning = true;
      }
      var showEvent = $.Event(Event.SHOW, {
        relatedTarget: relatedTarget
      });

      $(this._element).trigger(showEvent);

      if (this._isShown || showEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();
      this._setScrollbar();

      $(document.body).addClass(ClassName.OPEN);

      this._setEscapeEvent();
      this._setResizeEvent();

      $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {
        return _this9.hide(event);
      });

      $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {
        $(_this9._element).one(Event.MOUSEUP_DISMISS, function (event) {
          if ($(event.target).is(_this9._element)) {
            _this9._ignoreBackdropClick = true;
          }
        });
      });

      this._showBackdrop(function () {
        return _this9._showElement(relatedTarget);
      });
    };

    Modal.prototype.hide = function hide(event) {
      var _this10 = this;

      if (event) {
        event.preventDefault();
      }

      if (this._isTransitioning) {
        throw new Error('Modal is transitioning');
      }

      var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);
      if (transition) {
        this._isTransitioning = true;
      }

      var hideEvent = $.Event(Event.HIDE);
      $(this._element).trigger(hideEvent);

      if (!this._isShown || hideEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = false;

      this._setEscapeEvent();
      this._setResizeEvent();

      $(document).off(Event.FOCUSIN);

      $(this._element).removeClass(ClassName.SHOW);

      $(this._element).off(Event.CLICK_DISMISS);
      $(this._dialog).off(Event.MOUSEDOWN_DISMISS);

      if (transition) {
        $(this._element).one(Util.TRANSITION_END, function (event) {
          return _this10._hideModal(event);
        }).emulateTransitionEnd(TRANSITION_DURATION);
      } else {
        this._hideModal();
      }
    };

    Modal.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);

      $(window, document, this._element, this._backdrop).off(EVENT_KEY);

      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._originalBodyPadding = null;
      this._scrollbarWidth = null;
    };

    // private

    Modal.prototype._getConfig = function _getConfig(config) {
      config = $.extend({}, Default, config);
      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    Modal.prototype._showElement = function _showElement(relatedTarget) {
      var _this11 = this;

      var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // don't move modals dom position
        document.body.appendChild(this._element);
      }

      this._element.style.display = 'block';
      this._element.removeAttribute('aria-hidden');
      this._element.scrollTop = 0;

      if (transition) {
        Util.reflow(this._element);
      }

      $(this._element).addClass(ClassName.SHOW);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var shownEvent = $.Event(Event.SHOWN, {
        relatedTarget: relatedTarget
      });

      var transitionComplete = function transitionComplete() {
        if (_this11._config.focus) {
          _this11._element.focus();
        }
        _this11._isTransitioning = false;
        $(_this11._element).trigger(shownEvent);
      };

      if (transition) {
        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);
      } else {
        transitionComplete();
      }
    };

    Modal.prototype._enforceFocus = function _enforceFocus() {
      var _this12 = this;

      $(document).off(Event.FOCUSIN) // guard against infinite focus loop
      .on(Event.FOCUSIN, function (event) {
        if (document !== event.target && _this12._element !== event.target && !$(_this12._element).has(event.target).length) {
          _this12._element.focus();
        }
      });
    };

    Modal.prototype._setEscapeEvent = function _setEscapeEvent() {
      var _this13 = this;

      if (this._isShown && this._config.keyboard) {
        $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {
          if (event.which === ESCAPE_KEYCODE) {
            _this13.hide();
          }
        });
      } else if (!this._isShown) {
        $(this._element).off(Event.KEYDOWN_DISMISS);
      }
    };

    Modal.prototype._setResizeEvent = function _setResizeEvent() {
      var _this14 = this;

      if (this._isShown) {
        $(window).on(Event.RESIZE, function (event) {
          return _this14._handleUpdate(event);
        });
      } else {
        $(window).off(Event.RESIZE);
      }
    };

    Modal.prototype._hideModal = function _hideModal() {
      var _this15 = this;

      this._element.style.display = 'none';
      this._element.setAttribute('aria-hidden', 'true');
      this._isTransitioning = false;
      this._showBackdrop(function () {
        $(document.body).removeClass(ClassName.OPEN);
        _this15._resetAdjustments();
        _this15._resetScrollbar();
        $(_this15._element).trigger(Event.HIDDEN);
      });
    };

    Modal.prototype._removeBackdrop = function _removeBackdrop() {
      if (this._backdrop) {
        $(this._backdrop).remove();
        this._backdrop = null;
      }
    };

    Modal.prototype._showBackdrop = function _showBackdrop(callback) {
      var _this16 = this;

      var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';

      if (this._isShown && this._config.backdrop) {
        var doAnimate = Util.supportsTransitionEnd() && animate;

        this._backdrop = document.createElement('div');
        this._backdrop.className = ClassName.BACKDROP;

        if (animate) {
          $(this._backdrop).addClass(animate);
        }

        $(this._backdrop).appendTo(document.body);

        $(this._element).on(Event.CLICK_DISMISS, function (event) {
          if (_this16._ignoreBackdropClick) {
            _this16._ignoreBackdropClick = false;
            return;
          }
          if (event.target !== event.currentTarget) {
            return;
          }
          if (_this16._config.backdrop === 'static') {
            _this16._element.focus();
          } else {
            _this16.hide();
          }
        });

        if (doAnimate) {
          Util.reflow(this._backdrop);
        }

        $(this._backdrop).addClass(ClassName.SHOW);

        if (!callback) {
          return;
        }

        if (!doAnimate) {
          callback();
          return;
        }

        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
      } else if (!this._isShown && this._backdrop) {
        $(this._backdrop).removeClass(ClassName.SHOW);

        var callbackRemove = function callbackRemove() {
          _this16._removeBackdrop();
          if (callback) {
            callback();
          }
        };

        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
        } else {
          callbackRemove();
        }
      } else if (callback) {
        callback();
      }
    };

    // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // todo (fat): these should probably be refactored out of modal.js
    // ----------------------------------------------------------------------

    Modal.prototype._handleUpdate = function _handleUpdate() {
      this._adjustDialog();
    };

    Modal.prototype._adjustDialog = function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = this._scrollbarWidth + 'px';
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = this._scrollbarWidth + 'px';
      }
    };

    Modal.prototype._resetAdjustments = function _resetAdjustments() {
      this._element.style.paddingLeft = '';
      this._element.style.paddingRight = '';
    };

    Modal.prototype._checkScrollbar = function _checkScrollbar() {
      this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    };

    Modal.prototype._setScrollbar = function _setScrollbar() {
      var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);

      this._originalBodyPadding = document.body.style.paddingRight || '';

      if (this._isBodyOverflowing) {
        document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';
      }
    };

    Modal.prototype._resetScrollbar = function _resetScrollbar() {
      document.body.style.paddingRight = this._originalBodyPadding;
    };

    Modal.prototype._getScrollbarWidth = function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement('div');
      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    };

    // static

    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);
        var _config = $.extend({}, Modal.Default, $(this).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);

        if (!data) {
          data = new Modal(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config](relatedTarget);
        } else if (_config.show) {
          data.show(relatedTarget);
        }
      });
    };

    _createClass(Modal, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }]);

    return Modal;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    var _this17 = this;

    var target = void 0;
    var selector = Util.getSelectorFromElement(this);

    if (selector) {
      target = $(selector)[0];
    }

    var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());

    if (this.tagName === 'A' || this.tagName === 'AREA') {
      event.preventDefault();
    }

    var $target = $(target).one(Event.SHOW, function (showEvent) {
      if (showEvent.isDefaultPrevented()) {
        // only register focus restorer if modal will actually get shown
        return;
      }

      $target.one(Event.HIDDEN, function () {
        if ($(_this17).is(':visible')) {
          _this17.focus();
        }
      });
    });

    Modal._jQueryInterface.call($(target), config, this);
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Modal._jQueryInterface;
  $.fn[NAME].Constructor = Modal;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Modal._jQueryInterface;
  };

  return Modal;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): scrollspy.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var ScrollSpy = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'scrollspy';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.scrollspy';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];

  var Default = {
    offset: 10,
    method: 'auto',
    target: ''
  };

  var DefaultType = {
    offset: 'number',
    method: 'string',
    target: '(string|element)'
  };

  var Event = {
    ACTIVATE: 'activate' + EVENT_KEY,
    SCROLL: 'scroll' + EVENT_KEY,
    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    DROPDOWN_ITEM: 'dropdown-item',
    DROPDOWN_MENU: 'dropdown-menu',
    NAV_LINK: 'nav-link',
    NAV: 'nav',
    ACTIVE: 'active'
  };

  var Selector = {
    DATA_SPY: '[data-spy="scroll"]',
    ACTIVE: '.active',
    LIST_ITEM: '.list-item',
    LI: 'li',
    LI_DROPDOWN: 'li.dropdown',
    NAV_LINKS: '.nav-link',
    DROPDOWN: '.dropdown',
    DROPDOWN_ITEMS: '.dropdown-item',
    DROPDOWN_TOGGLE: '.dropdown-toggle'
  };

  var OffsetMethod = {
    OFFSET: 'offset',
    POSITION: 'position'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var ScrollSpy = function () {
    function ScrollSpy(element, config) {
      var _this18 = this;

      _classCallCheck(this, ScrollSpy);

      this._element = element;
      this._scrollElement = element.tagName === 'BODY' ? window : element;
      this._config = this._getConfig(config);
      this._selector = this._config.target + ' ' + Selector.NAV_LINKS + ',' + (this._config.target + ' ' + Selector.DROPDOWN_ITEMS);
      this._offsets = [];
      this._targets = [];
      this._activeTarget = null;
      this._scrollHeight = 0;

      $(this._scrollElement).on(Event.SCROLL, function (event) {
        return _this18._process(event);
      });

      this.refresh();
      this._process();
    }

    // getters

    // public

    ScrollSpy.prototype.refresh = function refresh() {
      var _this19 = this;

      var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;

      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;

      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;

      this._offsets = [];
      this._targets = [];

      this._scrollHeight = this._getScrollHeight();

      var targets = $.makeArray($(this._selector));

      targets.map(function (element) {
        var target = void 0;
        var targetSelector = Util.getSelectorFromElement(element);

        if (targetSelector) {
          target = $(targetSelector)[0];
        }

        if (target && (target.offsetWidth || target.offsetHeight)) {
          // todo (fat): remove sketch reliance on jQuery position/offset
          return [$(target)[offsetMethod]().top + offsetBase, targetSelector];
        }
        return null;
      }).filter(function (item) {
        return item;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).forEach(function (item) {
        _this19._offsets.push(item[0]);
        _this19._targets.push(item[1]);
      });
    };

    ScrollSpy.prototype.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      $(this._scrollElement).off(EVENT_KEY);

      this._element = null;
      this._scrollElement = null;
      this._config = null;
      this._selector = null;
      this._offsets = null;
      this._targets = null;
      this._activeTarget = null;
      this._scrollHeight = null;
    };

    // private

    ScrollSpy.prototype._getConfig = function _getConfig(config) {
      config = $.extend({}, Default, config);

      if (typeof config.target !== 'string') {
        var id = $(config.target).attr('id');
        if (!id) {
          id = Util.getUID(NAME);
          $(config.target).attr('id', id);
        }
        config.target = '#' + id;
      }

      Util.typeCheckConfig(NAME, config, DefaultType);

      return config;
    };

    ScrollSpy.prototype._getScrollTop = function _getScrollTop() {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    };

    ScrollSpy.prototype._getScrollHeight = function _getScrollHeight() {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    };

    ScrollSpy.prototype._getOffsetHeight = function _getOffsetHeight() {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.offsetHeight;
    };

    ScrollSpy.prototype._process = function _process() {
      var scrollTop = this._getScrollTop() + this._config.offset;
      var scrollHeight = this._getScrollHeight();
      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

      if (this._scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this._targets[this._targets.length - 1];

        if (this._activeTarget !== target) {
          this._activate(target);
        }
        return;
      }

      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
        this._activeTarget = null;
        this._clear();
        return;
      }

      for (var i = this._offsets.length; i--;) {
        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (this._offsets[i + 1] === undefined || scrollTop < this._offsets[i + 1]);

        if (isActiveTarget) {
          this._activate(this._targets[i]);
        }
      }
    };

    ScrollSpy.prototype._activate = function _activate(target) {
      this._activeTarget = target;

      this._clear();

      var queries = this._selector.split(',');
      queries = queries.map(function (selector) {
        return selector + '[data-target="' + target + '"],' + (selector + '[href="' + target + '"]');
      });

      var $link = $(queries.join(','));

      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {
        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);
        $link.addClass(ClassName.ACTIVE);
      } else {
        // todo (fat) this is kinda sus...
        // recursively add actives to tested nav-links
        $link.parents(Selector.LI).find('> ' + Selector.NAV_LINKS).addClass(ClassName.ACTIVE);
      }

      $(this._scrollElement).trigger(Event.ACTIVATE, {
        relatedTarget: target
      });
    };

    ScrollSpy.prototype._clear = function _clear() {
      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);
    };

    // static

    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);
        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;

        if (!data) {
          data = new ScrollSpy(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config]();
        }
      });
    };

    _createClass(ScrollSpy, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }]);

    return ScrollSpy;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(window).on(Event.LOAD_DATA_API, function () {
    var scrollSpys = $.makeArray($(Selector.DATA_SPY));

    for (var i = scrollSpys.length; i--;) {
      var $spy = $(scrollSpys[i]);
      ScrollSpy._jQueryInterface.call($spy, $spy.data());
    }
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = ScrollSpy._jQueryInterface;
  $.fn[NAME].Constructor = ScrollSpy;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return ScrollSpy._jQueryInterface;
  };

  return ScrollSpy;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): tab.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Tab = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'tab';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.tab';
  var EVENT_KEY = '.' + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 150;

  var Event = {
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
  };

  var ClassName = {
    DROPDOWN_MENU: 'dropdown-menu',
    ACTIVE: 'active',
    DISABLED: 'disabled',
    FADE: 'fade',
    SHOW: 'show'
  };

  var Selector = {
    A: 'a',
    LI: 'li',
    DROPDOWN: '.dropdown',
    LIST: 'ul:not(.dropdown-menu), ol:not(.dropdown-menu), nav:not(.dropdown-menu)',
    FADE_CHILD: '> .nav-item .fade, > .fade',
    ACTIVE: '.active',
    ACTIVE_CHILD: '> .nav-item > .active, > .active',
    DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"]',
    DROPDOWN_TOGGLE: '.dropdown-toggle',
    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tab = function () {
    function Tab(element) {
      _classCallCheck(this, Tab);

      this._element = element;
    }

    // getters

    // public

    Tab.prototype.show = function show() {
      var _this20 = this;

      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE) || $(this._element).hasClass(ClassName.DISABLED)) {
        return;
      }

      var target = void 0;
      var previous = void 0;
      var listElement = $(this._element).closest(Selector.LIST)[0];
      var selector = Util.getSelectorFromElement(this._element);

      if (listElement) {
        previous = $.makeArray($(listElement).find(Selector.ACTIVE));
        previous = previous[previous.length - 1];
      }

      var hideEvent = $.Event(Event.HIDE, {
        relatedTarget: this._element
      });

      var showEvent = $.Event(Event.SHOW, {
        relatedTarget: previous
      });

      if (previous) {
        $(previous).trigger(hideEvent);
      }

      $(this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
        return;
      }

      if (selector) {
        target = $(selector)[0];
      }

      this._activate(this._element, listElement);

      var complete = function complete() {
        var hiddenEvent = $.Event(Event.HIDDEN, {
          relatedTarget: _this20._element
        });

        var shownEvent = $.Event(Event.SHOWN, {
          relatedTarget: previous
        });

        $(previous).trigger(hiddenEvent);
        $(_this20._element).trigger(shownEvent);
      };

      if (target) {
        this._activate(target, target.parentNode, complete);
      } else {
        complete();
      }
    };

    Tab.prototype.dispose = function dispose() {
      $.removeClass(this._element, DATA_KEY);
      this._element = null;
    };

    // private

    Tab.prototype._activate = function _activate(element, container, callback) {
      var _this21 = this;

      var active = $(container).find(Selector.ACTIVE_CHILD)[0];
      var isTransitioning = callback && Util.supportsTransitionEnd() && (active && $(active).hasClass(ClassName.FADE) || Boolean($(container).find(Selector.FADE_CHILD)[0]));

      var complete = function complete() {
        return _this21._transitionComplete(element, active, isTransitioning, callback);
      };

      if (active && isTransitioning) {
        $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
      } else {
        complete();
      }

      if (active) {
        $(active).removeClass(ClassName.SHOW);
      }
    };

    Tab.prototype._transitionComplete = function _transitionComplete(element, active, isTransitioning, callback) {
      if (active) {
        $(active).removeClass(ClassName.ACTIVE);

        var dropdownChild = $(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];

        if (dropdownChild) {
          $(dropdownChild).removeClass(ClassName.ACTIVE);
        }

        active.setAttribute('aria-expanded', false);
      }

      $(element).addClass(ClassName.ACTIVE);
      element.setAttribute('aria-expanded', true);

      if (isTransitioning) {
        Util.reflow(element);
        $(element).addClass(ClassName.SHOW);
      } else {
        $(element).removeClass(ClassName.FADE);
      }

      if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {

        var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];
        if (dropdownElement) {
          $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);
        }

        element.setAttribute('aria-expanded', true);
      }

      if (callback) {
        callback();
      }
    };

    // static

    Tab._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY);

        if (!data) {
          data = new Tab(this);
          $this.data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config]();
        }
      });
    };

    _createClass(Tab, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }]);

    return Tab;
  }();

  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    event.preventDefault();
    Tab._jQueryInterface.call($(this), 'show');
  });

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Tab._jQueryInterface;
  $.fn[NAME].Constructor = Tab;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Tab._jQueryInterface;
  };

  return Tab;
}(jQuery);

/* global Tether */

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Tooltip = function ($) {

  /**
   * Check for Tether dependency
   * Tether - http://tether.io/
   */
  if (typeof Tether === 'undefined') {
    throw new Error('Bootstrap tooltips require Tether (http://tether.io/)');
  }

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'tooltip';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.tooltip';
  var EVENT_KEY = '.' + DATA_KEY;
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 150;
  var CLASS_PREFIX = 'bs-tether';

  var Default = {
    animation: true,
    template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    selector: false,
    placement: 'top',
    offset: '0 0',
    constraints: [],
    container: false
  };

  var DefaultType = {
    animation: 'boolean',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string',
    delay: '(number|object)',
    html: 'boolean',
    selector: '(string|boolean)',
    placement: '(string|function)',
    offset: 'string',
    constraints: 'array',
    container: '(string|element|boolean)'
  };

  var AttachmentMap = {
    TOP: 'bottom center',
    RIGHT: 'middle left',
    BOTTOM: 'top center',
    LEFT: 'middle right'
  };

  var HoverState = {
    SHOW: 'show',
    OUT: 'out'
  };

  var Event = {
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    INSERTED: 'inserted' + EVENT_KEY,
    CLICK: 'click' + EVENT_KEY,
    FOCUSIN: 'focusin' + EVENT_KEY,
    FOCUSOUT: 'focusout' + EVENT_KEY,
    MOUSEENTER: 'mouseenter' + EVENT_KEY,
    MOUSELEAVE: 'mouseleave' + EVENT_KEY
  };

  var ClassName = {
    FADE: 'fade',
    SHOW: 'show'
  };

  var Selector = {
    TOOLTIP: '.tooltip',
    TOOLTIP_INNER: '.tooltip-inner'
  };

  var TetherClass = {
    element: false,
    enabled: false
  };

  var Trigger = {
    HOVER: 'hover',
    FOCUS: 'focus',
    CLICK: 'click',
    MANUAL: 'manual'
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tooltip = function () {
    function Tooltip(element, config) {
      _classCallCheck(this, Tooltip);

      // private
      this._isEnabled = true;
      this._timeout = 0;
      this._hoverState = '';
      this._activeTrigger = {};
      this._isTransitioning = false;
      this._tether = null;

      // protected
      this.element = element;
      this.config = this._getConfig(config);
      this.tip = null;

      this._setListeners();
    }

    // getters

    // public

    Tooltip.prototype.enable = function enable() {
      this._isEnabled = true;
    };

    Tooltip.prototype.disable = function disable() {
      this._isEnabled = false;
    };

    Tooltip.prototype.toggleEnabled = function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    };

    Tooltip.prototype.toggle = function toggle(event) {
      if (event) {
        var dataKey = this.constructor.DATA_KEY;
        var context = $(event.currentTarget).data(dataKey);

        if (!context) {
          context = new this.constructor(event.currentTarget, this._getDelegateConfig());
          $(event.currentTarget).data(dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {

        if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {
          this._leave(null, this);
          return;
        }

        this._enter(null, this);
      }
    };

    Tooltip.prototype.dispose = function dispose() {
      clearTimeout(this._timeout);

      this.cleanupTether();

      $.removeData(this.element, this.constructor.DATA_KEY);

      $(this.element).off(this.constructor.EVENT_KEY);
      $(this.element).closest('.modal').off('hide.bs.modal');

      if (this.tip) {
        $(this.tip).remove();
      }

      this._isEnabled = null;
      this._timeout = null;
      this._hoverState = null;
      this._activeTrigger = null;
      this._tether = null;

      this.element = null;
      this.config = null;
      this.tip = null;
    };

    Tooltip.prototype.show = function show() {
      var _this22 = this;

      if ($(this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements');
      }

      var showEvent = $.Event(this.constructor.Event.SHOW);
      if (this.isWithContent() && this._isEnabled) {
        if (this._isTransitioning) {
          throw new Error('Tooltip is transitioning');
        }
        $(this.element).trigger(showEvent);

        var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);

        if (showEvent.isDefaultPrevented() || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = Util.getUID(this.constructor.NAME);

        tip.setAttribute('id', tipId);
        this.element.setAttribute('aria-describedby', tipId);

        this.setContent();

        if (this.config.animation) {
          $(tip).addClass(ClassName.FADE);
        }

        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement);

        var container = this.config.container === false ? document.body : $(this.config.container);

        $(tip).data(this.constructor.DATA_KEY, this).appendTo(container);

        $(this.element).trigger(this.constructor.Event.INSERTED);

        this._tether = new Tether({
          attachment: attachment,
          element: tip,
          target: this.element,
          classes: TetherClass,
          classPrefix: CLASS_PREFIX,
          offset: this.config.offset,
          constraints: this.config.constraints,
          addTargetClasses: false
        });

        Util.reflow(tip);
        this._tether.position();

        $(tip).addClass(ClassName.SHOW);

        var complete = function complete() {
          var prevHoverState = _this22._hoverState;
          _this22._hoverState = null;
          _this22._isTransitioning = false;

          $(_this22.element).trigger(_this22.constructor.Event.SHOWN);

          if (prevHoverState === HoverState.OUT) {
            _this22._leave(null, _this22);
          }
        };

        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {
          this._isTransitioning = true;
          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);
          return;
        }

        complete();
      }
    };

    Tooltip.prototype.hide = function hide(callback) {
      var _this23 = this;

      var tip = this.getTipElement();
      var hideEvent = $.Event(this.constructor.Event.HIDE);
      if (this._isTransitioning) {
        throw new Error('Tooltip is transitioning');
      }
      var complete = function complete() {
        if (_this23._hoverState !== HoverState.SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this23.element.removeAttribute('aria-describedby');
        $(_this23.element).trigger(_this23.constructor.Event.HIDDEN);
        _this23._isTransitioning = false;
        _this23.cleanupTether();

        if (callback) {
          callback();
        }
      };

      $(this.element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      $(tip).removeClass(ClassName.SHOW);

      this._activeTrigger[Trigger.CLICK] = false;
      this._activeTrigger[Trigger.FOCUS] = false;
      this._activeTrigger[Trigger.HOVER] = false;

      if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {
        this._isTransitioning = true;
        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
      } else {
        complete();
      }

      this._hoverState = '';
    };

    // protected

    Tooltip.prototype.isWithContent = function isWithContent() {
      return Boolean(this.getTitle());
    };

    Tooltip.prototype.getTipElement = function getTipElement() {
      return this.tip = this.tip || $(this.config.template)[0];
    };

    Tooltip.prototype.setContent = function setContent() {
      var $tip = $(this.getTipElement());

      this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());

      $tip.removeClass(ClassName.FADE + ' ' + ClassName.SHOW);

      this.cleanupTether();
    };

    Tooltip.prototype.setElementContent = function setElementContent($element, content) {
      var html = this.config.html;
      if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && (content.nodeType || content.jquery)) {
        // content is a DOM node or a jQuery
        if (html) {
          if (!$(content).parent().is($element)) {
            $element.empty().append(content);
          }
        } else {
          $element.text($(content).text());
        }
      } else {
        $element[html ? 'html' : 'text'](content);
      }
    };

    Tooltip.prototype.getTitle = function getTitle() {
      var title = this.element.getAttribute('data-original-title');

      if (!title) {
        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
      }

      return title;
    };

    Tooltip.prototype.cleanupTether = function cleanupTether() {
      if (this._tether) {
        this._tether.destroy();
      }
    };

    // private

    Tooltip.prototype._getAttachment = function _getAttachment(placement) {
      return AttachmentMap[placement.toUpperCase()];
    };

    Tooltip.prototype._setListeners = function _setListeners() {
      var _this24 = this;

      var triggers = this.config.trigger.split(' ');

      triggers.forEach(function (trigger) {
        if (trigger === 'click') {
          $(_this24.element).on(_this24.constructor.Event.CLICK, _this24.config.selector, function (event) {
            return _this24.toggle(event);
          });
        } else if (trigger !== Trigger.MANUAL) {
          var eventIn = trigger === Trigger.HOVER ? _this24.constructor.Event.MOUSEENTER : _this24.constructor.Event.FOCUSIN;
          var eventOut = trigger === Trigger.HOVER ? _this24.constructor.Event.MOUSELEAVE : _this24.constructor.Event.FOCUSOUT;

          $(_this24.element).on(eventIn, _this24.config.selector, function (event) {
            return _this24._enter(event);
          }).on(eventOut, _this24.config.selector, function (event) {
            return _this24._leave(event);
          });
        }

        $(_this24.element).closest('.modal').on('hide.bs.modal', function () {
          return _this24.hide();
        });
      });

      if (this.config.selector) {
        this.config = $.extend({}, this.config, {
          trigger: 'manual',
          selector: ''
        });
      } else {
        this._fixTitle();
      }
    };

    Tooltip.prototype._fixTitle = function _fixTitle() {
      var titleType = _typeof(this.element.getAttribute('data-original-title'));
      if (this.element.getAttribute('title') || titleType !== 'string') {
        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
        this.element.setAttribute('title', '');
      }
    };

    Tooltip.prototype._enter = function _enter(event, context) {
      var dataKey = this.constructor.DATA_KEY;

      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;
      }

      if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {
        context._hoverState = HoverState.SHOW;
        return;
      }

      clearTimeout(context._timeout);

      context._hoverState = HoverState.SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HoverState.SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    };

    Tooltip.prototype._leave = function _leave(event, context) {
      var dataKey = this.constructor.DATA_KEY;

      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);

      context._hoverState = HoverState.OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HoverState.OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    };

    Tooltip.prototype._isWithActiveTrigger = function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    };

    Tooltip.prototype._getConfig = function _getConfig(config) {
      config = $.extend({}, this.constructor.Default, $(this.element).data(), config);

      if (config.delay && typeof config.delay === 'number') {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);

      return config;
    };

    Tooltip.prototype._getDelegateConfig = function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var key in this.config) {
          if (this.constructor.Default[key] !== this.config[key]) {
            config[key] = this.config[key];
          }
        }
      }

      return config;
    };

    // static

    Tooltip._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);
        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Tooltip(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config]();
        }
      });
    };

    _createClass(Tooltip, null, [{
      key: 'VERSION',
      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }, {
      key: 'NAME',
      get: function get() {
        return NAME;
      }
    }, {
      key: 'DATA_KEY',
      get: function get() {
        return DATA_KEY;
      }
    }, {
      key: 'Event',
      get: function get() {
        return Event;
      }
    }, {
      key: 'EVENT_KEY',
      get: function get() {
        return EVENT_KEY;
      }
    }, {
      key: 'DefaultType',
      get: function get() {
        return DefaultType;
      }
    }]);

    return Tooltip;
  }();

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Tooltip._jQueryInterface;
  $.fn[NAME].Constructor = Tooltip;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Tooltip._jQueryInterface;
  };

  return Tooltip;
}(jQuery);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Popover = function ($) {

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'popover';
  var VERSION = '4.0.0-alpha.6';
  var DATA_KEY = 'bs.popover';
  var EVENT_KEY = '.' + DATA_KEY;
  var JQUERY_NO_CONFLICT = $.fn[NAME];

  var Default = $.extend({}, Tooltip.Default, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip">' + '<h3 class="popover-title"></h3>' + '<div class="popover-content"></div></div>'
  });

  var DefaultType = $.extend({}, Tooltip.DefaultType, {
    content: '(string|element|function)'
  });

  var ClassName = {
    FADE: 'fade',
    SHOW: 'show'
  };

  var Selector = {
    TITLE: '.popover-title',
    CONTENT: '.popover-content'
  };

  var Event = {
    HIDE: 'hide' + EVENT_KEY,
    HIDDEN: 'hidden' + EVENT_KEY,
    SHOW: 'show' + EVENT_KEY,
    SHOWN: 'shown' + EVENT_KEY,
    INSERTED: 'inserted' + EVENT_KEY,
    CLICK: 'click' + EVENT_KEY,
    FOCUSIN: 'focusin' + EVENT_KEY,
    FOCUSOUT: 'focusout' + EVENT_KEY,
    MOUSEENTER: 'mouseenter' + EVENT_KEY,
    MOUSELEAVE: 'mouseleave' + EVENT_KEY
  };

  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Popover = function (_Tooltip) {
    _inherits(Popover, _Tooltip);

    function Popover() {
      _classCallCheck(this, Popover);

      return _possibleConstructorReturn(this, _Tooltip.apply(this, arguments));
    }

    // overrides

    Popover.prototype.isWithContent = function isWithContent() {
      return this.getTitle() || this._getContent();
    };

    Popover.prototype.getTipElement = function getTipElement() {
      return this.tip = this.tip || $(this.config.template)[0];
    };

    Popover.prototype.setContent = function setContent() {
      var $tip = $(this.getTipElement());

      // we use append for html objects to maintain js events
      this.setElementContent($tip.find(Selector.TITLE), this.getTitle());
      this.setElementContent($tip.find(Selector.CONTENT), this._getContent());

      $tip.removeClass(ClassName.FADE + ' ' + ClassName.SHOW);

      this.cleanupTether();
    };

    // private

    Popover.prototype._getContent = function _getContent() {
      return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);
    };

    // static

    Popover._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);
        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;

        if (!data && /destroy|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Popover(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (data[config] === undefined) {
            throw new Error('No method named "' + config + '"');
          }
          data[config]();
        }
      });
    };

    _createClass(Popover, null, [{
      key: 'VERSION',


      // getters

      get: function get() {
        return VERSION;
      }
    }, {
      key: 'Default',
      get: function get() {
        return Default;
      }
    }, {
      key: 'NAME',
      get: function get() {
        return NAME;
      }
    }, {
      key: 'DATA_KEY',
      get: function get() {
        return DATA_KEY;
      }
    }, {
      key: 'Event',
      get: function get() {
        return Event;
      }
    }, {
      key: 'EVENT_KEY',
      get: function get() {
        return EVENT_KEY;
      }
    }, {
      key: 'DefaultType',
      get: function get() {
        return DefaultType;
      }
    }]);

    return Popover;
  }(Tooltip);

  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Popover._jQueryInterface;
  $.fn[NAME].Constructor = Popover;
  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Popover._jQueryInterface;
  };

  return Popover;
}(jQuery);

}();

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(47);

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var bind = __webpack_require__(28);
var Axios = __webpack_require__(49);
var defaults = __webpack_require__(19);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(32);
axios.CancelToken = __webpack_require__(63);
axios.isCancel = __webpack_require__(31);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(64);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 48 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(19);
var utils = __webpack_require__(6);
var InterceptorManager = __webpack_require__(58);
var dispatchRequest = __webpack_require__(59);
var isAbsoluteURL = __webpack_require__(61);
var combineURLs = __webpack_require__(62);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(30);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var transformData = __webpack_require__(60);
var isCancel = __webpack_require__(31);
var defaults = __webpack_require__(19);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(32);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 65 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(67);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 67 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export VueCharts */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BaseCharts__ = __webpack_require__(470);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["a"]; });
/* unused harmony reexport HorizontalBar */
/* unused harmony reexport Doughnut */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["e"]; });
/* unused harmony reexport Pie */
/* unused harmony reexport PolarArea */
/* unused harmony reexport Radar */
/* unused harmony reexport Bubble */
/* unused harmony reexport Scatter */
/* unused harmony reexport mixins */
/* unused harmony reexport generateChart */


var VueCharts = {
  Bar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["a" /* Bar */],
  HorizontalBar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["d" /* HorizontalBar */],
  Doughnut: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["c" /* Doughnut */],
  Line: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["e" /* Line */],
  Pie: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["f" /* Pie */],
  PolarArea: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["g" /* PolarArea */],
  Radar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["h" /* Radar */],
  Bubble: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["b" /* Bubble */],
  Scatter: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["i" /* Scatter */],
  mixins: __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__["a" /* default */],
  generateChart: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__["j" /* generateChart */],
  render: function render() {
    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');
  }
};
/* unused harmony default export */ var _unused_webpack_default_export = (VueCharts);


/***/ }),
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(458);


/***/ }),
/* 458 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__views_app_vue__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__views_app_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__views_app_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store_store_js__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__routes__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vee_validate__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_sweetalert__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_sweetalert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_sweetalert__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__packages_Auth__ = __webpack_require__(646);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__packages_Config__ = __webpack_require__(647);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_laravel_echo__ = __webpack_require__(648);
__webpack_require__(43);









/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */


window.Pusher = __webpack_require__(221);

window.Echo = new __WEBPACK_IMPORTED_MODULE_8_laravel_echo__["a" /* default */]({
    broadcaster: 'pusher',
    key: '2e30de5673ae7cbb955c',
    cluster: 'eu'
});

__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_6__packages_Auth__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_7__packages_Config__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_4_vee_validate__["a" /* default */]);

window.onbeforeunload = function () {
    return "Data will be lost if you leave the page, are you sure?";
};

new __WEBPACK_IMPORTED_MODULE_0_vue___default.a({
    el: '#administrator',
    store: __WEBPACK_IMPORTED_MODULE_2__store_store_js__["a" /* default */],
    router: __WEBPACK_IMPORTED_MODULE_3__routes__["a" /* default */],
    swal: __WEBPACK_IMPORTED_MODULE_5_sweetalert___default.a,
    render: function render(h) {
        return h(__WEBPACK_IMPORTED_MODULE_1__views_app_vue___default.a);
    }
});

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(460)
/* template */
var __vue_template__ = __webpack_require__(464)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/app.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6a7b3c04", Component.options)
  } else {
    hotAPI.reload("data-v-6a7b3c04", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_upload_modal__ = __webpack_require__(461);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_upload_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_upload_modal__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dropdown_movies: "",
      dropdown_series: "",
      dropdown_settings: "",
      permission: 0,
      mobile_sidebar: false,
      show_alert_services: false,
      data_services_error: [],
      notif_report: 0,
      notif_support: 0
    };
  },


  components: {
    "upload-modal": __WEBPACK_IMPORTED_MODULE_0__components_upload_modal___default.a
  },

  created: function created() {
    var _this = this;

    axios.get("/api/admin/check/permission").then(function (response) {
      if (response.status === 200) {
        _this.$auth.setDetails(response.data.data.email, response.data.data.name, response.data.data.image, response.data.data.role_id);

        _this.permission = response.data.data.role_id;
      }
    });

    // Check services
    axios.get("/api/admin/get/checkservices").then(function (response) {
      if (!response.data.ffmpeg.status || !response.data.braintree.status || !response.data.tmdb.status) {
        _this.show_alert_services = true;
        _this.data_services_error = response.data;
      }
      _this.notif_report = response.data.notification.reports;
      _this.notif_support = response.data.notification.supports;
    });
  },


  methods: {
    SHOW_DROPDOWN: function SHOW_DROPDOWN(x, t) {
      if (x == "movies") {
        if (this.dropdown_movies == x) {
          this.dropdown_movies = false;
        } else {
          this.dropdown_movies = x;
        }
      } else if (x == "series") {
        if (this.dropdown_series == x) {
          this.dropdown_series = false;
        } else {
          this.dropdown_series = x;
        }
      } else {
        if (this.dropdown_settings == x) {
          this.dropdown_settings = false;
        } else {
          this.dropdown_settings = x;
        }
      }
    },
    LOGOUT: function LOGOUT() {
      axios.post("admin/logout").then(function (res) {
        localStorage.removeItem("_a");
        location.reload();
      });
    }
  }
});

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(462)
/* template */
var __vue_template__ = __webpack_require__(463)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/components/upload-modal.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2d0d4dd2", Component.options)
  } else {
    hotAPI.reload("data-v-2d0d4dd2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 462 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            toggle: false,
            showComponent: false
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        uploadData: function uploadData(state) {
            return state.event.data;
        }
    }),

    watch: {
        uploadData: function uploadData() {
            this.showComponent = true;
            this.toggle = true;
        }
    },

    methods: {
        SHOW: function SHOW() {
            this.toggle = !this.toggle;
        }
    }

});

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.showComponent
    ? _c(
        "div",
        {
          staticClass: "col-12 col-md-4 upload-modal",
          class: { show: _vm.toggle, hide: !_vm.toggle }
        },
        [
          _vm.toggle
            ? _c("div", { staticClass: "hide", on: { click: _vm.SHOW } })
            : _vm._e(),
          _vm._v(" "),
          !_vm.toggle
            ? _c("div", { staticClass: "show", on: { click: _vm.SHOW } })
            : _vm._e(),
          _vm._v(" "),
          _c("span", { staticClass: "progress-bar-animated" }),
          _vm._v(" "),
          _vm._l(_vm.uploadData, function(item, index) {
            return _vm.uploadData.length > 0
              ? _c("div", { key: index, staticClass: "col-12" }, [
                  _c("div", { staticClass: "desc-upload" }, [
                    _c("h4", [_vm._v("ID: " + _vm._s(item.id))]),
                    _vm._v(" "),
                    _c("hr")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "content" }, [
                    item.api.show
                      ? _c("div", { staticClass: "api mt-1" }, [
                          _vm._m(0, true),
                          _vm._v(" "),
                          _c("div", { staticClass: "progress mt-4" }, [
                            item.api.progress !== 100
                              ? _c("div", [
                                  _c("i", { attrs: { id: "btn-progress" } }),
                                  _vm._v(" Prepare\n                    ")
                                ])
                              : _c("div", { staticClass: "m-2" }, [
                                  _c("strong", [_vm._v("Finished")])
                                ])
                          ]),
                          _vm._v(" "),
                          item.api.error_message !== null
                            ? _c("p", { staticClass: "is-danger" }, [
                                _vm._v(_vm._s(item.api.error_message))
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.api.success_message !== null
                            ? _c("p", { staticClass: "is-success" }, [
                                _vm._v(_vm._s(item.api.success_message))
                              ])
                            : _vm._e()
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    item.upload.show
                      ? _c("div", { staticClass: "upload mt-1" }, [
                          _vm._m(1, true),
                          _vm._v(" "),
                          _c("div", { staticClass: "progress mt-4" }, [
                            item.upload.progress < 97
                              ? _c(
                                  "div",
                                  {
                                    staticClass: "progress-bar",
                                    style: {
                                      width: item.upload.progress + "%"
                                    },
                                    attrs: {
                                      role: "progressbar",
                                      "aria-valuenow": item.upload.progress,
                                      "aria-valuemin": "0",
                                      "aria-valuemax": "100"
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "\n                        " +
                                        _vm._s(item.upload.progress) +
                                        "\n                    "
                                    )
                                  ]
                                )
                              : _c("div", { staticClass: "m-2" }, [
                                  !item.upload.success_message
                                    ? _c("i", { attrs: { id: "btn-progress" } })
                                    : _vm._e(),
                                  _vm._v(
                                    " Transcoding & Uploading\n                        "
                                  ),
                                  item.upload.success_message
                                    ? _c("strong", [_vm._v("Finished")])
                                    : _vm._e()
                                ])
                          ]),
                          _vm._v(" "),
                          _c("p", { staticClass: "progress-status" }, [
                            _vm._v(_vm._s(item.upload.message))
                          ]),
                          _vm._v(" "),
                          item.upload.error_message !== null
                            ? _c("p", { staticClass: "is-danger" }, [
                                _vm._v(_vm._s(item.upload.error_message))
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.upload.success_message !== null
                            ? _c("p", { staticClass: "is-success" }, [
                                _vm._v(
                                  "\n                    " +
                                    _vm._s(item.upload.success_message)
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _c("hr")
                        ])
                      : _vm._e()
                  ])
                ])
              : _c("div", { staticClass: "empty" }, [
                  _c("h3", [_vm._v("There is no upload in process")])
                ])
          })
        ],
        2
      )
    : _vm._e()
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "row" }, [
      _c("div", { staticClass: "svg api-tmdb-upload-icon ml-3" }),
      _vm._v(" "),
      _c("div", { staticClass: "title" }, [
        _c("h6", [_c("strong", [_vm._v("Get Details From TMBD API")])])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "row" }, [
      _c("div", { staticClass: "svg upload-video-icon ml-3" }),
      _vm._v(" "),
      _c("div", { staticClass: "title" }, [
        _c("h6", [_c("strong", [_vm._v("Upload Video")])])
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2d0d4dd2", module.exports)
  }
}

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "app" },
    [
      _vm.show_alert_services
        ? _c(
            "div",
            {
              staticClass: "col-12 col-sm-4 pull-right",
              staticStyle: {
                "z-index": "10000",
                position: "fixed",
                right: "0",
                bottom: "0px",
                width: "100%"
              }
            },
            _vm._l(_vm.data_services_error, function(item, index) {
              return !item.status
                ? _c(
                    "div",
                    {
                      key: index,
                      staticClass: "alert alert-warning",
                      attrs: { role: "alert" }
                    },
                    [
                      _vm._v(
                        "\n            " + _vm._s(item.message) + "\n        "
                      )
                    ]
                  )
                : _vm._e()
            }),
            0
          )
        : _vm._e(),
      _vm._v(" "),
      _c("div", { staticClass: "custom-navbar fixed-top" }, [
        _c("div", { staticClass: "navbar-content" }, [
          _c("div", {
            staticClass: "hidden-md-up collapse",
            on: {
              click: function($event) {
                _vm.mobile_sidebar = !_vm.mobile_sidebar
              }
            }
          }),
          _vm._v(" "),
          _vm._m(0),
          _vm._v(" "),
          _c("div", { staticClass: "profile float-right" }, [
            _c("div", { staticClass: "dropdown" }, [
              _c(
                "button",
                {
                  staticClass: "dropdown-toggle",
                  attrs: {
                    type: "button",
                    id: "dropdownNavbar",
                    "data-toggle": "dropdown",
                    "aria-haspopup": "true",
                    "aria-expanded": "false"
                  }
                },
                [
                  _c("img", {
                    attrs: {
                      src: _vm.$auth.getUserInfo("image"),
                      onError:
                        "this.onerror=null;this.src='/images/avatar.png';",
                      width: "23px"
                    }
                  }),
                  _vm._v(
                    "\n                            " +
                      _vm._s(_vm.$auth.getUserInfo("name")) +
                      "\n                        "
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "dropdown-menu",
                  attrs: { "aria-labelledby": "dropdownNavbar" }
                },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "dropdown-item",
                      attrs: { to: { name: "profile" } }
                    },
                    [_vm._v("Setting")]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "dropdown-item", on: { click: _vm.LOGOUT } },
                    [_vm._v("Logout")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _vm.mobile_sidebar
            ? _c(
                "div",
                {
                  staticClass: "hidden-md-up",
                  staticStyle: { width: "100%", background: "#fff" },
                  attrs: { id: "side-navbar" }
                },
                [
                  _c("div", { attrs: { id: "content" } }, [
                    _c(
                      "ul",
                      {
                        staticClass: "list-unstyled",
                        attrs: { id: "list-menu" }
                      },
                      [
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "dashboard" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src:
                                      "/themes/default/img/admin/dashboard.svg",
                                    alt: "dashboard",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Dashboard")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("li", [
                          _c("div", { staticClass: "c-dropdown" }, [
                            _c(
                              "div",
                              {
                                staticClass: "ref-dropdown",
                                on: {
                                  click: function($event) {
                                    return _vm.SHOW_DROPDOWN("movies")
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/movie.svg",
                                    alt: "movie",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Movies")]),
                                _vm._v(" "),
                                _vm.dropdown_movies == "movies"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-up"
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.dropdown_movies != "movies"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-down"
                                    })
                                  : _vm._e()
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "c-dropdown-animation" },
                              [
                                _c(
                                  "transition",
                                  { attrs: { name: "menu-popover" } },
                                  [
                                    _c(
                                      "div",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value:
                                              _vm.dropdown_movies == "movies",
                                            expression:
                                              "dropdown_movies == 'movies'"
                                          }
                                        ],
                                        staticClass: "c-dropdown-content"
                                      },
                                      [
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "movies-manage" }
                                                }
                                              },
                                              [_vm._v("Movies Manage")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "movie-api" }
                                                }
                                              },
                                              [_vm._v("API Upload")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "movie-custom" }
                                                }
                                              },
                                              [_vm._v("Custom Upload")]
                                            )
                                          ],
                                          1
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ],
                              1
                            )
                          ])
                        ]),
                        _vm._v(" "),
                        _c("li", [
                          _c("div", { staticClass: "c-dropdown" }, [
                            _c(
                              "div",
                              {
                                staticClass: "ref-dropdown",
                                on: {
                                  click: function($event) {
                                    return _vm.SHOW_DROPDOWN("series")
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/series.svg",
                                    alt: "series",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Tv Show")]),
                                _vm._v(" "),
                                _vm.dropdown_series == "series"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-up"
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.dropdown_series != "series"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-down"
                                    })
                                  : _vm._e()
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "c-dropdown-animation" },
                              [
                                _c(
                                  "transition",
                                  { attrs: { name: "menu-popover" } },
                                  [
                                    _c(
                                      "div",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value:
                                              _vm.dropdown_series == "series",
                                            expression:
                                              "dropdown_series == 'series'"
                                          }
                                        ],
                                        staticClass: "c-dropdown-content"
                                      },
                                      [
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "series-manage" }
                                                }
                                              },
                                              [_vm._v("Series Manage")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "series-api" }
                                                }
                                              },
                                              [_vm._v("Series API Upload")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "series-custom" }
                                                }
                                              },
                                              [_vm._v("Series Custom Upload")]
                                            )
                                          ],
                                          1
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ],
                              1
                            )
                          ])
                        ]),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "categories-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src:
                                      "/themes/default/img/admin/categories.svg",
                                    alt: "Categories",
                                    width: "20px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Categories")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "tv-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/tv.svg",
                                    alt: "tv",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Live Streaming")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "top-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/top.svg",
                                    alt: "top",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Top Slide")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "ads-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/ads.svg",
                                    alt: "advertisement",
                                    width: "20px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("VAST/Google Ads")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "actors-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/actors.svg",
                                    alt: "actors",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Actors")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "report-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/report.svg",
                                    alt: "report",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Reports")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "users-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/users.svg",
                                    alt: "users",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Customers")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "support-manage" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src:
                                      "/themes/default/img/admin/support.svg",
                                    alt: "support",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Support")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          [
                            _c(
                              "router-link",
                              {
                                attrs: {
                                  to: {
                                    name: "file-manager",
                                    params: { link: "root" }
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/folder.svg",
                                    alt: "folder",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("File Manager")])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _vm.permission === 1
                          ? _c("li", [
                              _c("div", { staticClass: "c-dropdown" }, [
                                _c(
                                  "div",
                                  {
                                    staticClass: "ref-dropdown",
                                    on: {
                                      click: function($event) {
                                        return _vm.SHOW_DROPDOWN("settings")
                                      }
                                    }
                                  },
                                  [
                                    _c("img", {
                                      attrs: {
                                        src:
                                          "/themes/default/img/admin/settings.svg",
                                        alt: "settings",
                                        width: "23px"
                                      }
                                    }),
                                    _vm._v(" "),
                                    _c("strong", [_vm._v("Settings")]),
                                    _vm._v(" "),
                                    _vm.dropdown_settings == "settings"
                                      ? _c("span", {
                                          staticClass: "c-dropdown-icon-up"
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _vm.dropdown_settings != "settings"
                                      ? _c("span", {
                                          staticClass: "c-dropdown-icon-down"
                                        })
                                      : _vm._e()
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "div",
                                  { staticClass: "c-dropdown-animation" },
                                  [
                                    _c(
                                      "transition",
                                      { attrs: { name: "menu-popover" } },
                                      [
                                        _c(
                                          "div",
                                          {
                                            directives: [
                                              {
                                                name: "show",
                                                rawName: "v-show",
                                                value:
                                                  _vm.dropdown_settings ==
                                                  "settings",
                                                expression:
                                                  "dropdown_settings == 'settings'"
                                              }
                                            ],
                                            staticClass: "c-dropdown-content"
                                          },
                                          [
                                            _c(
                                              "div",
                                              {
                                                staticClass: "c-dropdown-item"
                                              },
                                              [
                                                _c(
                                                  "router-link",
                                                  {
                                                    attrs: {
                                                      to: { name: "themes" }
                                                    }
                                                  },
                                                  [_vm._v("Appearance")]
                                                )
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "div",
                                              {
                                                staticClass: "c-dropdown-item"
                                              },
                                              [
                                                _c(
                                                  "router-link",
                                                  {
                                                    attrs: {
                                                      to: {
                                                        name:
                                                          "admins-users-manage"
                                                      }
                                                    }
                                                  },
                                                  [
                                                    _vm._v(
                                                      "Administrator Users"
                                                    )
                                                  ]
                                                )
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "div",
                                              {
                                                staticClass: "c-dropdown-item"
                                              },
                                              [
                                                _c(
                                                  "router-link",
                                                  {
                                                    attrs: {
                                                      to: {
                                                        name: "tmdb-manage"
                                                      }
                                                    }
                                                  },
                                                  [_vm._v("TMDB API")]
                                                )
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "div",
                                              {
                                                staticClass: "c-dropdown-item"
                                              },
                                              [
                                                _c(
                                                  "router-link",
                                                  {
                                                    attrs: {
                                                      to: {
                                                        name:
                                                          "transcoder-watermark"
                                                      }
                                                    }
                                                  },
                                                  [_vm._v("FFmpeg Setting")]
                                                )
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "div",
                                              {
                                                staticClass: "c-dropdown-item"
                                              },
                                              [
                                                _c(
                                                  "router-link",
                                                  {
                                                    attrs: {
                                                      to: {
                                                        name:
                                                          "braintree-subscribe"
                                                      }
                                                    }
                                                  },
                                                  [_vm._v("Braintree Settings")]
                                                )
                                              ],
                                              1
                                            )
                                          ]
                                        )
                                      ]
                                    )
                                  ],
                                  1
                                )
                              ])
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c(
                          "li",
                          { staticClass: "help" },
                          [
                            _c(
                              "router-link",
                              { attrs: { to: { name: "help" } } },
                              [
                                _c("img", {
                                  attrs: {
                                    src: "/themes/default/img/admin/info.svg",
                                    alt: "info",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Help")])
                              ]
                            )
                          ],
                          1
                        )
                      ]
                    )
                  ])
                ]
              )
            : _vm._e()
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "mt-5" }, [
        _c("div", { staticClass: "row" }, [
          _c(
            "div",
            {
              staticClass: "col-md-3 col-xl-2 hidden-sm-down",
              attrs: { id: "side-navbar" }
            },
            [
              _c("div", { attrs: { id: "content" } }, [
                _c(
                  "ul",
                  { staticClass: "list-unstyled", attrs: { id: "list-menu" } },
                  [
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "dashboard" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/dashboard.svg",
                                alt: "dashboard",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Dashboard")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("li", [
                      _c("div", { staticClass: "c-dropdown" }, [
                        _c(
                          "div",
                          {
                            staticClass: "ref-dropdown",
                            on: {
                              click: function($event) {
                                return _vm.SHOW_DROPDOWN("movies")
                              }
                            }
                          },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/movie.svg",
                                alt: "movie",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Movies")]),
                            _vm._v(" "),
                            _vm.dropdown_movies == "movies"
                              ? _c("span", {
                                  staticClass: "c-dropdown-icon-up"
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.dropdown_movies != "movies"
                              ? _c("span", {
                                  staticClass: "c-dropdown-icon-down"
                                })
                              : _vm._e()
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "c-dropdown-animation" },
                          [
                            _c(
                              "transition",
                              { attrs: { name: "menu-popover" } },
                              [
                                _c(
                                  "div",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: _vm.dropdown_movies == "movies",
                                        expression:
                                          "dropdown_movies == 'movies'"
                                      }
                                    ],
                                    staticClass: "c-dropdown-content"
                                  },
                                  [
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: {
                                              to: { name: "movies-manage" }
                                            }
                                          },
                                          [_vm._v("Movies Manage")]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: { to: { name: "movie-api" } }
                                          },
                                          [_vm._v("API Upload")]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: {
                                              to: { name: "movie-custom" }
                                            }
                                          },
                                          [_vm._v("Custom Upload")]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              ]
                            )
                          ],
                          1
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("li", [
                      _c("div", { staticClass: "c-dropdown" }, [
                        _c(
                          "div",
                          {
                            staticClass: "ref-dropdown",
                            on: {
                              click: function($event) {
                                return _vm.SHOW_DROPDOWN("series")
                              }
                            }
                          },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/series.svg",
                                alt: "series",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Tv Show")]),
                            _vm._v(" "),
                            _vm.dropdown_series == "series"
                              ? _c("span", {
                                  staticClass: "c-dropdown-icon-up"
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.dropdown_series != "series"
                              ? _c("span", {
                                  staticClass: "c-dropdown-icon-down"
                                })
                              : _vm._e()
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "c-dropdown-animation" },
                          [
                            _c(
                              "transition",
                              { attrs: { name: "menu-popover" } },
                              [
                                _c(
                                  "div",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: _vm.dropdown_series == "series",
                                        expression:
                                          "dropdown_series == 'series'"
                                      }
                                    ],
                                    staticClass: "c-dropdown-content"
                                  },
                                  [
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: {
                                              to: { name: "series-manage" }
                                            }
                                          },
                                          [_vm._v("Series Manage")]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: {
                                              to: { name: "series-api" }
                                            }
                                          },
                                          [_vm._v("Series API Upload")]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "div",
                                      { staticClass: "c-dropdown-item" },
                                      [
                                        _c(
                                          "router-link",
                                          {
                                            attrs: {
                                              to: { name: "series-custom" }
                                            }
                                          },
                                          [_vm._v("Series Custom Upload")]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              ]
                            )
                          ],
                          1
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "categories-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/categories.svg",
                                alt: "Categories",
                                width: "20px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Categories")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "tv-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/tv.svg",
                                alt: "tv",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Live Streaming")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "top-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/top.svg",
                                alt: "top",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Top Slide")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "ads-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/ads.svg",
                                alt: "advertisement",
                                width: "20px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("VAST/Google Ads")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "embed-management" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/embed.svg",
                                alt: "embed",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Embed Sites")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "genre-management" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/embed.svg",
                                alt: "embed",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Genre Management")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "actors-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/actors.svg",
                                alt: "actors",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Actors")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "report-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/report.svg",
                                alt: "report",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Reports")]),
                            _vm._v(" "),
                            _vm.notif_report > 0
                              ? _c("div", { staticClass: "notification" }, [
                                  _c("span", [_vm._v(_vm._s(_vm.notif_report))])
                                ])
                              : _vm._e()
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "users-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/users.svg",
                                alt: "users",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Customers")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          { attrs: { to: { name: "support-manage" } } },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/support.svg",
                                alt: "support",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("Support")]),
                            _vm._v(" "),
                            _vm.notif_support > 0
                              ? _c("div", { staticClass: "notification" }, [
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.notif_support))
                                  ])
                                ])
                              : _vm._e()
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "li",
                      [
                        _c(
                          "router-link",
                          {
                            attrs: {
                              to: {
                                name: "file-manager",
                                params: { link: "root" }
                              }
                            }
                          },
                          [
                            _c("img", {
                              attrs: {
                                src: "/themes/default/img/admin/folder.svg",
                                alt: "folder",
                                width: "23px"
                              }
                            }),
                            _vm._v(" "),
                            _c("strong", [_vm._v("File Manager")])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _vm.permission === 1
                      ? _c("li", [
                          _c("div", { staticClass: "c-dropdown" }, [
                            _c(
                              "div",
                              {
                                staticClass: "ref-dropdown",
                                on: {
                                  click: function($event) {
                                    return _vm.SHOW_DROPDOWN("settings")
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  attrs: {
                                    src:
                                      "/themes/default/img/admin/settings.svg",
                                    alt: "settings",
                                    width: "23px"
                                  }
                                }),
                                _vm._v(" "),
                                _c("strong", [_vm._v("Settings")]),
                                _vm._v(" "),
                                _vm.dropdown_settings == "settings"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-up"
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.dropdown_settings != "settings"
                                  ? _c("span", {
                                      staticClass: "c-dropdown-icon-down"
                                    })
                                  : _vm._e()
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "c-dropdown-animation" },
                              [
                                _c(
                                  "transition",
                                  { attrs: { name: "menu-popover" } },
                                  [
                                    _c(
                                      "div",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value:
                                              _vm.dropdown_settings ==
                                              "settings",
                                            expression:
                                              "dropdown_settings == 'settings'"
                                          }
                                        ],
                                        staticClass: "c-dropdown-content"
                                      },
                                      [
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "themes" }
                                                }
                                              },
                                              [_vm._v("Appearance")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: {
                                                    name: "admins-users-manage"
                                                  }
                                                }
                                              },
                                              [_vm._v("Administrator Users")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: { name: "tmdb-manage" }
                                                }
                                              },
                                              [_vm._v("TMDB API")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: {
                                                    name: "transcoder-watermark"
                                                  }
                                                }
                                              },
                                              [_vm._v("FFmpeg Setting")]
                                            )
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          { staticClass: "c-dropdown-item" },
                                          [
                                            _c(
                                              "router-link",
                                              {
                                                attrs: {
                                                  to: {
                                                    name: "braintree-subscribe"
                                                  }
                                                }
                                              },
                                              [_vm._v("Braintree Settings")]
                                            )
                                          ],
                                          1
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ],
                              1
                            )
                          ])
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "li",
                      { staticClass: "help" },
                      [
                        _c("router-link", { attrs: { to: { name: "help" } } }, [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/admin/info.svg",
                              alt: "info",
                              width: "23px"
                            }
                          }),
                          _vm._v(" "),
                          _c("strong", [_vm._v("Help")])
                        ])
                      ],
                      1
                    )
                  ]
                )
              ])
            ]
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "col col-md-9 col-xl-10 offset-md-3 offset-xl-2" },
            [_c("router-view")],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("upload-modal")
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "hidden-sm-down logo" }, [
      _c("img", {
        attrs: { src: "/images/logo_blue.svg", alt: "logo", width: "100%" }
      })
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6a7b3c04", module.exports)
  }
}

/***/ }),
/* 465 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_movies__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modules_series__ = __webpack_require__(632);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modules_channels__ = __webpack_require__(633);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modules_tops__ = __webpack_require__(634);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modules_actors__ = __webpack_require__(635);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modules_reports__ = __webpack_require__(636);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modules_subtitles__ = __webpack_require__(637);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__modules_users__ = __webpack_require__(638);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__modules_admins__ = __webpack_require__(639);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__modules_support__ = __webpack_require__(640);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__modules_categories__ = __webpack_require__(641);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__modules_ads__ = __webpack_require__(642);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__modules_genres__ = __webpack_require__(643);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__modules_production__ = __webpack_require__(644);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__modules_event__ = __webpack_require__(645);



















__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */].Store({
    namespaced: true,
    strict: false,
    modules: {
        movies: __WEBPACK_IMPORTED_MODULE_2__modules_movies__["a" /* default */],
        series: __WEBPACK_IMPORTED_MODULE_3__modules_series__["a" /* default */],
        channels: __WEBPACK_IMPORTED_MODULE_4__modules_channels__["a" /* default */],
        tops: __WEBPACK_IMPORTED_MODULE_5__modules_tops__["a" /* default */],
        actors: __WEBPACK_IMPORTED_MODULE_6__modules_actors__["a" /* default */],
        reports: __WEBPACK_IMPORTED_MODULE_7__modules_reports__["a" /* default */],
        subtitles: __WEBPACK_IMPORTED_MODULE_8__modules_subtitles__["a" /* default */],
        users: __WEBPACK_IMPORTED_MODULE_9__modules_users__["a" /* default */],
        admins: __WEBPACK_IMPORTED_MODULE_10__modules_admins__["a" /* default */],
        support: __WEBPACK_IMPORTED_MODULE_11__modules_support__["a" /* default */],
        categories: __WEBPACK_IMPORTED_MODULE_12__modules_categories__["a" /* default */],
        ads: __WEBPACK_IMPORTED_MODULE_13__modules_ads__["a" /* default */],
        productions: __WEBPACK_IMPORTED_MODULE_15__modules_production__["a" /* default */],
        genres: __WEBPACK_IMPORTED_MODULE_14__modules_genres__["a" /* default */],
        event: __WEBPACK_IMPORTED_MODULE_16__modules_event__["a" /* default */]
    }
}));

/***/ }),
/* 466 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all movies
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_MOVIES: function GET_MOVIES(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/movies').then(function (response) {
                if (response.status === 200) {
                    commit('SET_MOVIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },
        GET_MOVIE: function GET_MOVIE(_ref2, id) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/movie/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_MOVIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Get movies by pagination
         * 
         * @param {*} commit object 
         * @param id int id 
         */

        GET_MOVIES_PAGINATION: function GET_MOVIES_PAGINATION(_ref3, path_url) {
            var commit = _ref3.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_MOVIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete movie
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_MOVIE: function DELETE_MOVIE(_ref4, list) {
            var commit = _ref4.commit;


            axios.post('/api/admin/delete/movie', { list: list }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_MOVIE', list);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Search movie
         * 
         * @param {string} string query 
         */

        GET_MOVIE_SEARCH: function GET_MOVIE_SEARCH(_ref5, query) {
            var commit = _ref5.commit;

            commit('SPINER_LOAD');
            axios.post('/api/admin/get/movie/search', { query: query }).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SEARCH_MOVIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },
        ADD_MOVIE_TO_TOP: function ADD_MOVIE_TO_TOP(_ref6, _ref7) {
            var commit = _ref6.commit;
            var id = _ref7.id,
                key = _ref7.key;

            axios.post('/api/admin/new/movie/top', { id: id }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('ADD_MOVIE_TO_TOP', { id: id, key: key });
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        }
    },
    mutations: {
        SET_MOVIES: function SET_MOVIES(state, data) {
            state.data = data;
        },
        SET_SEARCH_MOVIES: function SET_SEARCH_MOVIES(state, data) {
            state.data_search = data;
        },
        CLEAN_SEARCH_MOVIES: function CLEAN_SEARCH_MOVIES(state) {
            state.data_search = {};
        },
        DELETE_MOVIE: function DELETE_MOVIE(state, list) {
            for (var i = 0; i < list.length; i++) {
                state.data.movies.data.splice(list[i].key, 1);
            }
        },
        ADD_MOVIE_TO_TOP: function ADD_MOVIE_TO_TOP(state, data) {
            state.data.movies.data[data.key].movie_id = data.id;
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(468)
/* template */
var __vue_template__ = __webpack_require__(471)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/dashboard.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-497e3931", Component.options)
  } else {
    hotAPI.reload("data-v-497e3931", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 468 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__charts_users_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__charts_regions_js__ = __webpack_require__(20);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ __webpack_exports__["default"] = ({
    components: {
        "users-day-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        "users-month-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        "users-year-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        "top-day-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        "top-month-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        "top-year-chart": __WEBPACK_IMPORTED_MODULE_0__charts_users_js__["a" /* default */],
        'regions': __WEBPACK_IMPORTED_MODULE_1__charts_regions_js__["a" /* default */]
    },
    data: function data() {
        return {
            show_alert_services: false,
            show_chart: true,
            chart_type: 1,
            users_analysis_active: "day",
            top_analysis_active: "day",
            total: null,
            top_all_time: [],

            activeUserDay: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Active Daily",
                    yAxisID: "Active",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            inactiveUserDay: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Inactive Daily",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            activeUserMonth: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Active Monthly",
                    yAxisID: "Active",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            inactiveUserMonth: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Inactive Monthly",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            activeUserYear: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Active Yearly",
                    yAxisID: "Active",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            inactiveUserYear: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Inactive Yearly",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            topDay: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Top Day",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            topMonth: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Top Month",
                    yAxisID: "Active",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            topYear: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Top Year",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            regions: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Users",
                    yAxisID: "Active",
                    backgroundColor: "rgba(233, 30, 99, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },
            //Chart.js options that controls the appearance of the chart
            options: {
                scales: {
                    yAxes: [{
                        id: "Active",
                        type: "linear",
                        position: "left",
                        ticks: {
                            beginAtZero: false,
                            display: false
                        },
                        gridLines: {
                            display: false
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    zAxes: [{
                        ticks: {
                            display: false
                        }
                    }]
                },
                legend: {
                    display: false
                },
                responsive: true,
                maintainAspectRatio: false
            }
        };
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/get/dashboard/analysis").then(function (response) {
            if (response.status === 200) {
                // Active and Inactivity User
                // Day
                for (var index = 0; index < response.data.data.users.day.length; index++) {
                    if (response.data.data.users.day[index].type === "active") {
                        //Active
                        _this.activeUserDay.labels.push(response.data.data.users.day[index].hour);
                        _this.activeUserDay.datasets[0].data.push(response.data.data.users.day[index].number);
                    } else {
                        //Inactive
                        _this.inactiveUserDay.labels.push(response.data.data.users.day[index].hour);
                        _this.inactiveUserDay.datasets[0].data.push(response.data.data.users.day[index].number);
                    }
                }

                //Month
                for (var _index = 0; _index < response.data.data.users.month.length; _index++) {
                    if (response.data.data.users.month[_index].type === "active") {
                        //Active
                        _this.activeUserMonth.labels.push(response.data.data.users.month[_index].month);
                        _this.activeUserMonth.datasets[0].data.push(response.data.data.users.month[_index].number);
                    } else {
                        //Inactive
                        _this.inactiveUserMonth.labels.push(response.data.data.users.month[_index].month);
                        _this.inactiveUserMonth.datasets[0].data.push(response.data.data.users.month[_index].number);
                    }
                }

                //Year
                for (var _index2 = 0; _index2 < response.data.data.users.year.length; _index2++) {
                    if (response.data.data.users.year[_index2].type === "active") {
                        //Active
                        _this.activeUserYear.labels.push(response.data.data.users.year[_index2].year);
                        _this.activeUserYear.datasets[0].data.push(response.data.data.users.year[_index2].number);
                    } else {
                        //Inactive
                        _this.inactiveUserYear.labels.push(response.data.data.users.year[_index2].year);
                        _this.inactiveUserYear.datasets[0].data.push(response.data.data.users.year[_index2].number);
                    }
                }

                // Top movie and series
                // Day
                for (var _index3 = 0; _index3 < response.data.data.top.day.length; _index3++) {
                    _this.topDay.labels.push(response.data.data.top.day[_index3].name);
                    _this.topDay.datasets[0].data.push(response.data.data.top.day[_index3].count);
                }

                //Month
                for (var _index4 = 0; _index4 < response.data.data.top.month.length; _index4++) {
                    _this.topMonth.labels.push(response.data.data.top.month[_index4].name);
                    _this.topMonth.datasets[0].data.push(response.data.data.top.month[_index4].count);
                }

                //Year
                for (var _index5 = 0; _index5 < response.data.data.top.year.length; _index5++) {
                    _this.topYear.labels.push(response.data.data.top.year[_index5].name);
                    _this.topYear.datasets[0].data.push(response.data.data.top.year[_index5].count);
                }

                // Regions
                for (var _index6 = 0; _index6 < response.data.data.regions.length; _index6++) {
                    _this.regions.labels.push(response.data.data.regions[_index6].country);
                    _this.regions.datasets[0].data.push(response.data.data.regions[_index6].number);
                }

                _this.total = response.data.data.count;
                _this.top_all_time = response.data.data.top_all_time;
            }
        });
    },


    methods: {}
});

/***/ }),
/* 469 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export reactiveData */
/* unused harmony export reactiveProp */
function dataHandler(newData, oldData) {
  if (oldData) {
    var chart = this.$data._chart;
    var newDatasetLabels = newData.datasets.map(function (dataset) {
      return dataset.label;
    });
    var oldDatasetLabels = oldData.datasets.map(function (dataset) {
      return dataset.label;
    });
    var oldLabels = JSON.stringify(oldDatasetLabels);
    var newLabels = JSON.stringify(newDatasetLabels);

    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {
      newData.datasets.forEach(function (dataset, i) {
        var oldDatasetKeys = Object.keys(oldData.datasets[i]);
        var newDatasetKeys = Object.keys(dataset);
        var deletionKeys = oldDatasetKeys.filter(function (key) {
          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;
        });
        deletionKeys.forEach(function (deletionKey) {
          delete chart.data.datasets[i][deletionKey];
        });

        for (var attribute in dataset) {
          if (dataset.hasOwnProperty(attribute)) {
            chart.data.datasets[i][attribute] = dataset[attribute];
          }
        }
      });

      if (newData.hasOwnProperty('labels')) {
        chart.data.labels = newData.labels;
        this.$emit('labels:update');
      }

      if (newData.hasOwnProperty('xLabels')) {
        chart.data.xLabels = newData.xLabels;
        this.$emit('xlabels:update');
      }

      if (newData.hasOwnProperty('yLabels')) {
        chart.data.yLabels = newData.yLabels;
        this.$emit('ylabels:update');
      }

      chart.update();
      this.$emit('chart:update');
    } else {
      if (chart) {
        chart.destroy();
        this.$emit('chart:destroy');
      }

      this.renderChart(this.chartData, this.options);
      this.$emit('chart:render');
    }
  } else {
    if (this.$data._chart) {
      this.$data._chart.destroy();

      this.$emit('chart:destroy');
    }

    this.renderChart(this.chartData, this.options);
    this.$emit('chart:render');
  }
}

var reactiveData = {
  data: function data() {
    return {
      chartData: null
    };
  },
  watch: {
    'chartData': dataHandler
  }
};
var reactiveProp = {
  props: {
    chartData: {
      type: Object,
      required: true,
      default: function _default() {}
    }
  },
  watch: {
    'chartData': dataHandler
  }
};
/* harmony default export */ __webpack_exports__["a"] = ({
  reactiveData: reactiveData,
  reactiveProp: reactiveProp
});

/***/ }),
/* 470 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["j"] = generateChart;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Bar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return HorizontalBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Doughnut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Pie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return PolarArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return Radar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Bubble; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return Scatter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js__ = __webpack_require__(218);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chart_js__);

function generateChart(chartId, chartType) {
  return {
    render: function render(createElement) {
      return createElement('div', {
        style: this.styles,
        class: this.cssClasses
      }, [createElement('canvas', {
        attrs: {
          id: this.chartId,
          width: this.width,
          height: this.height
        },
        ref: 'canvas'
      })]);
    },
    props: {
      chartId: {
        default: chartId,
        type: String
      },
      width: {
        default: 400,
        type: Number
      },
      height: {
        default: 400,
        type: Number
      },
      cssClasses: {
        type: String,
        default: ''
      },
      styles: {
        type: Object
      },
      plugins: {
        type: Array,
        default: function _default() {
          return [];
        }
      }
    },
    data: function data() {
      return {
        _chart: null,
        _plugins: this.plugins
      };
    },
    methods: {
      addPlugin: function addPlugin(plugin) {
        this.$data._plugins.push(plugin);
      },
      generateLegend: function generateLegend() {
        if (this.$data._chart) {
          return this.$data._chart.generateLegend();
        }
      },
      renderChart: function renderChart(data, options) {
        if (this.$data._chart) this.$data._chart.destroy();
        if (!this.$refs.canvas) throw new Error('Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components');
        this.$data._chart = new __WEBPACK_IMPORTED_MODULE_0_chart_js___default.a(this.$refs.canvas.getContext('2d'), {
          type: chartType,
          data: data,
          options: options,
          plugins: this.$data._plugins
        });
      }
    },
    beforeDestroy: function beforeDestroy() {
      if (this.$data._chart) {
        this.$data._chart.destroy();
      }
    }
  };
}
var Bar = generateChart('bar-chart', 'bar');
var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');
var Doughnut = generateChart('doughnut-chart', 'doughnut');
var Line = generateChart('line-chart', 'line');
var Pie = generateChart('pie-chart', 'pie');
var PolarArea = generateChart('polar-chart', 'polarArea');
var Radar = generateChart('radar-chart', 'radar');
var Bubble = generateChart('bubble-chart', 'bubble');
var Scatter = generateChart('scatter-chart', 'scatter');
/* unused harmony default export */ var _unused_webpack_default_export = ({
  Bar: Bar,
  HorizontalBar: HorizontalBar,
  Doughnut: Doughnut,
  Line: Line,
  Pie: Pie,
  PolarArea: PolarArea,
  Radar: Radar,
  Bubble: Bubble,
  Scatter: Scatter
});

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "dashboard" }, [
      _vm.show_alert_services
        ? _c(
            "div",
            { staticClass: "alert alert-warning", attrs: { role: "alert" } },
            [
              _vm._v(
                "\n            You have some problem, Please check it from here\n        "
              )
            ]
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.chart_type === 1
        ? _c("div", { staticClass: "white users-chart" }, [
            _c("h5", { staticClass: "title p-2" }, [_vm._v("Dashboard")]),
            _vm._v(" "),
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-6" }, [
                _c("div", { staticClass: "button-section mt-3 ml-5" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 1 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 1
                        }
                      }
                    },
                    [_vm._v("Users\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 2 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 2
                        }
                      }
                    },
                    [_vm._v("Top\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 3 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 3
                        }
                      }
                    },
                    [_vm._v("Regions\n                        ")]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-6" }, [
                _c(
                  "div",
                  { staticClass: "button-section float-right mt-3 ml-5" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: { active: _vm.users_analysis_active === "day" },
                        on: {
                          click: function($event) {
                            _vm.users_analysis_active = "day"
                          }
                        }
                      },
                      [_vm._v("DAY\n                        ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: {
                          active: _vm.users_analysis_active === "month"
                        },
                        on: {
                          click: function($event) {
                            _vm.users_analysis_active = "month"
                          }
                        }
                      },
                      [_vm._v("MONTH\n                        ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: { active: _vm.users_analysis_active === "year" },
                        on: {
                          click: function($event) {
                            _vm.users_analysis_active = "year"
                          }
                        }
                      },
                      [_vm._v("YEAR\n                        ")]
                    )
                  ]
                )
              ])
            ]),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _vm.chart_type === 1 && _vm.users_analysis_active == "day"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Active User")
                        ]),
                        _vm._v(" "),
                        _c("users-day-chart", {
                          attrs: {
                            data: _vm.activeUserDay,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Inactive User")
                        ]),
                        _vm._v(" "),
                        _c("users-day-chart", {
                          attrs: {
                            data: _vm.inactiveUserDay,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.chart_type === 1 && _vm.users_analysis_active == "month"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Active User")
                        ]),
                        _vm._v(" "),
                        _c("users-month-chart", {
                          attrs: {
                            data: _vm.activeUserMonth,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Inactive User")
                        ]),
                        _vm._v(" "),
                        _c("users-month-chart", {
                          attrs: {
                            data: _vm.inactiveUserMonth,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.chart_type === 1 && _vm.users_analysis_active == "year"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Active User")
                        ]),
                        _vm._v(" "),
                        _c("users-year-chart", {
                          attrs: {
                            data: _vm.activeUserYear,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-6 col-lg-6" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("Inactive User")
                        ]),
                        _vm._v(" "),
                        _c("users-year-chart", {
                          attrs: {
                            data: _vm.inactiveUserYear,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e()
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.chart_type === 2
        ? _c("div", { staticClass: "white top-chart" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-6" }, [
                _c("div", { staticClass: "button-section mt-3 ml-5" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 1 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 1
                        }
                      }
                    },
                    [_vm._v("Users\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 2 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 2
                        }
                      }
                    },
                    [_vm._v("Top\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 3 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 3
                        }
                      }
                    },
                    [_vm._v("Regions\n                        ")]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-6" }, [
                _c(
                  "div",
                  { staticClass: "button-section float-right mt-3 ml-5" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: { active: _vm.top_analysis_active === "day" },
                        on: {
                          click: function($event) {
                            _vm.top_analysis_active = "day"
                          }
                        }
                      },
                      [_vm._v("DAY\n                        ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: { active: _vm.top_analysis_active === "month" },
                        on: {
                          click: function($event) {
                            _vm.top_analysis_active = "month"
                          }
                        }
                      },
                      [_vm._v("MONTH\n                        ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning ml-1",
                        class: { active: _vm.top_analysis_active === "year" },
                        on: {
                          click: function($event) {
                            _vm.top_analysis_active = "year"
                          }
                        }
                      },
                      [_vm._v("YEAR\n                        ")]
                    )
                  ]
                )
              ])
            ]),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _vm.chart_type === 2 && _vm.top_analysis_active == "day"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("MOST WATCH MOVIES AND EPISODE (Hourly)")
                        ]),
                        _vm._v(" "),
                        _c("top-day-chart", {
                          attrs: {
                            data: _vm.topDay,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.chart_type === 2 && _vm.top_analysis_active == "month"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("MOST WATCH MOVIES AND EPISODE (Monthly)")
                        ]),
                        _vm._v(" "),
                        _c("top-month-chart", {
                          attrs: {
                            data: _vm.topMonth,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.chart_type === 2 && _vm.top_analysis_active == "year"
              ? _c("div", { staticClass: "col-12 row" }, [
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "div",
                      { staticClass: "col-12 m-2 details" },
                      [
                        _c("span", { staticClass: "header" }, [
                          _vm._v("MOST WATCH MOVIES AND EPISODE (Yearly)")
                        ]),
                        _vm._v(" "),
                        _c("users-year-chart", {
                          attrs: {
                            data: _vm.topYear,
                            options: _vm.options,
                            height: 150
                          }
                        })
                      ],
                      1
                    )
                  ])
                ])
              : _vm._e()
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.chart_type === 3
        ? _c("div", { staticClass: "white col-12 " }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-6" }, [
                _c("div", { staticClass: "button-section mt-3 ml-5" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 1 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 1
                        }
                      }
                    },
                    [_vm._v("Users\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 2 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 2
                        }
                      }
                    },
                    [_vm._v("Top\n                        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning ml-1",
                      class: { active: _vm.chart_type === 3 },
                      on: {
                        click: function($event) {
                          _vm.chart_type = 3
                        }
                      }
                    },
                    [_vm._v("Regions\n                        ")]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12" }, [
              _c(
                "div",
                { staticClass: "col-12 m-2 details" },
                [
                  _c("span", { staticClass: "header" }, [
                    _vm._v("Regions Users")
                  ]),
                  _vm._v(" "),
                  _c("regions", {
                    attrs: {
                      data: _vm.regions,
                      options: _vm.options,
                      height: 150
                    }
                  })
                ],
                1
              )
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.total != null
        ? _c("div", { staticClass: "crms text-center offset-1 p-2" }, [
            _c("div", { staticClass: "col-12 row" }, [
              _c(
                "div",
                {
                  staticClass:
                    "col-12 col-sm-6 col-md-3 col-lg-2 mt-2 m-md-2 white card"
                },
                [
                  _c("div", { staticClass: "details" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/report.svg",
                        alt: "report",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "reports" }, [
                      _vm._v(_vm._s(_vm.total.reports))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Reports")])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass:
                    "col-12 col-sm-6 col-md-3 col-lg-2 mt-2 m-md-2 white card"
                },
                [
                  _c("div", { staticClass: "details" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/movie.svg",
                        alt: "report",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "movies" }, [
                      _vm._v(_vm._s(_vm.total.movies))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Movies")])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass:
                    "col-12 col-sm-6 col-md-3 col-lg-2 mt-2 m-md-2 white card"
                },
                [
                  _c("div", { staticClass: "details" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/series.svg",
                        alt: "series",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "series" }, [
                      _vm._v(_vm._s(_vm.total.series))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Series")])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass:
                    "col-12 col-sm-6 col-md-3 col-lg-2 mt-2 m-md-2 white card"
                },
                [
                  _c("div", { staticClass: "details" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/tv.svg",
                        alt: "tv",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "episode" }, [
                      _vm._v(_vm._s(_vm.total.tvs))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [
                      _vm._v("Live Streaming")
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass:
                    "col-12 col-sm-6 col-md-3 col-lg-2 mt-2 m-md-2 white card"
                },
                [
                  _c("div", { staticClass: "details" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/users.svg",
                        alt: "tv",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "users" }, [
                      _vm._v(_vm._s(_vm.total.users))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Users")])
                  ])
                ]
              )
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _c("div", { staticClass: "col-12 offset-1 top" }, [
        _c("div", { staticClass: "row" }, [
          _vm.top_all_time.users !== []
            ? _c("div", { staticClass: "col-12 col-md-3 white m-2" }, [
                _c("b", { staticClass: "title ml-3" }, [_vm._v("Top users")]),
                _vm._v(" "),
                _c(
                  "ul",
                  { staticClass: "list-group mt-2" },
                  _vm._l(_vm.top_all_time.users, function(item, index) {
                    return item.name !== null
                      ? _c(
                          "li",
                          {
                            key: index,
                            staticClass:
                              "list-group-item d-flex justify-content-between align-items-center"
                          },
                          [
                            _vm._v(
                              "\n                            " +
                                _vm._s(item.name) +
                                "\n                            "
                            ),
                            _c("span", { staticClass: "count" }, [
                              _vm._v(_vm._s(item.user_count))
                            ])
                          ]
                        )
                      : _vm._e()
                  }),
                  0
                )
              ])
            : _vm._e(),
          _vm._v(" "),
          _vm.top_all_time.movies !== []
            ? _c("div", { staticClass: "col-12 col-md-3 white m-2" }, [
                _c("b", { staticClass: "title ml-3" }, [_vm._v("Top movies")]),
                _vm._v(" "),
                _c(
                  "ul",
                  { staticClass: "list-group mt-2" },
                  _vm._l(_vm.top_all_time.movies, function(item, index) {
                    return item.m_name !== null
                      ? _c(
                          "li",
                          {
                            key: index,
                            staticClass:
                              "list-group-item d-flex justify-content-between align-items-center"
                          },
                          [
                            _c(
                              "router-link",
                              {
                                attrs: {
                                  to: {
                                    name: "analysis-movie",
                                    params: { id: item.m_id }
                                  }
                                }
                              },
                              [_vm._v(" " + _vm._s(item.m_name) + " ")]
                            ),
                            _vm._v(" "),
                            _c("span", { staticClass: "count" }, [
                              _vm._v(_vm._s(item.movie_count))
                            ])
                          ],
                          1
                        )
                      : _vm._e()
                  }),
                  0
                )
              ])
            : _vm._e(),
          _vm._v(" "),
          _vm.top_all_time.series !== []
            ? _c("div", { staticClass: "col-12 col-md-4 white m-2" }, [
                _c("b", { staticClass: "title ml-3" }, [_vm._v("Top series")]),
                _vm._v(" "),
                _c(
                  "ul",
                  { staticClass: "list-group mt-2" },
                  _vm._l(_vm.top_all_time.series, function(item, index) {
                    return item.t_name !== null
                      ? _c(
                          "li",
                          {
                            key: index,
                            staticClass:
                              "list-group-item d-flex justify-content-between align-items-center"
                          },
                          [
                            _c(
                              "router-link",
                              {
                                attrs: {
                                  to: {
                                    name: "analysis-series",
                                    params: { id: item.t_id }
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  " " +
                                    _vm._s(item.t_name) +
                                    "                       \n                            (" +
                                    _vm._s(item.name) +
                                    ") "
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c("span", { staticClass: "count" }, [
                              _vm._v(_vm._s(item.series_count))
                            ])
                          ],
                          1
                        )
                      : _vm._e()
                  }),
                  0
                )
              ])
            : _vm._e()
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-497e3931", module.exports)
  }
}

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(473)
/* template */
var __vue_template__ = __webpack_require__(477)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/movies-manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-73639154", Component.options)
  } else {
    hotAPI.reload("data-v-73639154", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 473 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            query: "",
            show_subtitle_modal: false,
            percentSubtitleUpload: 0,
            subtitle_video: false,
            subtitle_movie_id: null,
            error_message_subtitle: "",
            success_message_subtitle: "",
            disable_button: false,
            multi_select: [],
            showGroupButton: false
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.movies.data;
        },
        data_search: function data_search(state) {
            return state.movies.data_search;
        },
        button_loading: function button_loading(state) {
            return state.movies.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.movies.spinner_loading;
        },
        subtitles: function subtitles(state) {
            return state.subtitles.data;
        },
        subtitle_spinner_loading: function subtitle_spinner_loading(state) {
            return state.subtitles.spinner_loading;
        }
    }),

    watch: {
        multi_select: function multi_select(item) {
            if (this.multi_select.length > 0) {
                this.showGroupButton = true;
            } else {
                this.showGroupButton = false;
                document.getElementById("select-all").checked = false;
            }
        }
    },

    created: function created() {
        this.$store.commit("CLEAN_SEARCH_MOVIES");
        this.$store.dispatch("GET_MOVIES");
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                text: "All videos and subtitles will removed!",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    for (var i = 0; i < _this.multi_select.length; i++) {
                        document.getElementById(_this.multi_select[i].id).checked = false;
                    }
                    _this.$store.dispatch("DELETE_MOVIE", _this.multi_select);
                }
            });
        },
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_MOVIES_PAGINATION", path_url);
        },
        SEARCH: function SEARCH() {
            if (this.query.length > 0) {
                this.$store.dispatch("GET_MOVIE_SEARCH", this.query);
            } else {
                this.data_search.movies = null;
            }
        },
        ADD_TO_TOP: function ADD_TO_TOP(id, key) {
            this.$store.dispatch("ADD_MOVIE_TO_TOP", {
                id: id,
                key: key
            });
        },
        GET_SUBTITLE: function GET_SUBTITLE(id, key) {
            this.show_subtitle_modal = true;
            this.subtitle_movie_id = id;
            this.$store.dispatch("GET_MOVIE_SUBTITLES", id);
        },
        UPLOAD_SUBTITLE: function UPLOAD_SUBTITLE(id) {
            var _this2 = this;

            var formData = new FormData();
            var sub = document.getElementById("subtitle").files.length;
            for (var x = 0; x < sub; x++) {
                formData.append("subtitleUpload[]", document.getElementById("subtitle").files[x]);
            }

            formData.append("id", this.subtitle_movie_id);

            // Progress
            this.subtitle_video = true;
            this.disable_button = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this2.percentSubtitleUpload = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                }
            };

            axios.post("/api/admin/new/movie/moviesubtitle", formData, progress).then(function (response) {
                if (response.status === 200) {
                    _this2.success_message_subtitle = response.data.message;
                    if (_this2.subtitles.subtitles != null) {
                        _this2.subtitles.subtitles.push(response.data.data);
                    } else {
                        _this2.subtitles.subtitles = [];
                        _this2.subtitles.subtitles[0] = response.data.data;
                    }
                    setTimeout(function () {
                        _this2.subtitle_video = false;
                        _this2.disable_button = false;
                    }, 500);
                }
            }, function (error) {
                _this2.disable_button = false;
                _this2.error_message_subtitle = error.response.data.message;
                setTimeout(function () {
                    _this2.subtitle_video = false;
                }, 1500);
            });
        },
        DELETE_SUBTITLE: function DELETE_SUBTITLE(id, key) {
            var _this3 = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {

                    _this3.$store.dispatch("DELETE_SUBTITLE", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        AVAILABLE_IT: function AVAILABLE_IT(id, index) {
            var _this4 = this;

            for (var i = 0; i < this.multi_select.length; i++) {
                document.getElementById(this.multi_select[i].id).checked = false;
            }
            axios.post("/api/admin/update/movie/available", {
                list: this.multi_select
            }).then(function (response) {
                if (response.status === 200) {
                    for (var _i = 0; _i < response.data.list.length; _i++) {
                        _this4.data.movies.data[response.data.list[_i].key].show = response.data.list[_i].show;
                    }
                }
            }, function (error) {
                console.log("error in available movie ");
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        ADD_TO_MULITSELECT: function ADD_TO_MULITSELECT(item, key) {
            if (this.multi_select.length > 0) {
                for (var i = 0; i < this.multi_select.length; i++) {
                    if (this.multi_select[i].id == item) {
                        this.multi_select.splice(i, 1);
                        return;
                    }
                }
                this.multi_select.push({
                    id: item,
                    key: key
                });
            } else {
                this.multi_select.push({
                    id: item,
                    key: key
                });
            }
        },
        ADD_ALL_TO_MULITSELECT: function ADD_ALL_TO_MULITSELECT() {
            if (this.multi_select.length > 0) {
                for (var i = 0; i < this.multi_select.length; i++) {
                    document.getElementById(this.multi_select[i].id).checked = false;
                }
                this.multi_select = [];
            } else {
                for (var _i2 = 0; _i2 < this.data.movies.data.length; _i2++) {
                    this.multi_select.push({
                        id: this.data.movies.data[_i2].id,
                        key: _i2
                    });
                    document.getElementById(this.data.movies.data[_i2].id).checked = true;
                }
            }
        }
    }
});

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(475);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(13)("12d81214", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2dd876c9\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./loader.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2dd876c9\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./loader.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "\nsvg[data-v-2dd876c9]{\nposition: absolute;\ntop: 0px;\nright: 0px;\nwidth: 80px;\nheight: 80px;\ndisplay: inline-block;\n}\n", ""]);

// exports


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "loader-svg" }, [
    _c(
      "svg",
      {
        attrs: {
          version: "1.1",
          id: "L9",
          xmlns: "http://www.w3.org/2000/svg",
          "xmlns:xlink": "http://www.w3.org/1999/xlink",
          x: "0px",
          y: "0px",
          viewBox: "0 0 100 100",
          "enable-background": "new 0 0 0 0",
          "xml:space": "preserve"
        }
      },
      [
        _c(
          "path",
          {
            attrs: {
              fill: "rgb(130, 138, 159)",
              d:
                "M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50"
            }
          },
          [
            _c("animateTransform", {
              attrs: {
                attributeName: "transform",
                attributeType: "XML",
                type: "rotate",
                dur: "1s",
                from: "0 50 50",
                to: "360 50 50",
                repeatCount: "indefinite"
              }
            })
          ],
          1
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2dd876c9", module.exports)
  }
}

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Movies")]),
      _vm._v(" "),
      _c("div", { staticClass: "m-2", attrs: { id: "manage-panel" } }, [
        _vm.showGroupButton
          ? _c("div", { staticClass: "float-left mt-3" }, [
              _c("div", { staticClass: "button-group" }, [
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.AVAILABLE_IT()
                      }
                    }
                  },
                  [_vm._v("Available / Unavailable")]
                ),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.DELETE()
                      }
                    }
                  },
                  [_vm._v("Delete")]
                )
              ])
            ])
          : _vm._e(),
        _vm._v(" "),
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c("li", { staticClass: "col col-md-4 offset-md-8" }, [
            _c("div", { attrs: { id: "search" } }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.query,
                    expression: "query"
                  }
                ],
                staticClass: "form-control mr-sm-2",
                attrs: { type: "text", placeholder: "Search" },
                domProps: { value: _vm.query },
                on: {
                  keyup: _vm.SEARCH,
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.query = $event.target.value
                  }
                }
              })
            ])
          ])
        ])
      ]),
      _vm._v(" "),
      _vm.spinner_loading
        ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
        : _vm._e(),
      _vm._v(" "),
      !_vm.spinner_loading
        ? _c("div", [
            _c("div", { staticClass: "subtitles-modal" }, [
              _c(
                "div",
                {
                  staticClass: "modal fade",
                  attrs: {
                    id: "GetSubtitleModal",
                    tabindex: "-1",
                    role: "dialog",
                    "aria-labelledby": "GetSubtitleModalLabel",
                    "aria-hidden": "true"
                  }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "modal-dialog",
                      attrs: { role: "document" }
                    },
                    [
                      _c("div", { staticClass: "modal-content" }, [
                        _vm._m(0),
                        _vm._v(" "),
                        _c("div", { staticClass: "modal-body" }, [
                          _vm.subtitle_spinner_loading
                            ? _c(
                                "div",
                                { staticClass: "spinner-load" },
                                [_c("Loader")],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _c("div", { staticClass: "col-12" }, [
                            _c("input", {
                              staticClass: "inputfile",
                              attrs: {
                                type: "file",
                                id: "subtitle",
                                name: "subtitle",
                                multiple: "",
                                size: "10"
                              },
                              on: {
                                change: function($event) {
                                  return _vm.SHOW_FILES_INFO(
                                    "subtitle",
                                    "subtitleFileDetails"
                                  )
                                }
                              }
                            }),
                            _vm._v(" "),
                            _vm._m(1)
                          ]),
                          _vm._v(" "),
                          _vm.subtitle_video
                            ? _c(
                                "div",
                                { staticClass: "subtitle-progress mt-1 p-4" },
                                [
                                  _c("div", { staticClass: "row" }, [
                                    _c("div", { staticClass: "svg ml-3" }, [
                                      _c(
                                        "svg",
                                        {
                                          staticStyle: {
                                            "enable-background":
                                              "new 0 0 384 384"
                                          },
                                          attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            "xmlns:xlink":
                                              "http://www.w3.org/1999/xlink",
                                            version: "1.1",
                                            id: "Capa_1",
                                            x: "0px",
                                            y: "0px",
                                            viewBox: "0 0 384 384",
                                            "xml:space": "preserve",
                                            width: "50px"
                                          }
                                        },
                                        [
                                          _c("g", [
                                            _c("g", [
                                              _c("g", [
                                                _c("path", {
                                                  staticClass: "active-path",
                                                  attrs: {
                                                    d:
                                                      "M341.333,21.333H42.667C19.093,21.333,0,40.427,0,64v256c0,23.573,19.093,42.667,42.667,42.667h298.667    C364.907,362.667,384,343.573,384,320V64C384,40.427,364.907,21.333,341.333,21.333z M170.667,170.667h-32V160H96v64h42.667    v-10.667h32v21.333c0,11.733-9.493,21.333-21.333,21.333h-64C73.493,256,64,246.4,64,234.667v-85.333    C64,137.6,73.493,128,85.333,128h64c11.84,0,21.333,9.6,21.333,21.333V170.667z M320,170.667h-32V160h-42.667v64H288v-10.667h32    v21.333C320,246.4,310.507,256,298.667,256h-64c-11.84,0-21.333-9.6-21.333-21.333v-85.333c0-11.733,9.493-21.333,21.333-21.333    h64c11.84,0,21.333,9.6,21.333,21.333V170.667z",
                                                    "data-original": "#000000",
                                                    "data-old_color": "#00A6F9",
                                                    fill: "#00A6F9"
                                                  }
                                                })
                                              ])
                                            ])
                                          ])
                                        ]
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _vm._m(2)
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "progress" }, [
                                    _vm.percentSubtitleUpload !== 100
                                      ? _c("div", {
                                          staticClass: "progress-bar",
                                          style: {
                                            width:
                                              _vm.percentSubtitleUpload + "%",
                                            height: "6px"
                                          },
                                          attrs: {
                                            role: "progressbar",
                                            "aria-valuenow":
                                              _vm.percentSubtitleUpload,
                                            "aria-valuemin": "0",
                                            "aria-valuemax": "100"
                                          }
                                        })
                                      : _c("div", [
                                          _c("i", {
                                            attrs: { id: "btn-progress" }
                                          }),
                                          _vm._v(
                                            " Prepare\n                                        "
                                          )
                                        ])
                                  ]),
                                  _vm._v(" "),
                                  _c("p", { staticClass: "is-danger" }, [
                                    _vm._v(_vm._s(_vm.error_message_subtitle))
                                  ]),
                                  _vm._v(" "),
                                  _c("p", { staticClass: "is-success" }, [
                                    _vm._v(_vm._s(_vm.success_message_subtitle))
                                  ])
                                ]
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _c("hr"),
                          _vm._v(" "),
                          _vm.subtitles.subtitles !== null
                            ? _c("div", { staticClass: "table-responsive" }, [
                                _c(
                                  "div",
                                  { staticClass: "table table-hover" },
                                  [
                                    _vm._m(3),
                                    _vm._v(" "),
                                    _c(
                                      "tbody",
                                      _vm._l(_vm.subtitles.subtitles, function(
                                        item,
                                        index
                                      ) {
                                        return _c("tr", { key: index }, [
                                          _c("td", [_vm._v(_vm._s(item.name))]),
                                          _vm._v(" "),
                                          _c("td", [
                                            _vm._v(_vm._s(item.language))
                                          ]),
                                          _vm._v(" "),
                                          _c("td", [
                                            _vm._v(_vm._s(item.created_at))
                                          ]),
                                          _vm._v(" "),
                                          _c("td", [
                                            _c(
                                              "div",
                                              {
                                                staticClass: "btn-group",
                                                attrs: { role: "group" }
                                              },
                                              [
                                                !_vm.button_loading
                                                  ? _c(
                                                      "button",
                                                      {
                                                        staticClass:
                                                          "btn btn-sm btn-danger btn-sm mr-2",
                                                        on: {
                                                          click: function(
                                                            $event
                                                          ) {
                                                            return _vm.DELETE_SUBTITLE(
                                                              item.id,
                                                              index
                                                            )
                                                          }
                                                        }
                                                      },
                                                      [
                                                        _vm._v(
                                                          "Delete\n                                                        "
                                                        )
                                                      ]
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.button_loading === item.id
                                                  ? _c(
                                                      "button",
                                                      {
                                                        staticClass:
                                                          "btn btn-sm btn-danger btn-sm mr-2",
                                                        attrs: { disabled: "" }
                                                      },
                                                      [
                                                        _c("i", {
                                                          attrs: {
                                                            id: "btn-progress"
                                                          }
                                                        }),
                                                        _vm._v(
                                                          " Loading\n                                                        "
                                                        )
                                                      ]
                                                    )
                                                  : _vm._e()
                                              ]
                                            )
                                          ])
                                        ])
                                      }),
                                      0
                                    )
                                  ]
                                )
                              ])
                            : _c("div", { staticClass: "text-center" }, [
                                _c("h4", [_vm._v("There is no subtitles")])
                              ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "modal-footer" }, [
                          _c(
                            "button",
                            {
                              staticClass: "btn btn-sm btn-warning",
                              class: { disabled: _vm.disable_button },
                              attrs: { type: "button" },
                              on: {
                                click: function($event) {
                                  return _vm.UPLOAD_SUBTITLE()
                                }
                              }
                            },
                            [
                              _vm._v(
                                "Upload Subtitle\n                                "
                              )
                            ]
                          )
                        ])
                      ])
                    ]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _vm.data.movies === null
              ? _c("div", { staticClass: "text-center" }, [
                  _c("h4", [_vm._v("No result were found")])
                ])
              : _c("div", [
                  Object.keys(_vm.data_search).length > 0 &&
                  _vm.data_search.movies !== null
                    ? _c("div", { staticClass: "mt-2" }, [
                        _c("div", { staticClass: "table table-hover" }, [
                          _c("thead", [
                            _c(
                              "th",
                              { staticStyle: { "text-align": "center" } },
                              [
                                _c("input", {
                                  attrs: { type: "checkbox", id: "select-all" },
                                  on: {
                                    click: function($event) {
                                      return _vm.ADD_ALL_TO_MULITSELECT()
                                    }
                                  }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c("th", [_vm._v("Cover")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Name")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Year")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Cloud")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Status")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Category")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Created date")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Updated date")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Control")])
                          ]),
                          _vm._v(" "),
                          _c(
                            "tbody",
                            _vm._l(_vm.data_search.movies, function(
                              item,
                              index
                            ) {
                              return _c("tr", { key: index }, [
                                _c(
                                  "td",
                                  { staticStyle: { "text-align": "center" } },
                                  [
                                    _c("input", {
                                      attrs: { type: "checkbox", id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.ADD_TO_MULITSELECT(
                                            item.id,
                                            index
                                          )
                                        }
                                      }
                                    })
                                  ]
                                ),
                                _vm._v(" "),
                                item.m_cloud == "local"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.m_cloud == "aws"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src: _vm.md_poster + item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.name))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.year))]),
                                _vm._v(" "),
                                item.m_cloud == "local"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                    Local Server\n                                "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.m_cloud == "aws"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                    AWS S3\n                                "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.show
                                  ? _c("td", [_vm._v("Available")])
                                  : _c("td", [_vm._v("Unavailable")]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.category))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.created_at))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                _vm._v(" "),
                                _c("td", [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "btn-group",
                                      attrs: { role: "group" }
                                    },
                                    [
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "analysis-movie",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Analysis\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      item.movie_id !== item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_TO_TOP(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "\n                                            Top\n                                        "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            "data-toggle": "modal",
                                            "data-target": "#GetSubtitleModal"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.GET_SUBTITLE(
                                                item.id,
                                                index
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Get Subtitles\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "movie_edit",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Edit\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            role: "buttton",
                                            to: {
                                              name: "movie-ads",
                                              params: { id: item.id }
                                            }
                                          }
                                        },
                                        [_vm._v("Ads")]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              ])
                            }),
                            0
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data_search.movies === null ||
                  Object.keys(_vm.data_search).length === 0
                    ? _c("div", { staticClass: "table-responsive mt-2" }, [
                        _c("div", { staticClass: "table table-hover" }, [
                          _c("thead", [
                            _c(
                              "th",
                              { staticStyle: { "text-align": "center" } },
                              [
                                _c("input", {
                                  attrs: { type: "checkbox", id: "select-all" },
                                  on: {
                                    click: function($event) {
                                      return _vm.ADD_ALL_TO_MULITSELECT()
                                    }
                                  }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c("th", [_vm._v("Cover")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Name")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Year")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Cloud")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Status")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Category")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Created date")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Updated date")]),
                            _vm._v(" "),
                            _c("th", [_vm._v("Control")])
                          ]),
                          _vm._v(" "),
                          _c(
                            "tbody",
                            _vm._l(_vm.data.movies.data, function(item, index) {
                              return _c("tr", { key: index }, [
                                _c(
                                  "td",
                                  { staticStyle: { "text-align": "center" } },
                                  [
                                    _c("input", {
                                      attrs: { type: "checkbox", id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.ADD_TO_MULITSELECT(
                                            item.id,
                                            index
                                          )
                                        }
                                      }
                                    })
                                  ]
                                ),
                                _vm._v(" "),
                                item.m_cloud == "local"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.m_cloud == "aws"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src: _vm.md_poster + item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.name))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.year))]),
                                _vm._v(" "),
                                item.m_cloud == "local"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                    Local Server\n                                "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.m_cloud == "aws"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                    AWS S3\n                                "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.show
                                  ? _c("td", [_vm._v("Available")])
                                  : _c("td", [_vm._v("Unavailable")]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.category))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.created_at))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                _vm._v(" "),
                                _c("td", [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "btn-group",
                                      attrs: { role: "group" }
                                    },
                                    [
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "analysis-movie",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Analysis\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      item.movie_id !== item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_TO_TOP(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Top\n                                        "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            "data-toggle": "modal",
                                            "data-target": "#GetSubtitleModal"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.GET_SUBTITLE(
                                                item.id,
                                                index
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Get Subtitles\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "movie_edit",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Edit\n                                        "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            role: "button",
                                            to: {
                                              name: "movie-ads",
                                              params: { id: item.id }
                                            }
                                          }
                                        },
                                        [_vm._v("Ads")]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              ])
                            }),
                            0
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data_search.movies === null ||
                  Object.keys(_vm.data_search).length === 0
                    ? _c(
                        "nav",
                        {
                          staticClass: "m-4 p-1",
                          attrs: { "aria-label": "pagination" }
                        },
                        [
                          _c("ul", { staticClass: "pagination " }, [
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                attrs: { id: "end" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          "/api/admin/get/movies"
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Begin")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                class: {
                                  disabled:
                                    _vm.data.movies.prev_page_url === null
                                },
                                attrs: { id: "prev" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          _vm.data.movies.prev_page_url
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Previous")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c("li", { staticClass: "page-item" }, [
                              _c("a", { staticClass: "page-link" }, [
                                _vm._v(
                                  _vm._s(_vm.data.movies.current_page) +
                                    "/" +
                                    _vm._s(_vm.data.movies.last_page)
                                )
                              ])
                            ]),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                class: {
                                  disabled:
                                    _vm.data.movies.next_page_url === null
                                },
                                attrs: { id: "next" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          _vm.data.movies.next_page_url
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Next")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                attrs: { id: "end" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          "/api/admin/get/movies?page=" +
                                            _vm.data.movies.last_page
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("End")]
                                )
                              ]
                            )
                          ])
                        ]
                      )
                    : _vm._e()
                ])
          ])
        : _vm._e()
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "GetSubtitleModalLabel" } },
        [_vm._v("Subtitles")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "subtitleLabel", for: "subtitle" } }, [
      _vm._v("Add New Subtitles\n                                        "),
      _c("br"),
      _vm._v(" "),
      _c("small", [
        _vm._v("The name most be of the same language exm: English.srt")
      ]),
      _vm._v(" "),
      _c("p", { attrs: { id: "subtitleFileDetails" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "title" }, [
      _c("h6", [_c("strong", [_vm._v("Upload and convert srt ")])])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Language")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-73639154", module.exports)
  }
}

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(479)
/* template */
var __vue_template__ = __webpack_require__(480)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/new-movie-api.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-a9fc8c92", Component.options)
  } else {
    hotAPI.reload("data-v-a9fc8c92", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            id: "",
            video_link: [],
            embedCodeList: [],
            presets: [{
                Name: "HLS - 16000Kilorate - 4K",
                Resolution: "4k",
                Container: "ts"
            }, {
                Name: "HLS - 4000Kilorate - 1080P",
                Resolution: "1080",
                Container: "ts"
            }, {
                Name: "HLS - 2500Kilorate - 720P",
                Resolution: "720",
                Container: "ts"
            }, {
                Name: "HLS - 700Kilorate - 480P",
                Resolution: "480",
                Container: "ts"
            }, {
                Name: "HLS - 400Kilorate - 320P",
                Resolution: "320",
                Container: "ts"
            }, {
                Name: "Generic - 4K",
                Resolution: "4k",
                Container: "mp4"
            }, {
                Name: "Generic - 1080P",
                Resolution: "1080",
                Container: "mp4"
            }, {
                Name: "Generic - 720P",
                Resolution: "720",
                Container: "mp4"
            }, {
                Name: "Generic - 480P",
                Resolution: "480",
                Container: "mp4"
            }, {
                Name: "Generic - 320P",
                Resolution: "320",
                Container: "mp4"
            }],
            new_presets: [],
            age: null,
            upload_type_is: false,
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null
                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            uploadFormData: new FormData(),
            apiFormData: new FormData(),
            cloud_type: false,
            category: null
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        },
        ListProduction: function ListProduction(state) {
            return state.productions.ListProduction;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'movie');
        this.$store.dispatch("LIST_PRODUCTION");
    },
    mounted: function mounted() {
        var _this = this;

        // Listen for the 'NewBlogPost' event in the 'team.1' private channel
        Echo.channel("progress").listen("EventTrigger", function (payload) {
            if (payload.progress.progress < 2) {
                _this.$store.commit("UPDATE_PROGRESS_DATA", {
                    key: _this.countUploadData,
                    id: payload.progress.tmdb_id,
                    parameter: "message",
                    object: "upload",
                    value: payload.progress.message
                });
                _this.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                    key: _this.countUploadData,
                    data: _this.uploadData[_this.countUploadData]
                });
            }

            _this.$store.commit("UPDATE_PROGRESS_DATA", {
                key: _this.countUploadData,
                id: payload.progress.tmdb_id,
                parameter: "progress",
                object: "upload",
                value: payload.progress.progress
            });

            _this.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                key: _this.countUploadData,
                data: _this.uploadData[_this.countUploadData]
            });
        });
    },


    methods: {
        MOVIEDB_API: function MOVIEDB_API() {
            var _this2 = this;

            // Check count of upload data
            this.$store.commit("COUNT_UPLOAD_PROGRESS");

            // Upload video form data
            if (this.upload_type_is === "transcoding") {
                var video = document.querySelector("#video");
                this.uploadFormData.append("video", video.files[0]);
                this.uploadFormData.append("resolution", JSON.stringify(this.new_presets));
            } else if (this.upload_type_is === "externalUrl") {
                if (this.video_link.length > 0) {
                    this.uploadFormData.append("video_link", JSON.stringify(this.video_link));
                } else {
                    this.uploadFormData.append("video_link", "empty");
                }
            } else {
                this.uploadFormData.append("embed_code", JSON.stringify(this.embedCodeList));
            }

            // API form data
            this.apiFormData.append("id", this.id);
            this.apiFormData.append("age", this.age);
            this.apiFormData.append("category", this.category);
            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this2.disabled_button = true;

                    _this2.upload_data.api.show = true;
                    _this2.upload_data.id = _this2.id;

                    _this2.$store.commit("SET_PROGRESS_DATA", _this2.upload_data);
                    _this2.$store.commit("SET_UPLOAD_PROGRESS", _this2.uploadData[_this2.countUploadData]);
                    _this2.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                        key: _this2.countUploadData,
                        data: _this2.uploadData[_this2.countUploadData]
                    });

                    axios.post("/api/admin/new/movie/movieapi", _this2.apiFormData).then(function (response) {
                        if (response.status === 200) {
                            _this2.$store.commit("UPDATE_PROGRESS_DATA", {
                                key: _this2.countUploadData,
                                parameter: "success_message",
                                object: "api",
                                value: response.data.message
                            });
                            _this2.$store.commit("UPDATE_PROGRESS_DATA", {
                                key: _this2.countUploadData,
                                parameter: "progress",
                                object: "api",
                                value: 100
                            });
                            _this2.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                                key: _this2.countUploadData,
                                data: _this2.uploadData[_this2.countUploadData]
                            });

                            _this2.MOVIEVIDEO_S3(response.data.id);

                            _this2.$router.push({
                                name: "movies-manage"
                            });
                        }
                    }, function (error) {
                        _this2.$store.commit("UPDATE_PROGRESS_DATA", {
                            key: _this2.countUploadData,
                            parameter: "error_message",
                            object: "api",
                            value: error.response.data.message
                        });
                        _this2.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                            key: _this2.countUploadData,
                            data: _this2.uploadData[_this2.countUploadData]
                        });

                        _this2.disabled_button = false;
                    });
                }
            });
        },
        MOVIEVIDEO_S3: function MOVIEVIDEO_S3(id) {
            var _this3 = this;

            this.uploadFormData.append("id", id);
            this.uploadFormData.append("tmdb_id", this.id);

            // Cloud Type
            this.uploadFormData.append("cloud_type", this.cloud_type);

            this.upload_data.upload.show = true;
            this.$store.commit("UPDATE_PROGRESS_DATA", {
                key: this.countUploadData,
                parameter: "show",
                object: "upload",
                value: true
            });

            // Progress
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this3.upload_data.upload.progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);

                    _this3.$store.commit("UPDATE_PROGRESS_DATA", {
                        key: _this3.countUploadData,
                        parameter: "progress",
                        object: "upload",
                        value: _this3.upload_data.upload.progress
                    });

                    _this3.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });
                }
            };
            // Store data
            axios.post("/api/admin/new/movie/movievideo", this.uploadFormData, progress).then(function (response) {
                if (response.status === 200) {
                    _this3.$store.commit("UPDATE_PROGRESS_DATA", {
                        key: _this3.countUploadData,
                        parameter: "success_message",
                        object: "upload",
                        value: response.data.message
                    });

                    _this3.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });

                    alertify.logPosition("top right");
                    alertify.success("Successful upload");
                    setTimeout(function () {
                        _this3.showProgress = false;
                    }, 500);
                }
            }, function (error) {
                _this3.$store.commit("UPDATE_PROGRESS_DATA", {
                    key: _this3.countUploadData,
                    parameter: "error_message",
                    object: "upload",
                    value: error.response.data.message
                });
                _this3.$store.commit("UPDATE_UPLOAD_PROGRESS_DATA", {
                    key: _this3.countUploadData,
                    data: _this3.uploadData[_this3.countUploadData]
                });
            });
        },
        Embed_Code_Add: function Embed_Code_Add(item) {
            alert(item);
        },
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        }
    }
});

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "title p-2" }, [_vm._v("API Upload")]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-lg-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 cloud-upload" }, [
                _c("div", { staticClass: "row" }, [
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "local"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "local-cloud-logo",
                          class: { active: _vm.cloud_type === "local" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/local-cloud.svg",
                              alt: "local-cloud",
                              width: "90px"
                            }
                          })
                        ]
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "aws"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "aws-cloud-logo",
                          class: { active: _vm.cloud_type === "aws" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/aws-cloud.svg",
                              alt: "aws-cloud",
                              width: "120px"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _vm.cloud_type
              ? _c(
                  "div",
                  [
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(1),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.id,
                              expression: "id"
                            },
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|numeric",
                              expression: "'required|numeric'"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "id",
                            type: "text",
                            placeholder: "Movie id"
                          },
                          domProps: { value: _vm.id },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.id = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("id"),
                                expression: "errors.has('id')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("id")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", { attrs: { for: "age" } }, [
                          _vm._v("Choose way of upload")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.upload_type_is,
                                expression: "upload_type_is"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "upload_type", id: "upload_type" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.upload_type_is = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", { attrs: { value: "transcoding" } }, [
                              _vm._v("Upload & Transcoding")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "externalUrl" } }, [
                              _vm._v("Upload Using External Link")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "embedCode" } }, [
                              _vm._v(" Upload Using Embed Code")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("upload_type"),
                                expression: "errors.has('upload_type')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("upload_type")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(2),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.category,
                                expression: "category"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "category", id: "category" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.category = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.categories_list.categories, function(
                            item,
                            index
                          ) {
                            return _c(
                              "option",
                              { key: index, domProps: { value: item.id } },
                              [
                                _vm._v(
                                  "\n                                        " +
                                    _vm._s(item.name) +
                                    "\n                                    "
                                )
                              ]
                            )
                          }),
                          0
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("category"),
                                expression: "errors.has('category')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("category")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", { attrs: { for: "age" } }, [
                          _vm._v("Rating system")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.age,
                                expression: "age"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "age", id: "age" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.age = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", [_vm._v("G")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("PG")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("PG-13")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("R")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("X")])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("age"),
                                expression: "errors.has('age')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("age")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is === "transcoding",
                              expression: "upload_type_is === 'transcoding' "
                            }
                          ],
                          staticClass: "transcoding-section"
                        },
                        [
                          _vm.upload_type_is === "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12 col-sm-2" }, [
                                  _c("label", [_vm._v("Movie")])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    staticClass: "inputfile",
                                    attrs: { type: "file", id: "video" },
                                    on: {
                                      change: function($event) {
                                        return _vm.infoShow(
                                          "video",
                                          "videoFileDetails"
                                        )
                                      }
                                    }
                                  }),
                                  _vm._v(" "),
                                  _c(
                                    "label",
                                    {
                                      attrs: { id: "videoLabel", for: "video" }
                                    },
                                    [
                                      _vm._v(
                                        "Choose a movie video\n                                            "
                                      ),
                                      _c("br"),
                                      _vm._v(" "),
                                      _c("p", {
                                        attrs: { id: "videoFileDetails" }
                                      })
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is === "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", { attrs: { for: "presets" } }, [
                                    _vm._v("Select Presets")
                                  ]),
                                  _vm._v(" "),
                                  _c(
                                    "select",
                                    {
                                      directives: [
                                        {
                                          name: "validate",
                                          rawName: "v-validate",
                                          value: "required",
                                          expression: "'required'"
                                        },
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.new_presets,
                                          expression: "new_presets"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      staticStyle: { height: "200px" },
                                      attrs: { multiple: "", id: "presets" },
                                      on: {
                                        change: function($event) {
                                          var $$selectedVal = Array.prototype.filter
                                            .call(
                                              $event.target.options,
                                              function(o) {
                                                return o.selected
                                              }
                                            )
                                            .map(function(o) {
                                              var val =
                                                "_value" in o
                                                  ? o._value
                                                  : o.value
                                              return val
                                            })
                                          _vm.new_presets = $event.target
                                            .multiple
                                            ? $$selectedVal
                                            : $$selectedVal[0]
                                        }
                                      }
                                    },
                                    _vm._l(_vm.presets, function(item, index) {
                                      return _c(
                                        "option",
                                        {
                                          key: index,
                                          domProps: { value: item }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                                " +
                                              _vm._s(item.Name) +
                                              "\n                                            "
                                          )
                                        ]
                                      )
                                    }),
                                    0
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has("presets"),
                                          expression: "errors.has('presets')"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first("presets"))
                                      )
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "externalUrl",
                              expression: "upload_type_is == 'externalUrl'"
                            }
                          ],
                          staticClass: "external-link"
                        },
                        [
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (360p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[0],
                                        expression: "video_link[0]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "320P Movie"
                                    },
                                    domProps: { value: _vm.video_link[0] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          0,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (480p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[1],
                                        expression: "video_link[1]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "480P Movie"
                                    },
                                    domProps: { value: _vm.video_link[1] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          1,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (720p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[2],
                                        expression: "video_link[2]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "720P Movie"
                                    },
                                    domProps: { value: _vm.video_link[2] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          2,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (1080p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[3],
                                        expression: "video_link[3]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "1080P Movie"
                                    },
                                    domProps: { value: _vm.video_link[3] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          3,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (4k)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[4],
                                        expression: "video_link[4]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "4k Movie"
                                    },
                                    domProps: { value: _vm.video_link[4] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          4,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.upload_type_is === "embedCode",
                                expression: "upload_type_is === 'embedCode'"
                              }
                            ],
                            staticClass: "embed-code"
                          },
                          [
                            _c(
                              "div",
                              { staticClass: "add float-right mb-3 mt-3" },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-warning",
                                    on: {
                                      click: function($event) {
                                        return _vm.embedCodeList.push({
                                          embed_provider: "",
                                          embed_code: ""
                                        })
                                      }
                                    }
                                  },
                                  [
                                    _c("i", { staticClass: "fa fa-plus" }),
                                    _vm._v(
                                      " Add\n                                        "
                                    )
                                  ]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.embedCodeList, function(item, index) {
                              return _c(
                                "div",
                                { key: index, staticClass: "embed-list" },
                                [
                                  _c("hr"),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "production" } },
                                      [_vm._v("Embed Provider")]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.embed_provider,
                                            expression: "item.embed_provider"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          name: "productions",
                                          id: "production"
                                        },
                                        on: {
                                          change: function($event) {
                                            var $$selectedVal = Array.prototype.filter
                                              .call(
                                                $event.target.options,
                                                function(o) {
                                                  return o.selected
                                                }
                                              )
                                              .map(function(o) {
                                                var val =
                                                  "_value" in o
                                                    ? o._value
                                                    : o.value
                                                return val
                                              })
                                            _vm.$set(
                                              item,
                                              "embed_provider",
                                              $event.target.multiple
                                                ? $$selectedVal
                                                : $$selectedVal[0]
                                            )
                                          }
                                        }
                                      },
                                      _vm._l(_vm.ListProduction, function(
                                        item1,
                                        index1
                                      ) {
                                        return _c(
                                          "option",
                                          {
                                            key: index1,
                                            domProps: { value: item1.id }
                                          },
                                          [
                                            _vm._v(
                                              "\n                                                    " +
                                                _vm._s(item1.name) +
                                                "\n                                                "
                                            )
                                          ]
                                        )
                                      }),
                                      0
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value: _vm.errors.has("production"),
                                            expression:
                                              "errors.has('production')"
                                          }
                                        ],
                                        staticClass: "c-danger-text"
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(_vm.errors.first("production"))
                                        )
                                      ]
                                    )
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "embed-code" } },
                                      [
                                        _vm._v(
                                          "Movie\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("Embed Code")]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c("textarea", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: item.embed_code,
                                          expression: "item.embed_code"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: {
                                        type: "text",
                                        id: "embed-code",
                                        placeholder: "Embed code"
                                      },
                                      domProps: { value: item.embed_code },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            item,
                                            "embed_code",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ])
                                ]
                              )
                            })
                          ],
                          2
                        )
                      ])
                    ])
                  ],
                  1
                )
              : _vm._e()
          ])
        ]),
        _vm._v(" "),
        _vm.cloud_type
          ? _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                !_vm.disabled_button
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.MOVIEDB_API(_vm.id)
                          }
                        }
                      },
                      [_vm._v("Upload\n                    ")]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.disabled_button
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [_vm._v("Loading")]
                    )
                  : _vm._e()
              ])
            ])
          : _vm._e()
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Movie ID ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-a9fc8c92", module.exports)
  }
}

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(482)
/* template */
var __vue_template__ = __webpack_require__(483)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/new-movie-custom.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f60c0d38", Component.options)
  } else {
    hotAPI.reload("data-v-f60c0d38", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 482 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: "",
            year: "",
            genres: [],
            age: null,
            overview: "",
            runtime: "",
            rate: "",
            youtube: "",
            id: "",
            video_link: [],
            embed: "",
            embedCodeList: [],
            presets: [{
                'Name': 'HLS - 16000Kilorate - 4K',
                'Resolution': '4k',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 4000Kilorate - 1080P',
                'Resolution': '1080',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 2500Kilorate - 720P',
                'Resolution': '720',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 700Kilorate - 480P',
                'Resolution': '480',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 400Kilorate - 320P',
                'Resolution': '320',
                'Container': 'ts'
            }, {
                'Name': 'Generic - 4K',
                'Resolution': '4k',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 1080P',
                'Resolution': '1080',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 720P',
                'Resolution': '720',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 480P',
                'Resolution': '480',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 320P',
                'Resolution': '320',
                'Container': 'mp4'
            }],
            new_presets: [],
            count: "",
            //Cast
            cast1: "",
            cast2: "",
            cast3: "",
            cast4: "",
            upload_type_is: false,
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null
                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            uploadFormData: new FormData(),
            apiFormData: new FormData(),
            cloud_type: false,
            category: null
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        genre_list: function genre_list(state) {
            return state.genres.data;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        },
        ListProduction: function ListProduction(state) {
            return state.productions.ListProduction;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'movie');
        this.$store.dispatch("LIST_PRODUCTION");
        this.$store.dispatch("GET_ALL_GENRES");
    },
    mounted: function mounted() {
        var _this = this;

        // Listen for the 'NewBlogPost' event in the 'team.1' private channel
        Echo.channel('progress').listen('EventTrigger', function (payload) {
            if (payload.progress.progress < 2) {
                _this.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    id: payload.progress.tmdb_id,
                    parameter: 'message',
                    object: 'upload',
                    value: payload.progress.message
                });
                _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    data: _this.uploadData[_this.countUploadData]
                });
            }

            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                key: _this.countUploadData,
                id: payload.progress.tmdb_id,
                parameter: 'progress',
                object: 'upload',
                value: payload.progress.progress
            });

            _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                key: _this.countUploadData,
                data: _this.uploadData[_this.countUploadData]
            });
        });
    },


    methods: {
        MOVIE_UPLOAD: function MOVIE_UPLOAD() {
            var _this2 = this;

            var cast1 = document.querySelector("#cast1");
            var cast2 = document.querySelector("#cast2");
            var cast3 = document.querySelector("#cast3");
            var cast4 = document.querySelector("#cast4");
            var poster = document.querySelector("#poster");
            var backdrop = document.querySelector("#backdrop");
            // Cast
            this.apiFormData.append("image1", cast1.files[0]);
            this.apiFormData.append("image2", cast2.files[0]);
            this.apiFormData.append("image3", cast3.files[0]);
            this.apiFormData.append("image4", cast4.files[0]);
            this.apiFormData.append("cast1", this.cast1);
            this.apiFormData.append("cast2", this.cast2);
            this.apiFormData.append("cast3", this.cast3);
            this.apiFormData.append("cast4", this.cast4);

            // Details
            this.apiFormData.append("name", this.name);
            this.apiFormData.append("year", this.year);
            this.apiFormData.append("genres", this.genres);
            this.apiFormData.append("overview", this.overview);
            this.apiFormData.append("runtime", this.runtime);
            this.apiFormData.append("rate", this.rate);
            this.apiFormData.append("youtube", this.youtube);
            this.apiFormData.append("poster", poster.files[0]);
            this.apiFormData.append("backdrop", backdrop.files[0]);
            this.apiFormData.append("age", this.age);
            this.apiFormData.append("category", this.category);
            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // Check count of upload data
            this.$store.commit('COUNT_UPLOAD_PROGRESS');

            // Upload video form data
            if (this.upload_type_is == 'transcoding') {
                var video = document.querySelector("#video");
                this.uploadFormData.append("video", video.files[0]);
                this.uploadFormData.append("resolution", JSON.stringify(this.new_presets));
            } else if (this.upload_type_is == 'externalUrl') {
                if (this.video_link.length > 0) {
                    this.uploadFormData.append("video_link", JSON.stringify(this.video_link));
                } else {
                    this.uploadFormData.append("video_link", "empty");
                }
            } else {
                this.uploadFormData.append("embed_code", JSON.stringify(this.embedCodeList));
            }

            this.$validator.validateAll().then(function (result) {
                if (result) {

                    // disable button
                    _this2.disabled_button = true;

                    _this2.upload_data.api.show = true;
                    _this2.upload_data.id = _this2.name;

                    _this2.$store.commit('SET_PROGRESS_DATA', _this2.upload_data);
                    _this2.$store.commit('SET_UPLOAD_PROGRESS', _this2.uploadData[_this2.countUploadData]);
                    _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this2.countUploadData,
                        data: _this2.uploadData[_this2.countUploadData]
                    });

                    axios.post("/api/admin/new/movie/customupload", _this2.apiFormData).then(function (response) {
                        if (response.status === 200) {

                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'progress',
                                object: 'api',
                                value: 100
                            });

                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'success_message',
                                object: 'api',
                                value: response.data.message
                            });

                            _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                data: _this2.uploadData[_this2.countUploadData]
                            });

                            _this2.MOVIEVIDEO_S3(response.data.id);

                            _this2.$router.push({
                                name: "movies-manage"
                            });
                        }
                    }, function (error) {
                        _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                            key: _this2.countUploadData,
                            parameter: 'error_message',
                            object: 'api',
                            value: error.response.data.message
                        });
                        _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                            key: _this2.countUploadData,
                            data: _this2.uploadData[_this2.countUploadData]
                        });

                        _this2.disabled_button = false;
                    });
                }
            });
        },
        MOVIEVIDEO_S3: function MOVIEVIDEO_S3(id) {
            var _this3 = this;

            this.uploadFormData.append("id", id);
            this.uploadFormData.append("tmdb_id", this.name);
            // Cloud Type
            this.uploadFormData.append("cloud_type", this.cloud_type);

            this.upload_data.upload.show = true;
            this.$store.commit('UPDATE_PROGRESS_DATA', {
                key: this.countUploadData,
                parameter: 'show',
                object: 'upload',
                value: true
            });

            // Progress
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this3.upload_data.upload.progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);

                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'progress',
                        object: 'upload',
                        value: _this3.upload_data.upload.progress
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });
                }
            };
            // Store data
            axios.post("/api/admin/new/movie/movievideo", this.uploadFormData, progress).then(function (response) {
                if (response.status === 200) {

                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'success_message',
                        object: 'upload',
                        value: response.data.message
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });

                    alertify.logPosition("top right");
                    alertify.success("Successful upload");
                    setTimeout(function () {
                        _this3.showProgress = false;
                    }, 500);
                }
            }, function (error) {
                _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    parameter: 'error_message',
                    object: 'upload',
                    value: error.response.data.message
                });
                _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    data: _this3.uploadData[_this3.countUploadData]
                });
            });
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        },
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        }
    }
});

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "title p-2" }, [_vm._v("Movie Custom Upload")]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-lg-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 cloud-upload" }, [
                _c("div", { staticClass: "row" }, [
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "local"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "local-cloud-logo",
                          class: { active: _vm.cloud_type === "local" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/local-cloud.svg",
                              alt: "local-cloud",
                              width: "90px"
                            }
                          })
                        ]
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "aws"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "aws-cloud-logo",
                          class: { active: _vm.cloud_type === "aws" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/aws-cloud.svg",
                              alt: "aws-cloud",
                              width: "120px"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _vm.cloud_type
              ? _c(
                  "div",
                  [
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(1),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|max:30",
                              expression: "'required|max:30'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.name,
                              expression: "name"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "name",
                            type: "text",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.name },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.name = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name"),
                                expression: "errors.has('name')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("name")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(2),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|numeric|max:4",
                              expression: "'required|numeric|max:4'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.year,
                              expression: "year"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "year",
                            type: "text",
                            placeholder: "Years"
                          },
                          domProps: { value: _vm.year },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.year = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("year"),
                                expression: "errors.has('year')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("year")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _vm.name === false
                          ? _c(
                              "div",
                              { staticClass: "form-control-feedback" },
                              [_vm._v("Name of movie.")]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c("label", { attrs: { for: "genres" } }, [
                          _vm._v("Genres")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.genres,
                                expression: "genres"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: {
                              multiple: "",
                              name: "genres",
                              id: "genres"
                            },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.genres = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.genre_list, function(item, index) {
                            return _c(
                              "option",
                              { key: index, domProps: { value: item.name } },
                              [
                                _vm._v(
                                  "\n                                        " +
                                    _vm._s(item.name) +
                                    "\n                                    "
                                )
                              ]
                            )
                          }),
                          0
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("genres"),
                              expression: "errors.has('genres')"
                            }
                          ],
                          staticClass: " is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("genres")))]
                      )
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", { attrs: { for: "genres" } }, [
                          _vm._v("Rating system")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.age,
                                expression: "age"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "age", id: "age" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.age = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", [_vm._v("G")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("PG")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("PG-13")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("R")]),
                            _vm._v(" "),
                            _c("option", [_vm._v("X")])
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("age"),
                              expression: "errors.has('age')"
                            }
                          ],
                          staticClass: " is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("age")))]
                      )
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(3),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("textarea", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required",
                              expression: "'required'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.overview,
                              expression: "overview"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "overview",
                            type: "text",
                            placeholder: "Overview"
                          },
                          domProps: { value: _vm.overview },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.overview = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("overview"),
                                expression: "errors.has('overview')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("overview")) +
                                "\n                        "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(4),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|decimal|max:3",
                              expression: "'required|decimal|max:3'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.runtime,
                              expression: "runtime"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "runtime",
                            type: "text",
                            placeholder: "Runtime"
                          },
                          domProps: { value: _vm.runtime },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.runtime = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("runtime"),
                                expression: "errors.has('runtime')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("runtime")) +
                                "\n                        "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(5),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|decimal:1|max:3",
                              expression: "'required|decimal:1|max:3'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.rate,
                              expression: "rate"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "rate",
                            type: "text",
                            placeholder: "Rate"
                          },
                          domProps: { value: _vm.rate },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.rate = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("rate"),
                                expression: "errors.has('rate')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("rate")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(6),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "url|max:300",
                              expression: "'url|max:300'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.youtube,
                              expression: "youtube"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "youtube",
                            type: "text",
                            placeholder: "Trailer"
                          },
                          domProps: { value: _vm.youtube },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.youtube = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("youtube"),
                                expression: "errors.has('youtube')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("youtube")) +
                                "\n                        "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(7),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.category,
                                expression: "category"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "category", id: "category" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.category = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.categories_list.categories, function(
                            item,
                            index
                          ) {
                            return _c(
                              "option",
                              { key: index, domProps: { value: item.id } },
                              [
                                _vm._v(
                                  "\n                                        " +
                                    _vm._s(item.name) +
                                    "\n                                    "
                                )
                              ]
                            )
                          }),
                          0
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("category"),
                                expression: "errors.has('category')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("category")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(8),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|image",
                              expression: "'required|image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: { type: "file", id: "poster", name: "poster" },
                          on: {
                            change: function($event) {
                              return _vm.readImage("poster", "posterFileImage")
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(9),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: {
                            src: "",
                            id: "posterFileImage",
                            width: "200"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("poster"),
                                expression: "errors.has('poster')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("poster")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(10),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|image",
                              expression: "'required|image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: {
                            type: "file",
                            id: "backdrop",
                            name: "backdrop"
                          },
                          on: {
                            change: function($event) {
                              return _vm.readImage(
                                "backdrop",
                                "backdropFileImage"
                              )
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(11),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: {
                            src: "",
                            id: "backdropFileImage",
                            width: "200"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("backdrop"),
                                expression: "errors.has('backdrop')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", { attrs: { for: "upload" } }, [
                          _vm._v("Choose way of upload")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.upload_type_is,
                                expression: "upload_type_is"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "upload_type_is", id: "upload" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.upload_type_is = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", { attrs: { value: "transcoding" } }, [
                              _vm._v("Upload & Transcoding")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "externalUrl" } }, [
                              _vm._v(" Upload External Link")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "embedCode" } }, [
                              _vm._v(" Upload Using Embed Code")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("upload_type_is"),
                                expression: "errors.has('upload_type_is')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("upload_type_is")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "transcoding",
                              expression: "upload_type_is == 'transcoding' "
                            }
                          ],
                          staticClass: "transcoding-section"
                        },
                        [
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [_vm._v("Movie")])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    staticClass: "inputfile",
                                    attrs: { type: "file", id: "video" },
                                    on: {
                                      change: function($event) {
                                        return _vm.infoShow(
                                          "video",
                                          "videoFileDetails"
                                        )
                                      }
                                    }
                                  }),
                                  _vm._v(" "),
                                  _c(
                                    "label",
                                    {
                                      attrs: { id: "videoLabel", for: "video" }
                                    },
                                    [
                                      _vm._v(
                                        "Choose a movie video\n                                            "
                                      ),
                                      _c("br"),
                                      _vm._v(" "),
                                      _c("p", {
                                        attrs: { id: "videoFileDetails" }
                                      })
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("Select Presets")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c(
                                    "select",
                                    {
                                      directives: [
                                        {
                                          name: "validate",
                                          rawName: "v-validate",
                                          value: "required",
                                          expression: "'required'"
                                        },
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.new_presets,
                                          expression: "new_presets"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      staticStyle: { height: "200px" },
                                      attrs: { multiple: "", id: "presets" },
                                      on: {
                                        change: function($event) {
                                          var $$selectedVal = Array.prototype.filter
                                            .call(
                                              $event.target.options,
                                              function(o) {
                                                return o.selected
                                              }
                                            )
                                            .map(function(o) {
                                              var val =
                                                "_value" in o
                                                  ? o._value
                                                  : o.value
                                              return val
                                            })
                                          _vm.new_presets = $event.target
                                            .multiple
                                            ? $$selectedVal
                                            : $$selectedVal[0]
                                        }
                                      }
                                    },
                                    _vm._l(_vm.presets, function(item, index) {
                                      return _c(
                                        "option",
                                        {
                                          key: index,
                                          domProps: { value: item }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                                " +
                                              _vm._s(item.Name) +
                                              "\n                                            "
                                          )
                                        ]
                                      )
                                    }),
                                    0
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has("presets"),
                                          expression: "errors.has('presets')"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first("presets"))
                                      )
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "externalUrl",
                              expression: "upload_type_is == 'externalUrl'"
                            }
                          ],
                          staticClass: "external-link"
                        },
                        [
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (360p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[0],
                                        expression: "video_link[0]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "320P Movie"
                                    },
                                    domProps: { value: _vm.video_link[0] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          0,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (480p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[1],
                                        expression: "video_link[1]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "480P Movie"
                                    },
                                    domProps: { value: _vm.video_link[1] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          1,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (720p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[2],
                                        expression: "video_link[2]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "720P Movie"
                                    },
                                    domProps: { value: _vm.video_link[2] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          2,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (1080p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[3],
                                        expression: "video_link[3]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "1080P Movie"
                                    },
                                    domProps: { value: _vm.video_link[3] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          3,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Movie\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (4k)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[4],
                                        expression: "video_link[4]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "4k Movie"
                                    },
                                    domProps: { value: _vm.video_link[4] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          4,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.upload_type_is === "embedCode",
                                expression: "upload_type_is === 'embedCode'"
                              }
                            ],
                            staticClass: "embed-code"
                          },
                          [
                            _c(
                              "div",
                              { staticClass: "add float-right mb-3 mt-3" },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-warning",
                                    on: {
                                      click: function($event) {
                                        return _vm.embedCodeList.push({
                                          embed_provider: "",
                                          embed_code: ""
                                        })
                                      }
                                    }
                                  },
                                  [
                                    _c("i", { staticClass: "fa fa-plus" }),
                                    _vm._v(
                                      " Add\n                                        "
                                    )
                                  ]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.embedCodeList, function(item, index) {
                              return _c(
                                "div",
                                { key: index, staticClass: "embed-list" },
                                [
                                  _c("hr"),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "production" } },
                                      [_vm._v("Embed Provider")]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.embed_provider,
                                            expression: "item.embed_provider"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          name: "productions",
                                          id: "production"
                                        },
                                        on: {
                                          change: function($event) {
                                            var $$selectedVal = Array.prototype.filter
                                              .call(
                                                $event.target.options,
                                                function(o) {
                                                  return o.selected
                                                }
                                              )
                                              .map(function(o) {
                                                var val =
                                                  "_value" in o
                                                    ? o._value
                                                    : o.value
                                                return val
                                              })
                                            _vm.$set(
                                              item,
                                              "embed_provider",
                                              $event.target.multiple
                                                ? $$selectedVal
                                                : $$selectedVal[0]
                                            )
                                          }
                                        }
                                      },
                                      _vm._l(_vm.ListProduction, function(
                                        item1,
                                        index1
                                      ) {
                                        return _c(
                                          "option",
                                          {
                                            key: index1,
                                            domProps: { value: item1.id }
                                          },
                                          [
                                            _vm._v(
                                              "\n                                                    " +
                                                _vm._s(item1.name) +
                                                "\n                                                "
                                            )
                                          ]
                                        )
                                      }),
                                      0
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value: _vm.errors.has("production"),
                                            expression:
                                              "errors.has('production')"
                                          }
                                        ],
                                        staticClass: "c-danger-text"
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(_vm.errors.first("production"))
                                        )
                                      ]
                                    )
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "embed-code" } },
                                      [
                                        _vm._v(
                                          "Movie\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("Embed Code")]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c("textarea", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: item.embed_code,
                                          expression: "item.embed_code"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: {
                                        type: "text",
                                        id: "embed-code",
                                        placeholder: "Embed code"
                                      },
                                      domProps: { value: item.embed_code },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            item,
                                            "embed_code",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ])
                                ]
                              )
                            })
                          ],
                          2
                        )
                      ])
                    ])
                  ],
                  1
                )
              : _vm._e()
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 col-sm-6" }, [
            _vm.cloud_type
              ? _c("div", [
                  _c(
                    "form",
                    { staticClass: "cover__form", attrs: { id: "form" } },
                    [
                      _vm._m(12),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _vm._m(13),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "max:50",
                                expression: "'max:50'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.cast1,
                                expression: "cast1"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: {
                              name: "name1",
                              type: "text",
                              placeholder: "Name"
                            },
                            domProps: { value: _vm.cast1 },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.cast1 = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("br"),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("name1"),
                                  expression: "errors.has('name1')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.errors.first("name4")) +
                                  "\n                            "
                              )
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "image",
                                expression: "'image'"
                              }
                            ],
                            staticClass: "inputfile",
                            attrs: { type: "file", id: "cast1", name: "cast4" },
                            on: {
                              change: function($event) {
                                return _vm.readImage("cast1", "cast1FileImage")
                              }
                            }
                          }),
                          _vm._v(" "),
                          _vm._m(14),
                          _vm._v(" "),
                          _c("img", {
                            staticStyle: { display: "none" },
                            attrs: {
                              src: "",
                              id: "cast1FileImage",
                              width: "200"
                            }
                          }),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("cast1"),
                                  expression: "errors.has('cast1')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [_vm._v(_vm._s(_vm.errors.first("cast1")))]
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _vm._m(15),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "max:50",
                                expression: "'max:50'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.cast2,
                                expression: "cast2"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: {
                              name: "name2",
                              type: "text",
                              placeholder: "Name"
                            },
                            domProps: { value: _vm.cast2 },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.cast2 = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("br"),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("name2"),
                                  expression: "errors.has('name2')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.errors.first("name2")) +
                                  "\n                            "
                              )
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "image",
                                expression: "'image'"
                              }
                            ],
                            staticClass: "inputfile",
                            attrs: { type: "file", id: "cast2", name: "cast2" },
                            on: {
                              change: function($event) {
                                return _vm.readImage("cast2", "cast2FileImage")
                              }
                            }
                          }),
                          _vm._v(" "),
                          _vm._m(16),
                          _vm._v(" "),
                          _c("img", {
                            staticStyle: { display: "none" },
                            attrs: {
                              src: "",
                              id: "cast2FileImage",
                              width: "200"
                            }
                          }),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("cast2"),
                                  expression: "errors.has('cast2')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [_vm._v(_vm._s(_vm.errors.first("cast2")))]
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _vm._m(17),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "max:50",
                                expression: "'max:50'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.cast3,
                                expression: "cast3"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: {
                              name: "name3",
                              type: "text",
                              placeholder: "Name"
                            },
                            domProps: { value: _vm.cast3 },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.cast3 = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("br"),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("name3"),
                                  expression: "errors.has('name3')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.errors.first("name3")) +
                                  "\n                            "
                              )
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "image",
                                expression: "'image'"
                              }
                            ],
                            staticClass: "inputfile",
                            attrs: { type: "file", id: "cast3", name: "cast3" },
                            on: {
                              change: function($event) {
                                return _vm.readImage("cast3", "cast3FileImage")
                              }
                            }
                          }),
                          _vm._v(" "),
                          _vm._m(18),
                          _vm._v(" "),
                          _c("img", {
                            staticStyle: { display: "none" },
                            attrs: {
                              src: "",
                              id: "cast3FileImage",
                              width: "200"
                            }
                          }),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("cast3"),
                                  expression: "errors.has('cast3')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [_vm._v(_vm._s(_vm.errors.first("cast3")))]
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _vm._m(19),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "max:50",
                                expression: "'max:50'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.cast4,
                                expression: "cast4"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: {
                              name: "name4",
                              type: "text",
                              placeholder: "Name"
                            },
                            domProps: { value: _vm.cast4 },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.cast4 = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("br"),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("name4"),
                                  expression: "errors.has('name4')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.errors.first("name4")) +
                                  "\n                            "
                              )
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "image",
                                expression: "'image'"
                              }
                            ],
                            staticClass: "inputfile",
                            attrs: { type: "file", id: "cast4", name: "cast4" },
                            on: {
                              change: function($event) {
                                return _vm.readImage("cast4", "cast4FileImage")
                              }
                            }
                          }),
                          _vm._v(" "),
                          _vm._m(20),
                          _vm._v(" "),
                          _c("img", {
                            staticStyle: { display: "none" },
                            attrs: {
                              src: "",
                              id: "cast4FileImage",
                              width: "200"
                            }
                          }),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("cast4"),
                                  expression: "errors.has('cast4')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [_vm._v(_vm._s(_vm.errors.first("cast4")))]
                          )
                        ])
                      ])
                    ]
                  )
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _vm.cloud_type
            ? _c("div", [
                _c("div", { staticClass: "col-12" }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("div", { staticClass: "col-12" }, [
                      !_vm.disabled_button
                        ? _c(
                            "button",
                            {
                              staticClass: "btn btn-sm btn-warning",
                              on: {
                                click: function($event) {
                                  return _vm.MOVIE_UPLOAD(_vm.name)
                                }
                              }
                            },
                            [_vm._v("Upload\n                                ")]
                          )
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.disabled_button
                        ? _c(
                            "button",
                            {
                              staticClass: "btn btn-md btn-warning",
                              attrs: { disabled: "" }
                            },
                            [
                              _vm._v(
                                "Loading\n                                "
                              )
                            ]
                          )
                        : _vm._e()
                    ])
                  ])
                ])
              ])
            : _vm._e()
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Years")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Overview")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("Runtime\n                                    "),
        _c("small", [_vm._v("(In minutes)")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("Rate\n                                    "),
        _c("small", [_vm._v("(From 1 to 10)")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("Trailer\n                                    "),
        _c("small", [_vm._v("(Youtube)")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Poster")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "posterLabel", for: "poster" } }, [
      _vm._v("Choose a poster\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-group" }, [
      _c("div", { staticClass: "col-12" }, [
        _c(
          "div",
          { staticClass: "alert alert-info", attrs: { role: "alert" } },
          [
            _c("strong", [_vm._v("If you upload ! ")]),
            _vm._v(
              " Required to add name and image\n                                    "
            )
          ]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Cast (1)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast1Label", for: "cast1" } }, [
      _vm._v("Choose a image\n                                        "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Cast (2)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast2Label", for: "cast2" } }, [
      _vm._v("Choose a image\n                                        "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Cast (3)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast3Label", for: "cast3" } }, [
      _vm._v("Choose a image\n                                        "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Cast (4)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast4Label", for: "cast4" } }, [
      _vm._v("Choose a image\n                                        "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-f60c0d38", module.exports)
  }
}

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(485)
/* template */
var __vue_template__ = __webpack_require__(486)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/movie-edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-49f2ba20", Component.options)
  } else {
    hotAPI.reload("data-v-49f2ba20", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 485 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            genres: [],
            showProgress: false,
            movieedit: false,
            embedCode: "",
            search_query: "",
            percentCompleted: 0,
            selectedCast3: null,
            error_message_edit: "",
            success_message_edit: ""
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.movies.data;
        },
        genre_list: function genre_list(state) {
            return state.genres.data;
        },
        data_actors: function data_actors(state) {
            return state.actors.data;
        },
        data_actors_search: function data_actors_search(state) {
            return state.actors.data_search;
        },
        button_loading: function button_loading(state) {
            return state.movies.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.movies.spinner_loading;
        },
        spinner_loading_actor: function spinner_loading_actor(state) {
            return state.actors.spinner_loading;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'movie');
        this.$store.dispatch("GET_ALL_GENRES");
    },


    watch: {
        search_query: function search_query(val) {
            if (val !== "") {
                this.$store.dispatch("GET_ACTORS_SEARCH", val);
            } else {
                this.$store.commit("CLEAR_SEARCH");
            }
        }
    },

    mounted: function mounted() {
        this.$store.dispatch("GET_MOVIE", this.$route.params.id);
        this.$store.dispatch("GET_ALL_ACTORS");
    },

    methods: {
        UPDATE: function UPDATE(id) {
            var _this = this;

            var poster = document.querySelector("#poster");
            var backdrop = document.querySelector("#backdrop");
            var formData = new FormData();
            formData.append("id", this.data.movie.id);
            formData.append("name", this.data.movie.name);
            formData.append("year", this.data.movie.year);
            formData.append("age", this.data.movie.age);
            formData.append("genres", this.genres);
            formData.append("overview", this.data.movie.overview);
            formData.append("runtime", this.data.movie.runtime);
            formData.append("rate", this.data.movie.rate);
            formData.append("youtube", this.data.movie.youtube);
            formData.append("poster", poster.files[0]);
            formData.append("backdrop", backdrop.files[0]);
            formData.append("cast", JSON.stringify(this.data.cast));
            formData.append("category", this.data.movie.category);
            formData.append("videos", JSON.stringify(this.data.videos));

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.showProgress = true;
                    _this.movieedit = true;
                    var progress = {
                        headers: {
                            "content-type": "multipart/form-data"
                        },
                        onUploadProgress: function onUploadProgress(progressEvent) {
                            _this.percentCompleted = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                        }
                    };
                    var _self = _this;
                    axios.post("api/admin/update/movie", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this.success_message_edit = response.data.message;
                            setTimeout(function () {
                                _this.$router.go(-1);
                            }, 2000);
                        }
                    });
                }
            }, function (error) {
                _this.error_message_edit = response.data.message;
            });
        },
        ADD_ACTOR: function ADD_ACTOR(key, type) {
            if (type === "default") {
                this.data.cast.push(this.data_actors.actors.data[key]);
                alertify.logPosition("top right");
                alertify.success(this.data_actors.actors.data[key].name + " has been added to cast");
            } else if (type === "search") {
                this.data.cast.push(this.data_actors_search.actors[key]);
                alertify.logPosition("top right");
                alertify.success(this.data_actors_search.actors[key].name + " has been added to cast");
            }
        },
        DELETE_ACTOR: function DELETE_ACTOR(key) {
            this.data.cast.splice(key, 1);
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [
            _vm._v(_vm._s(_vm.data.movie.name))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "actor-modal" }, [
            _c(
              "div",
              {
                staticClass: "modal fade",
                attrs: {
                  id: "GetActorModal",
                  tabindex: "-1",
                  role: "dialog",
                  "aria-labelledby": "GetActorModalLabel",
                  "aria-hidden": "true"
                }
              },
              [
                _c(
                  "div",
                  {
                    staticClass: "modal-dialog modal-lg",
                    attrs: { role: "document" }
                  },
                  [
                    _c("div", { staticClass: "modal-content" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c("div", { staticClass: "modal-body" }, [
                        _vm.spinner_loading_actor
                          ? _c(
                              "div",
                              { staticClass: "spinner-load" },
                              [_c("Loader")],
                              1
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("div", { staticClass: "form-group" }, [
                            _c("label", [_vm._v("Search")]),
                            _vm._v(" "),
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.search_query,
                                  expression: "search_query"
                                }
                              ],
                              staticClass: "form-control",
                              attrs: {
                                name: "search",
                                type: "text",
                                placeholder: "Search By Name"
                              },
                              domProps: { value: _vm.search_query },
                              on: {
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.search_query = $event.target.value
                                }
                              }
                            })
                          ]),
                          _vm._v(" "),
                          _vm.data_actors.actors !== null
                            ? _c("div", { staticClass: "col-12" }, [
                                _vm.data_actors_search === null
                                  ? _c(
                                      "div",
                                      { staticClass: "row" },
                                      _vm._l(
                                        _vm.data_actors.actors.data,
                                        function(item, index) {
                                          return _c(
                                            "div",
                                            {
                                              key: index,
                                              staticClass:
                                                "col-8 col-sm-3 mt-2 add-actor",
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_ACTOR(
                                                    index,
                                                    "default"
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "div",
                                                { staticClass: "image" },
                                                [
                                                  item.cloud == "local"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src: item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  item.cloud == "aws"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src:
                                                            _vm.md_cast +
                                                            item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  _c("p", [
                                                    _vm._v(_vm._s(item.name))
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        }
                                      ),
                                      0
                                    )
                                  : _c(
                                      "div",
                                      { staticClass: "row" },
                                      _vm._l(
                                        _vm.data_actors_search.actors,
                                        function(item, index) {
                                          return _c(
                                            "div",
                                            {
                                              key: index,
                                              staticClass:
                                                "col-8 col-sm-3 mt-2 add-actor",
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_ACTOR(
                                                    index,
                                                    "search"
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "div",
                                                { staticClass: "image" },
                                                [
                                                  item.cloud == "local" ||
                                                  item.cloud == null
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src: item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  item.cloud == "aws"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src:
                                                            _vm.md_cast +
                                                            item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  _c("p", [
                                                    _vm._v(_vm._s(item.name))
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        }
                                      ),
                                      0
                                    )
                              ])
                            : _c("div", [_vm._m(1)])
                        ])
                      ])
                    ])
                  ]
                )
              ]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "row" }, [
            _c("div", { staticClass: "col-12 col-md-6" }, [
              _c("div", { staticClass: "form-group" }, [
                _vm._m(2),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|max:30",
                        expression: "'required|max:30'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.name,
                        expression: "data.movie.name"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { name: "name", type: "text", placeholder: "Name" },
                    domProps: { value: _vm.data.movie.name },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.data.movie, "name", $event.target.value)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("name"),
                          expression: "errors.has('name')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("name")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(3),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|numeric|max:4",
                        expression: "'required|numeric|max:4'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.year,
                        expression: "data.movie.year"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { name: "year", type: "text", placeholder: "Years" },
                    domProps: { value: _vm.data.movie.year },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.data.movie, "year", $event.target.value)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("year"),
                          expression: "errors.has('year')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("year")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(4),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.genres,
                          expression: "genres"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { multiple: "", name: "genres" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.genres = $event.target.multiple
                            ? $$selectedVal
                            : $$selectedVal[0]
                        }
                      }
                    },
                    _vm._l(_vm.genre_list, function(item, index) {
                      return _c(
                        "option",
                        { key: index, domProps: { value: item.name } },
                        [_vm._v(_vm._s(item.name))]
                      )
                    }),
                    0
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(5),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.movie.category,
                          expression: "data.movie.category"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { name: "category", id: "category" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.$set(
                            _vm.data.movie,
                            "category",
                            $event.target.multiple
                              ? $$selectedVal
                              : $$selectedVal[0]
                          )
                        }
                      }
                    },
                    _vm._l(_vm.categories_list.categories, function(
                      item,
                      index
                    ) {
                      return _c(
                        "option",
                        { key: index, domProps: { value: item.id } },
                        [
                          _vm._v(
                            "\n                                " +
                              _vm._s(item.name) +
                              "\n                            "
                          )
                        ]
                      )
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("category"),
                          expression: "errors.has('category')"
                        }
                      ],
                      staticClass: " is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("category")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(6),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("textarea", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.overview,
                        expression: "data.movie.overview"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      name: "overview",
                      type: "text",
                      placeholder: "Overview"
                    },
                    domProps: { value: _vm.data.movie.overview },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(
                          _vm.data.movie,
                          "overview",
                          $event.target.value
                        )
                      }
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(7),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|decimal|max:10",
                        expression: "'required|decimal|max:10'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.runtime,
                        expression: "data.movie.runtime"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      name: "runtime",
                      type: "text",
                      placeholder: "Runtime"
                    },
                    domProps: { value: _vm.data.movie.runtime },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.data.movie, "runtime", $event.target.value)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("runtime"),
                          expression: "errors.has('runtime')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("runtime")) +
                          "\n                        "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(8),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|decimal|max:5",
                        expression: "'required|decimal|max:5'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.rate,
                        expression: "data.movie.rate"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { name: "rate", type: "text", placeholder: "Rate" },
                    domProps: { value: _vm.data.movie.rate },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.data.movie, "rate", $event.target.value)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("rate"),
                          expression: "errors.has('rate')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("rate")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(9),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "url|max:300",
                        expression: "'url|max:300'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.data.movie.youtube,
                        expression: "data.movie.youtube"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      name: "youtube",
                      type: "text",
                      placeholder: "Trailer"
                    },
                    domProps: { value: _vm.data.movie.youtube },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.data.movie, "youtube", $event.target.value)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("youtube"),
                          expression: "errors.has('youtube')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("youtube")) +
                          "\n                        "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12" }, [
                  _c("label", { attrs: { for: "age" } }, [
                    _vm._v("Rating system")
                  ]),
                  _vm._v(" "),
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.movie.age,
                          expression: "data.movie.age"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { name: "age", id: "age" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.$set(
                            _vm.data.movie,
                            "age",
                            $event.target.multiple
                              ? $$selectedVal
                              : $$selectedVal[0]
                          )
                        }
                      }
                    },
                    [
                      _c("option", [_vm._v("G")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("PG")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("PG-13")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("R")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("X")])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("age"),
                          expression: "errors.has('age')"
                        }
                      ],
                      staticClass: " is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("age")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(10),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "image",
                        expression: "'image'"
                      }
                    ],
                    staticClass: "inputfile",
                    attrs: { type: "file", id: "poster", name: "poster" },
                    on: {
                      change: function($event) {
                        return _vm.readImage("poster", "posterFileImage")
                      }
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(11),
                  _vm._v(" "),
                  _vm.data.movie.cloud == "local" ||
                  _vm.data.movie.cloud == null
                    ? _c("img", {
                        attrs: {
                          src: "/storage/posters/300_" + _vm.data.movie.poster,
                          id: "posterFileImage",
                          width: "40%"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data.movie.cloud == "aws"
                    ? _c("img", {
                        attrs: {
                          src: _vm.md_poster + _vm.data.movie.poster,
                          alt: _vm.data.movie.poster,
                          width: "300px"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("poster"),
                          expression: "errors.has('poster')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("poster")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(12),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "image",
                        expression: "'image'"
                      }
                    ],
                    staticClass: "inputfile",
                    attrs: { type: "file", id: "backdrop", name: "backdrop" },
                    on: {
                      change: function($event) {
                        return _vm.readImage("backdrop", "backdropFileImage")
                      }
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(13),
                  _vm._v(" "),
                  _vm.data.movie.cloud == "local" ||
                  _vm.data.movie.cloud == null
                    ? _c("img", {
                        attrs: {
                          src:
                            "/storage/backdrops/300_" + _vm.data.movie.backdrop,
                          id: "backdropFileImage",
                          width: "100%"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data.movie.cloud == "aws"
                    ? _c("img", {
                        attrs: {
                          src: _vm.md_backdrop + _vm.data.movie.backdrop,
                          alt: _vm.data.movie.backdrop,
                          width: "100%"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("backdrop"),
                          expression: "errors.has('backdrop')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-md-6 cast" }, [
              _c("h5", { staticClass: "title p-2" }, [_vm._v("Cast")]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "row" },
                [
                  _vm._l(_vm.data.cast, function(item, key) {
                    return _c(
                      "div",
                      {
                        key: key,
                        staticClass: "col-6 col-lg-4 col-xl-3 mt-4 text-center"
                      },
                      [
                        _c("div", { staticClass: "image-cast" }, [
                          _c("div", { staticClass: "delete-cast" }, [
                            _c("i", {
                              staticClass: "fa fa-times-circle",
                              on: {
                                click: function($event) {
                                  return _vm.DELETE_ACTOR(key)
                                }
                              }
                            })
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "image" }, [
                            item.cloud == "local"
                              ? _c("img", {
                                  staticClass: "img-rounded",
                                  attrs: {
                                    src: item.image,
                                    alt: item.name,
                                    width: "100%"
                                  }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            item.cloud == "aws"
                              ? _c("img", {
                                  staticClass: "img-rounded",
                                  attrs: {
                                    src: _vm.md_cast + item.image,
                                    alt: item.name,
                                    width: "100%"
                                  }
                                })
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("p", [_vm._v(_vm._s(item.name))])
                        ])
                      ]
                    )
                  }),
                  _vm._v(" "),
                  _vm._m(14)
                ],
                2
              ),
              _vm._v(" "),
              _c("hr"),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "mt-4",
                  attrs: { id: "accordion resolution-videos" }
                },
                [
                  _c("h5", { staticClass: "title p-2" }, [_vm._v("Videos")]),
                  _vm._v(" "),
                  _vm._l(_vm.data.videos, function(item, index) {
                    return _c("div", { key: index, staticClass: "card" }, [
                      item.video_format !== "embed"
                        ? _c(
                            "div",
                            {
                              staticClass: "card-header",
                              attrs: { id: "heading" + index }
                            },
                            [
                              _c("h5", { staticClass: "mb-0" }, [
                                _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-link",
                                    attrs: {
                                      "data-toggle": "collapse",
                                      "data-target": "#collapse" + index,
                                      "aria-expanded": "true",
                                      "aria-controls": "collapse" + index
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "\n                                    Resolution "
                                    ),
                                    item.resolution === "320"
                                      ? _c("span", [_vm._v("320P")])
                                      : _vm._e(),
                                    _vm._v(" "),
                                    item.resolution === "480"
                                      ? _c("span", [_vm._v("480P")])
                                      : _vm._e(),
                                    _vm._v(" "),
                                    item.resolution === "720"
                                      ? _c("span", [_vm._v("720P")])
                                      : _vm._e(),
                                    _vm._v(" "),
                                    item.resolution === "1080"
                                      ? _c("span", [_vm._v("1080P")])
                                      : _vm._e()
                                  ]
                                )
                              ])
                            ]
                          )
                        : _vm._e(),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "collapse show",
                          attrs: {
                            id: "collapse" + index,
                            "aria-labelledby": "heading" + index,
                            "data-parent": "#accordion"
                          }
                        },
                        [
                          _c("div", { staticClass: "card-body" }, [
                            _c(
                              "div",
                              { staticClass: "form-group video-player" },
                              [
                                item.video_format !== "embed"
                                  ? _c(
                                      "video",
                                      {
                                        attrs: { width: "100%", controls: "" }
                                      },
                                      [
                                        _c("source", {
                                          attrs: {
                                            src: item.video_url,
                                            type: "application/x-mpegurl"
                                          }
                                        }),
                                        _vm._v(
                                          "\n                                        Your browser does not support the video tag.\n                                    "
                                        )
                                      ]
                                    )
                                  : _vm._e()
                              ]
                            ),
                            _vm._v(" "),
                            item.video_format !== "embed"
                              ? _c("div", { staticClass: "form-group" }, [
                                  _c(
                                    "label",
                                    {
                                      staticClass: "m-1",
                                      attrs: { for: "link" }
                                    },
                                    [_vm._v("Video Link")]
                                  ),
                                  _vm._v(" "),
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: item.video_url,
                                        expression: "item.video_url"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      name: "link",
                                      id: "link"
                                    },
                                    domProps: { value: item.video_url },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          item,
                                          "video_url",
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            item.video_format === "embed"
                              ? _c("div", { staticClass: "form-group" }, [
                                  _c(
                                    "label",
                                    {
                                      staticClass: "m-1",
                                      attrs: { for: "link" }
                                    },
                                    [_vm._v("Embed Code " + _vm._s(index + 1))]
                                  ),
                                  _vm._v(" "),
                                  _c("textarea", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: item.embed_code,
                                        expression: "item.embed_code"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      name: "link",
                                      rows: "5",
                                      id: "embed",
                                      placeholder:
                                        "Put your new code for update"
                                    },
                                    domProps: { value: item.embed_code },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          item,
                                          "embed_code",
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              : _vm._e()
                          ])
                        ]
                      )
                    ])
                  })
                ],
                2
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group m-3" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.UPDATE(_vm.data.movie.id)
                      }
                    }
                  },
                  [_vm._v("UPDATE")]
                )
              ])
            ]),
            _vm._v(" "),
            _vm.showProgress
              ? _c("div", { staticClass: "upload-modal" }, [
                  _c(
                    "div",
                    {
                      staticClass: "modal-dialog",
                      attrs: { role: "document" }
                    },
                    [
                      _c("div", { staticClass: "modal-content" }, [
                        _c("div", { staticClass: "modal-body p-4" }, [
                          _vm.movieedit
                            ? _c("div", { staticClass: "movieapi" }, [
                                _c("div", { staticClass: "progress mt-2" }, [
                                  _c("div", {
                                    staticClass: "progress-bar",
                                    style: {
                                      width: _vm.percentCompleted + "%",
                                      height: "6px"
                                    },
                                    attrs: {
                                      role: "progressbar",
                                      "aria-valuenow": _vm.percentCompleted,
                                      "aria-valuemin": "0",
                                      "aria-valuemax": "100"
                                    }
                                  })
                                ]),
                                _vm._v(" "),
                                _c("p", { staticClass: "is-danger" }, [
                                  _vm._v(_vm._s(_vm.error_message_edit))
                                ]),
                                _vm._v(" "),
                                _c("p", { staticClass: "is-success" }, [
                                  _vm._v(_vm._s(_vm.success_message_edit))
                                ]),
                                _vm._v(" "),
                                _c("hr")
                              ])
                            : _vm._e()
                        ])
                      ])
                    ]
                  )
                ])
              : _vm._e()
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "GetActorModalLabel" } },
        [_vm._v("Actors")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center" }, [
      _c("h4", [_vm._v("No result were found")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Years")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Genres")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Overview")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Runtime")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Rate")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Trailer")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Poster")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "posterLabel", for: "poster" } }, [
      _vm._v("Choose a poster\n                            "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                            "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      { staticClass: "col-lg-3 col-sm-4 col-12 mt-4 text-center" },
      [
        _c(
          "div",
          {
            staticClass: "add-cast",
            attrs: { "data-toggle": "modal", "data-target": "#GetActorModal" }
          },
          [_c("h3", [_vm._v("ADD")])]
        )
      ]
    )
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-49f2ba20", module.exports)
  }
}

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(488)
/* template */
var __vue_template__ = __webpack_require__(489)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/analysis-movie.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d1838e30", Component.options)
  } else {
    hotAPI.reload("data-v-d1838e30", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 488 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["default"] = ({
    components: {
        "views-day-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        "views-month-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        "views-year-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    data: function data() {
        return {
            show_alert_services: false,
            show_chart: true,
            analysis_date: "Daily",
            like: {},
            favor: {},
            all_views: null,
            latest_views: [],
            spinner_loading: true,
            watchMovieInDay: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            watchMovieInMonth: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            watchMovieInYear: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            //Chart.js options that controls the appearance of the chart
            options: {
                scales: {
                    yAxes: [{
                        id: "Views",
                        type: "linear",
                        position: "left",
                        ticks: {
                            beginAtZero: false,
                            display: false
                        },
                        gridLines: {
                            display: false
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    zAxes: [{
                        ticks: {
                            display: false
                        }
                    }]
                },
                legend: {
                    display: false
                },
                responsive: true,
                maintainAspectRatio: false
            }
        };
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/analysis/movie/" + this.$route.params.id).then(function (response) {
            if (response.status === 200) {
                // Active and Inactivity User
                // Day
                for (var index = 0; index < response.data.data.views.day.length; index++) {
                    //Active
                    _this.watchMovieInDay.labels.push(response.data.data.views.day[index].hour);
                    _this.watchMovieInDay.datasets[0].data.push(response.data.data.views.day[index].number);
                }

                //Month
                for (var _index = 0; _index < response.data.data.views.month.length; _index++) {
                    _this.watchMovieInMonth.labels.push(response.data.data.views.month[_index].month);
                    _this.watchMovieInMonth.datasets[0].data.push(response.data.data.views.month[_index].number);
                }

                //Year
                for (var _index2 = 0; _index2 < response.data.data.views.year.length; _index2++) {
                    _this.watchMovieInYear.labels.push(response.data.data.views.year[_index2].year);
                    _this.watchMovieInYear.datasets[0].data.push(response.data.data.views.year[_index2].number);
                }

                _this.like = response.data.data.like;
                _this.favor = response.data.data.favor;
                _this.latest_views = response.data.data.latest_views;
                _this.all_views = response.data.data.all_views;
                _this.spinner_loading = false;
            }
        });
    },


    methods: {}
});

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "analysis" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "dashboard" }, [
          _c("div", { staticClass: "change-date" }, [
            _c("div", { staticClass: "dropdown" }, [
              _c(
                "button",
                {
                  staticClass: "dropdown-toggle",
                  staticStyle: {
                    "font-size": "15px",
                    "font-weight": "bold",
                    color: "#2996f3",
                    "text-transform": "uppercase"
                  },
                  attrs: {
                    type: "button",
                    id: "dropdownNavbar",
                    "data-toggle": "dropdown",
                    "aria-haspopup": "true",
                    "aria-expanded": "false"
                  }
                },
                [
                  _vm._v(
                    "\n                           " +
                      _vm._s(_vm.analysis_date) +
                      "\n            "
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "dropdown-menu",
                  attrs: { "aria-labelledby": "dropdownNavbar" }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Daily"
                        }
                      }
                    },
                    [_vm._v("Daily")]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Monthly"
                        }
                      }
                    },
                    [_vm._v("Monthly")]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Yearly"
                        }
                      }
                    },
                    [_vm._v("Yearly")]
                  )
                ]
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 row" }, [
            _c("div", { staticClass: "col-12 col-sm-6 crms text-center p-2" }, [
              _c("div", { staticClass: "row" }, [
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/heart.svg",
                        alt: "Likes",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _vm.analysis_date == "Daily"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.day))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Monthly"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.month))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Yearly"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.year))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Likes")])
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/star.svg",
                        alt: "Favor",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _vm.analysis_date == "Daily"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.day))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Monthly"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.month))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Yearly"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.year))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Favor")])
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/movie.svg",
                        alt: "views",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "favor" }, [
                      _vm._v(_vm._s(_vm.all_views))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("All Views")])
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6" }, [
              _c("span", { staticClass: "title p-2" }, [_vm._v("Views")]),
              _vm._v(" "),
              _c("div", { staticClass: "details white m-2 p-2" }, [
                _vm.analysis_date == "Daily"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInDay.datasets[0].data.length > 0
                          ? _c("views-day-chart", {
                              attrs: {
                                data: _vm.watchMovieInDay,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in this day")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.analysis_date == "Monthly"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInMonth.datasets[0].data.length > 0
                          ? _c("views-month-chart", {
                              attrs: {
                                data: _vm.watchMovieInMonth,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in last month")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.analysis_date == "Yearly"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInYear.datasets[0].data.length > 0
                          ? _c("views-year-chart", {
                              attrs: {
                                data: _vm.watchMovieInYear,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in last year")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e()
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6 mt-3" }, [
              _c("div", { staticClass: "title p-2" }, [_vm._v("Latest Views")]),
              _vm._v(" "),
              _vm.latest_views.length > 0
                ? _c("div", { staticClass: "table-responsive white" }, [
                    _c("div", { staticClass: "table table-hover" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c(
                        "tbody",
                        _vm._l(_vm.latest_views, function(item, index) {
                          return _c("tr", { key: index }, [
                            _c("td", [_vm._v(_vm._s(item.user_name))]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.created_at))])
                          ])
                        }),
                        0
                      )
                    ])
                  ])
                : _vm._e()
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Username")]),
      _vm._v(" "),
      _c("th", [_vm._v("View date")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d1838e30", module.exports)
  }
}

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(491)
/* template */
var __vue_template__ = __webpack_require__(492)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-25ad839a", Component.options)
  } else {
    hotAPI.reload("data-v-25ad839a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            query: ""
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.series.data;
        },
        data_search: function data_search(state) {
            return state.series.data_search;
        },
        button_loading: function button_loading(state) {
            return state.series.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.series.spinner_loading;
        }
    }),

    created: function created() {
        this.$store.commit("CLEAN_SEARCH_SERIES");
        this.$store.dispatch("GET_ALL_SERIES");
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                text: "All videos and subtitles will removed!",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_SERIES", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_SERIES_PAGINATION", path_url);
        },
        SEARCH: function SEARCH() {
            if (this.query.length > 0) {
                this.$store.dispatch("GET_SERIES_SEARCH", this.query);
            } else {
                this.data_search.series = null;
            }
        },
        ADD_TO_TOP: function ADD_TO_TOP(id, key) {
            this.$store.dispatch("ADD_SERIES_TO_TOP", {
                id: id,
                key: key
            });
        }
    }
});

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "series-manage" }, [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Series")]),
      _vm._v(" "),
      _c("div", { staticClass: "m-2", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c("li", { staticClass: "col col-md-4 offset-md-8" }, [
            _c("div", { attrs: { id: "search" } }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.query,
                    expression: "query"
                  }
                ],
                staticClass: "form-control mr-sm-2",
                attrs: { type: "text", placeholder: "Search" },
                domProps: { value: _vm.query },
                on: {
                  keyup: _vm.SEARCH,
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.query = $event.target.value
                  }
                }
              })
            ])
          ])
        ])
      ]),
      _vm._v(" "),
      _vm.spinner_loading
        ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
        : _vm._e(),
      _vm._v(" "),
      !_vm.spinner_loading
        ? _c("div", [
            _vm.data.series === null
              ? _c("div", { staticClass: "text-center" }, [
                  _c("h4", [_vm._v("No result were found")])
                ])
              : _c("div", [
                  Object.keys(_vm.data_search).length > 0 &&
                  _vm.data_search.series !== null
                    ? _c("div", { staticClass: "table-responsive mt-2" }, [
                        _c("div", { staticClass: "table table-hover" }, [
                          _vm._m(0),
                          _vm._v(" "),
                          _c(
                            "tbody",
                            _vm._l(_vm.data_search.series, function(
                              item,
                              index
                            ) {
                              return _c("tr", { key: index }, [
                                item.cloud == "local"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.cloud == "aws"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src: _vm.sm_poster + item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.name))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.year))]),
                                _vm._v(" "),
                                item.cloud == "local"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                Local Server\n                            "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.cloud == "aws"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                AWS S3\n                            "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.category))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.created_at))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                _vm._v(" "),
                                _c("td", [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "btn-group",
                                      attrs: { role: "group" }
                                    },
                                    [
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "analysis-series",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                        Analysis\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      item.series_id !== item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_TO_TOP(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "\n                                        Top\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "series_edit",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Edit\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "series_manage_id",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Show\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      !_vm.button_loading
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _vm.button_loading === item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { disabled: "" }
                                            },
                                            [
                                              _c("i", {
                                                attrs: { id: "btn-progress" }
                                              }),
                                              _vm._v(
                                                " Loading\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e()
                                    ],
                                    1
                                  )
                                ])
                              ])
                            }),
                            0
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data_search.series === null ||
                  Object.keys(_vm.data_search).length === 0
                    ? _c("div", { staticClass: "table-responsive mt-2" }, [
                        _c("div", { staticClass: "table table-hover" }, [
                          _vm._m(1),
                          _vm._v(" "),
                          _c(
                            "tbody",
                            _vm._l(_vm.data.series.data, function(item, index) {
                              return _c("tr", { key: index }, [
                                item.cloud == "local"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.cloud == "aws"
                                  ? _c("td", [
                                      _c("img", {
                                        attrs: {
                                          src: _vm.sm_poster + item.poster,
                                          alt: item.name,
                                          width: "40"
                                        }
                                      })
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.name))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.year))]),
                                _vm._v(" "),
                                item.cloud == "local"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                Local Server\n                            "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                item.cloud == "aws"
                                  ? _c("td", [
                                      _vm._v(
                                        "\n                                AWS S3\n                            "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.category))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.created_at))]),
                                _vm._v(" "),
                                _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                _vm._v(" "),
                                _c("td", [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "btn-group",
                                      attrs: { role: "group" }
                                    },
                                    [
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "analysis-series",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                        Analysis\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      item.series_id !== item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_TO_TOP(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "\n                                        Top\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "series_edit",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Edit\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "router-link",
                                        {
                                          staticClass:
                                            "btn btn-sm btn-warning btn-sm mr-2",
                                          attrs: {
                                            to: {
                                              name: "series_manage_id",
                                              params: { id: item.id }
                                            },
                                            role: "button"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "Show\n                                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      !_vm.button_loading
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _vm.button_loading === item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { disabled: "" }
                                            },
                                            [
                                              _c("i", {
                                                attrs: { id: "btn-progress" }
                                              }),
                                              _vm._v(
                                                " Loading\n                                    "
                                              )
                                            ]
                                          )
                                        : _vm._e()
                                    ],
                                    1
                                  )
                                ])
                              ])
                            }),
                            0
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data_search.series === null ||
                  Object.keys(_vm.data_search).length === 0
                    ? _c(
                        "nav",
                        {
                          staticClass: "m-4 p-1",
                          attrs: { "aria-label": "pagination" }
                        },
                        [
                          _c("ul", { staticClass: "pagination " }, [
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                attrs: { id: "end" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          "/api/admin/get/series"
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Begin")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                class: {
                                  disabled:
                                    _vm.data.series.prev_page_url === null
                                },
                                attrs: { id: "prev" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          _vm.data.series.prev_page_url
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Previous")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c("li", { staticClass: "page-item" }, [
                              _c("a", { staticClass: "page-link" }, [
                                _vm._v(
                                  _vm._s(_vm.data.series.current_page) +
                                    "/" +
                                    _vm._s(_vm.data.series.last_page)
                                )
                              ])
                            ]),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                class: {
                                  disabled:
                                    _vm.data.series.next_page_url === null
                                },
                                attrs: { id: "next" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          _vm.data.series.next_page_url
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Next")]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "page-item",
                                attrs: { id: "end" }
                              },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass: "page-link",
                                    on: {
                                      click: function($event) {
                                        return _vm.PAGINATION(
                                          "/api/admin/get/series?page=" +
                                            _vm.data.series.last_page
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("End")]
                                )
                              ]
                            )
                          ])
                        ]
                      )
                    : _vm._e()
                ])
          ])
        : _vm._e()
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Cover")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Year")]),
      _vm._v(" "),
      _c("th", [_vm._v("Cloud")]),
      _vm._v(" "),
      _c("th", [_vm._v("Category")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Cover")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Year")]),
      _vm._v(" "),
      _c("th", [_vm._v("Cloud")]),
      _vm._v(" "),
      _c("th", [_vm._v("Category")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-25ad839a", module.exports)
  }
}

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(494)
/* template */
var __vue_template__ = __webpack_require__(495)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/new-series-api.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0f5b9b46", Component.options)
  } else {
    hotAPI.reload("data-v-0f5b9b46", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 494 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            id: "",
            age: null,
            series_api: false,
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null
                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            apiFormData: new FormData(),
            cloud_type: false,
            category: null
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'series');
    },


    methods: {
        SERIES_API: function SERIES_API(id) {
            var _this = this;

            // Check count of upload data
            this.$store.commit('COUNT_UPLOAD_PROGRESS');

            this.apiFormData.append("id", this.id);
            this.apiFormData.append("age", this.age);
            this.apiFormData.append("category", this.category);

            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {

                    _this.disabled_button = true;
                    _this.upload_data.api.show = true;
                    _this.upload_data.id = _this.id;

                    _this.$store.commit('SET_PROGRESS_DATA', _this.upload_data);
                    _this.$store.commit('SET_UPLOAD_PROGRESS', _this.uploadData[_this.countUploadData]);
                    _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this.countUploadData,
                        data: _this.uploadData[_this.countUploadData]
                    });

                    axios.post("/api/admin/new/series/moviedbapi", _this.apiFormData).then(function (response) {
                        if (response.status === 200) {

                            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                parameter: 'success_message',
                                object: 'api',
                                value: response.data.message
                            });
                            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                parameter: 'progress',
                                object: 'api',
                                value: 100
                            });
                            _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                data: _this.uploadData[_this.countUploadData]
                            });

                            setTimeout(function () {
                                _this.$router.push({
                                    name: "series-manage"
                                });
                                alertify.logPosition("top right");
                                alertify.success("Successful upload");
                            }, 1500);
                        }
                    }, function (error) {
                        _this.disabled_button = false;

                        _this.$store.commit('UPDATE_PROGRESS_DATA', {
                            key: _this.countUploadData,
                            parameter: 'error_message',
                            object: 'api',
                            value: error.response.data.message
                        });
                        _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                            key: _this.countUploadData,
                            data: _this.uploadData[_this.countUploadData]
                        });
                    });
                }
            });
        }
    }
});

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "new-series-api" }, [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "title p-2" }, [_vm._v("Series API Upload")]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "form-group" }, [
          _vm._m(0),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 col-md-8 cloud-upload" }, [
            _c("div", { staticClass: "row" }, [
              _c(
                "div",
                {
                  staticClass: "col-12 col-md-6 image",
                  on: {
                    click: function($event) {
                      _vm.cloud_type = "local"
                    }
                  }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "local-cloud-logo",
                      class: { active: _vm.cloud_type === "local" }
                    },
                    [
                      _c("img", {
                        attrs: {
                          src: "/themes/default/img/local-cloud.svg",
                          alt: "local-cloud",
                          width: "90px"
                        }
                      })
                    ]
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "col-12 col-md-6 image",
                  on: {
                    click: function($event) {
                      _vm.cloud_type = "aws"
                    }
                  }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "aws-cloud-logo",
                      class: { active: _vm.cloud_type === "aws" }
                    },
                    [
                      _c("img", {
                        attrs: {
                          src: "/themes/default/img/aws-cloud.svg",
                          alt: "aws-cloud",
                          width: "120px"
                        }
                      })
                    ]
                  )
                ]
              )
            ])
          ])
        ]),
        _vm._v(" "),
        _vm.cloud_type
          ? _c("div", [
              _c("div", { staticClass: "form-group" }, [
                _vm._m(1),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-8 col-lg-4" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.id,
                        expression: "id"
                      },
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|numeric",
                        expression: "'required|numeric'"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      name: "id",
                      type: "text",
                      placeholder: "Moviedb id"
                    },
                    domProps: { value: _vm.id },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.id = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("id"),
                          expression: "errors.has('id')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("id")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 col-sm-8 col-lg-4" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "age" } }, [
                    _vm._v("Rating system")
                  ]),
                  _vm._v(" "),
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.age,
                          expression: "age"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { name: "age", id: "age" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.age = $event.target.multiple
                            ? $$selectedVal
                            : $$selectedVal[0]
                        }
                      }
                    },
                    [
                      _c("option", [_vm._v("G")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("PG")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("PG-13")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("R")]),
                      _vm._v(" "),
                      _c("option", [_vm._v("X")])
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("age"),
                        expression: "errors.has('age')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("age")))]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 col-sm-8 col-lg-4" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "category" } }, [
                    _vm._v("Category")
                  ]),
                  _vm._v(" "),
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.category,
                          expression: "category"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { name: "category", id: "category" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.category = $event.target.multiple
                            ? $$selectedVal
                            : $$selectedVal[0]
                        }
                      }
                    },
                    _vm._l(_vm.categories_list.categories, function(
                      item,
                      index
                    ) {
                      return _c(
                        "option",
                        { key: index, domProps: { value: item.id } },
                        [
                          _vm._v(
                            "\n                                " +
                              _vm._s(item.name) +
                              "\n                            "
                          )
                        ]
                      )
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("category"),
                          expression: "errors.has('category')"
                        }
                      ],
                      staticClass: " is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("category")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-6" }, [
                  !_vm.disabled_button
                    ? _c(
                        "button",
                        {
                          staticClass: "btn btn-md  btn-warning",
                          on: {
                            click: function($event) {
                              return _vm.SERIES_API()
                            }
                          }
                        },
                        [_vm._v("Upload\n                    ")]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.disabled_button
                    ? _c(
                        "button",
                        {
                          staticClass: "btn btn-md  btn-warning",
                          attrs: { disabled: "" }
                        },
                        [_vm._v("Loading")]
                      )
                    : _vm._e()
                ])
              ])
            ])
          : _vm._e()
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-lg-12" }, [
      _c("label", [_vm._v("ID")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0f5b9b46", module.exports)
  }
}

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(497)
/* template */
var __vue_template__ = __webpack_require__(498)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/new-series-custom.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7c897975", Component.options)
  } else {
    hotAPI.reload("data-v-7c897975", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 497 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: "",
            year: "",
            genres: [],
            overview: "",
            runtime: "",
            rate: "",
            youtube: "",
            video_link: "",
            count: "",
            age: null,
            //Cast
            cast1: "",
            cast2: "",
            cast3: "",
            cast4: "",
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null
                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            apiFormData: new FormData(),
            cloud_type: false,
            category: null
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        genre_list: function genre_list(state) {
            return state.genres.data;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'series');
        this.$store.dispatch("GET_ALL_GENRES");
    },


    methods: {
        SERIES_CUSTOM: function SERIES_CUSTOM(name) {
            var _this = this;

            var fileInput1 = document.querySelector("#cast1");
            var fileInput2 = document.querySelector("#cast2");
            var fileInput3 = document.querySelector("#cast3");
            var fileInput4 = document.querySelector("#cast4");
            var poster = document.querySelector("#poster");
            var backdrop = document.querySelector("#backdrop");
            this.apiFormData.append("image1", fileInput1.files[0]);
            this.apiFormData.append("image2", fileInput2.files[0]);
            this.apiFormData.append("image3", fileInput3.files[0]);
            this.apiFormData.append("image4", fileInput4.files[0]);
            this.apiFormData.append("cast1", this.cast1);
            this.apiFormData.append("cast2", this.cast2);
            this.apiFormData.append("cast3", this.cast3);
            this.apiFormData.append("cast4", this.cast4);
            this.apiFormData.append("name", this.name);
            this.apiFormData.append("year", this.year);
            this.apiFormData.append("genres", this.genres);
            this.apiFormData.append("overview", this.overview);
            this.apiFormData.append("rate", this.rate);
            this.apiFormData.append("youtube", this.youtube);
            this.apiFormData.append("poster", poster.files[0]);
            this.apiFormData.append("backdrop", backdrop.files[0]);
            this.apiFormData.append("age", this.age);
            this.apiFormData.append("category", this.category);

            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // Check count of upload data
            this.$store.commit('COUNT_UPLOAD_PROGRESS');

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.disabled_button = true;

                    _this.upload_data.api.show = true;
                    _this.upload_data.id = _this.name;

                    _this.$store.commit('SET_PROGRESS_DATA', _this.upload_data);
                    _this.$store.commit('SET_UPLOAD_PROGRESS', _this.uploadData[_this.countUploadData]);
                    _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this.countUploadData,
                        data: _this.uploadData[_this.countUploadData]
                    });

                    axios.post("/api/admin/new/series/customupload", _this.apiFormData).then(function (response) {
                        if (response.status === 200) {

                            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                parameter: 'success_message',
                                object: 'api',
                                value: response.data.message
                            });
                            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                parameter: 'progress',
                                object: 'api',
                                value: 100
                            });
                            _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this.countUploadData,
                                data: _this.uploadData[_this.countUploadData]
                            });

                            setTimeout(function () {
                                _this.$router.push({
                                    name: "series-manage"
                                });
                                alertify.logPosition("top right");
                                alertify.success("Successful upload");
                            }, 1500);
                        }
                    }, function (error) {
                        _this.disabled_button = false;

                        _this.$store.commit('UPDATE_PROGRESS_DATA', {
                            key: _this.countUploadData,
                            parameter: 'error_message',
                            object: 'api',
                            value: error.response.data.message
                        });
                        _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                            key: _this.countUploadData,
                            data: _this.uploadData[_this.countUploadData]
                        });
                    });
                }
            });
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "title p-2" }, [_vm._v("Series Custom Upload")]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "form-group" }, [
          _vm._m(0),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 col-md-8 cloud-upload" }, [
            _c("div", { staticClass: "row" }, [
              _c(
                "div",
                {
                  staticClass: "col-12 col-md-6 image",
                  on: {
                    click: function($event) {
                      _vm.cloud_type = "local"
                    }
                  }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "local-cloud-logo",
                      class: { active: _vm.cloud_type === "local" }
                    },
                    [
                      _c("img", {
                        attrs: {
                          src: "/themes/default/img/local-cloud.svg",
                          alt: "local-cloud",
                          width: "90px"
                        }
                      })
                    ]
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "col-12 col-md-6 image",
                  on: {
                    click: function($event) {
                      _vm.cloud_type = "aws"
                    }
                  }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "aws-cloud-logo",
                      class: { active: _vm.cloud_type === "aws" }
                    },
                    [
                      _c("img", {
                        attrs: {
                          src: "/themes/default/img/aws-cloud.svg",
                          alt: "aws-cloud",
                          width: "120px"
                        }
                      })
                    ]
                  )
                ]
              )
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-lg-6" }, [
            _vm.cloud_type
              ? _c("div", [
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(1),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required|max:30",
                            expression: "'required|max:30'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.name,
                            expression: "name"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          name: "name",
                          type: "text",
                          placeholder: "Name"
                        },
                        domProps: { value: _vm.name },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.name = $event.target.value
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("name"),
                              expression: "errors.has('name')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("name")))]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(2),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required|numeric|max:4",
                            expression: "'required|numeric|max:4'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.year,
                            expression: "year"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          name: "year",
                          type: "text",
                          placeholder: "Years"
                        },
                        domProps: { value: _vm.year },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.year = $event.target.value
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("year"),
                              expression: "errors.has('year')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("year")))]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(3),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _vm.name === false
                        ? _c("div", { staticClass: "form-control-feedback" }, [
                            _vm._v("Name of movie.")
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c(
                        "select",
                        {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required",
                              expression: "'required'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.genres,
                              expression: "genres"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: { multiple: "", name: "genres" },
                          on: {
                            change: function($event) {
                              var $$selectedVal = Array.prototype.filter
                                .call($event.target.options, function(o) {
                                  return o.selected
                                })
                                .map(function(o) {
                                  var val = "_value" in o ? o._value : o.value
                                  return val
                                })
                              _vm.genres = $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            }
                          }
                        },
                        _vm._l(_vm.genre_list, function(item, index) {
                          return _c(
                            "option",
                            { key: index, domProps: { value: item.name } },
                            [_vm._v(_vm._s(item.name))]
                          )
                        }),
                        0
                      )
                    ]),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("genres"),
                            expression: "errors.has('genres')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("genres")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(4),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c(
                        "select",
                        {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required",
                              expression: "'required'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.category,
                              expression: "category"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: { name: "category", id: "category" },
                          on: {
                            change: function($event) {
                              var $$selectedVal = Array.prototype.filter
                                .call($event.target.options, function(o) {
                                  return o.selected
                                })
                                .map(function(o) {
                                  var val = "_value" in o ? o._value : o.value
                                  return val
                                })
                              _vm.category = $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            }
                          }
                        },
                        _vm._l(_vm.categories_list.categories, function(
                          item,
                          index
                        ) {
                          return _c(
                            "option",
                            { key: index, domProps: { value: item.id } },
                            [
                              _vm._v(
                                "\n                                        " +
                                  _vm._s(item.name) +
                                  "\n                                    "
                              )
                            ]
                          )
                        }),
                        0
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("category"),
                              expression: "errors.has('category')"
                            }
                          ],
                          staticClass: " is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("category")))]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(5),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("textarea", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required|max:2000",
                            expression: "'required|max:2000'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.overview,
                            expression: "overview"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          name: "overview",
                          type: "text",
                          placeholder: "Overview"
                        },
                        domProps: { value: _vm.overview },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.overview = $event.target.value
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("overview"),
                              expression: "errors.has('overview')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [
                          _vm._v(
                            _vm._s(_vm.errors.first("overview")) +
                              "\n                        "
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(6),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required|decimal:1|max:3",
                            expression: "'required|decimal:1|max:3'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.rate,
                            expression: "rate"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          name: "rate",
                          type: "text",
                          placeholder: "Rate"
                        },
                        domProps: { value: _vm.rate },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.rate = $event.target.value
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("rate"),
                              expression: "errors.has('rate')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("rate")))]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(7),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "url|max:300",
                            expression: "'url|max:300'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.youtube,
                            expression: "youtube"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          name: "youtube",
                          type: "text",
                          placeholder: "Trailer"
                        },
                        domProps: { value: _vm.youtube },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.youtube = $event.target.value
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("youtube"),
                              expression: "errors.has('youtube')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [
                          _vm._v(
                            _vm._s(_vm.errors.first("youtube")) +
                              "\n                        "
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(8),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 " }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "image|required",
                            expression: "'image|required'"
                          }
                        ],
                        staticClass: "inputfile",
                        attrs: { type: "file", id: "poster", name: "poster" },
                        on: {
                          change: function($event) {
                            return _vm.readImage("poster", "posterFileImage")
                          }
                        }
                      }),
                      _vm._v(" "),
                      _vm._m(9),
                      _vm._v(" "),
                      _c("img", {
                        staticStyle: { display: "none" },
                        attrs: { src: "", id: "posterFileImage", width: "40%" }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("poster"),
                              expression: "errors.has('poster')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [
                          _vm._v(
                            _vm._s(_vm.errors.first("poster")) +
                              "\n                        "
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _vm._m(10),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 " }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "image|required",
                            expression: "'image|required'"
                          }
                        ],
                        staticClass: "inputfile",
                        attrs: {
                          type: "file",
                          id: "backdrop",
                          name: "backdrop"
                        },
                        on: {
                          change: function($event) {
                            return _vm.readImage(
                              "backdrop",
                              "backdropFileImage"
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _vm._m(11),
                      _vm._v(" "),
                      _c("img", {
                        staticStyle: { display: "none" },
                        attrs: {
                          src: "",
                          id: "backdropFileImage",
                          width: "100%"
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("backdrop"),
                              expression: "errors.has('backdrop')"
                            }
                          ],
                          staticClass: "is-danger"
                        },
                        [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _c("div", { staticClass: "col-12 " }, [
                      _c("label", [_vm._v("Rating system")]),
                      _vm._v(" "),
                      _c(
                        "select",
                        {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required",
                              expression: "'required'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.age,
                              expression: "age"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: { name: "age", id: "age" },
                          on: {
                            change: function($event) {
                              var $$selectedVal = Array.prototype.filter
                                .call($event.target.options, function(o) {
                                  return o.selected
                                })
                                .map(function(o) {
                                  var val = "_value" in o ? o._value : o.value
                                  return val
                                })
                              _vm.age = $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            }
                          }
                        },
                        [
                          _c("option", [_vm._v("G")]),
                          _vm._v(" "),
                          _c("option", [_vm._v("PG")]),
                          _vm._v(" "),
                          _c("option", [_vm._v("PG-13")]),
                          _vm._v(" "),
                          _c("option", [_vm._v("R")]),
                          _vm._v(" "),
                          _c("option", [_vm._v("X")])
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("age"),
                            expression: "errors.has('age')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("age")))]
                    )
                  ])
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _vm.cloud_type
            ? _c("div", { staticClass: "col-12 col-lg-6" }, [
                _c(
                  "form",
                  { staticClass: "cover__form", attrs: { id: "form" } },
                  [
                    _vm._m(12),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(13),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12 " }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "max:50",
                              expression: "'max:50'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.cast1,
                              expression: "cast1"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "name1",
                            type: "text",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.cast1 },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.cast1 = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name1"),
                                expression: "errors.has('name1')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name4")) +
                                "\n                            "
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "image",
                              expression: "'image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: { type: "file", id: "cast1", name: "cast4" },
                          on: {
                            change: function($event) {
                              return _vm.readImage("cast1", "cast1FileImage")
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(14),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: { src: "", id: "cast1FileImage", width: "200" }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("cast1"),
                                expression: "errors.has('cast1')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("cast1")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(15),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12 " }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "max:50",
                              expression: "'max:50'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.cast2,
                              expression: "cast2"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "name2",
                            type: "text",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.cast2 },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.cast2 = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name2"),
                                expression: "errors.has('name2')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name2")) +
                                "\n                            "
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "image",
                              expression: "'image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: { type: "file", id: "cast2", name: "cast2" },
                          on: {
                            change: function($event) {
                              return _vm.readImage("cast2", "cast2FileImage")
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(16),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: { src: "", id: "cast2FileImage", width: "200" }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("cast2"),
                                expression: "errors.has('cast2')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("cast2")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(17),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12 " }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "max:50",
                              expression: "'max:50'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.cast3,
                              expression: "cast3"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "name3",
                            type: "text",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.cast3 },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.cast3 = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name3"),
                                expression: "errors.has('name3')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name3")) +
                                "\n                            "
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "image",
                              expression: "'image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: { type: "file", id: "cast3", name: "cast3" },
                          on: {
                            change: function($event) {
                              return _vm.readImage("cast3", "cast3FileImage")
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(18),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: { src: "", id: "cast3FileImage", width: "200" }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("cast3"),
                                expression: "errors.has('cast3')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("cast3")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(19),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12 " }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "max:50",
                              expression: "'max:50'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.cast4,
                              expression: "cast4"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            name: "name4",
                            type: "text",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.cast4 },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.cast4 = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name4"),
                                expression: "errors.has('name4')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name4")) +
                                "\n                            "
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "image",
                              expression: "'image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: { type: "file", id: "cast4", name: "cast4" },
                          on: {
                            change: function($event) {
                              return _vm.readImage("cast4", "cast4FileImage")
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(20),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: { src: "", id: "cast4FileImage", width: "200" }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("cast4"),
                                expression: "errors.has('cast4')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("cast4")))]
                        )
                      ])
                    ])
                  ]
                )
              ])
            : _vm._e(),
          _vm._v(" "),
          _vm.cloud_type
            ? _c("div", { staticClass: "col-12" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12" }, [
                    !_vm.disabled_button
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-md btn-warning",
                            on: {
                              click: function($event) {
                                return _vm.SERIES_CUSTOM()
                              }
                            }
                          },
                          [
                            _vm._v(
                              "\n                                Upload\n                            "
                            )
                          ]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.disabled_button
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-md btn-warning",
                            attrs: { disabled: "" }
                          },
                          [_vm._v("Loading")]
                        )
                      : _vm._e()
                  ])
                ])
              ])
            : _vm._e()
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Years")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Genres")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Overview")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("Rate\n                                    "),
        _c("small", [_vm._v("(From 1 - 10)")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("Trailer\n                                    "),
        _c("small", [_vm._v("(Youtube)")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Poster")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "posterLabel", for: "poster" } }, [
      _vm._v("Choose a poster\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-group" }, [
      _c("div", { staticClass: "col-12" }, [
        _c(
          "div",
          { staticClass: "alert alert-info", attrs: { role: "alert" } },
          [
            _c("strong", [_vm._v("If you upload ! ")]),
            _vm._v(
              " Required to add name and image\n                                "
            )
          ]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Cast (1)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast1Label", for: "cast1" } }, [
      _vm._v("Choose a image\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Cast (2)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast2Label", for: "cast2" } }, [
      _vm._v("Choose a image\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Cast (3)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast3Label", for: "cast3" } }, [
      _vm._v("Choose a image\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Cast (4)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "cast4Label", for: "cast4" } }, [
      _vm._v("Choose a image\n                                    "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7c897975", module.exports)
  }
}

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(500)
/* template */
var __vue_template__ = __webpack_require__(501)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/series-manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5b2b89d6", Component.options)
  } else {
    hotAPI.reload("data-v-5b2b89d6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            show_subtitle_modal: false,
            percentSubtitleUpload: 0,
            subtitle_video: false,
            subtitle_movie_id: null,
            error_message_subtitle: "",
            success_message_subtitle: "",
            disable_button: false,
            btn_delete: "",
            multi_select: [],
            showGroupButton: false
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.series.data;
        },
        button_loading: function button_loading(state) {
            return state.series.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.series.spinner_loading;
        },
        subtitles: function subtitles(state) {
            return state.subtitles.data;
        },
        subtitle_spinner_loading: function subtitle_spinner_loading(state) {
            return state.subtitles.spinner_loading;
        },
        button_delete_loading: function button_delete_loading(state) {
            return state.button_delete_loading;
        }
    }),

    watch: {
        multi_select: function multi_select(item) {
            if (this.multi_select.length > 0) {
                this.showGroupButton = true;
            } else {
                this.showGroupButton = false;
                document.getElementById("select-all").checked = false;
            }
        }
    },

    created: function created() {
        this.$store.dispatch("GET_ALL_SEASON", this.$route.params.id);
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                text: "All videos and subtitles will removed!",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    for (var i = 0; i < _this.multi_select.length; i++) {
                        document.getElementById(_this.multi_select[i].id).checked = false;
                    }
                    _this.$store.dispatch("DELETE_EPISODE", _this.multi_select);
                }
            });
        },
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_SERIES_PAGINATION", path_url);
        },
        GET_SUBTITLE: function GET_SUBTITLE(id, key) {
            this.show_subtitle_modal = true;
            this.subtitle_movie_id = id;
            this.$store.dispatch("GET_EPISODE_SUBTITLES", id);
        },
        UPLOAD_SUBTITLE: function UPLOAD_SUBTITLE(id) {
            var _this2 = this;

            var formData = new FormData();
            var sub = document.getElementById("subtitle").files.length;
            for (var x = 0; x < sub; x++) {
                formData.append("subtitleUpload[]", document.getElementById("subtitle").files[x]);
            }

            formData.append("id", this.subtitle_movie_id);

            // Progress
            this.subtitle_video = true;
            this.disable_button = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this2.percentSubtitleUpload = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                }
            };

            axios.post("/api/admin/new/series/episode/subtitle", formData, progress).then(function (response) {
                if (response.status === 200) {
                    _this2.success_message_subtitle = response.data.message;
                    if (_this2.subtitles.subtitles != null) {
                        _this2.subtitles.subtitles.push(response.data.data);
                    } else {
                        _this2.subtitles.subtitles = [];
                        _this2.subtitles.subtitles[0] = response.data.data;
                    }
                    setTimeout(function () {
                        _this2.subtitle_video = false;
                        _this2.disable_button = false;
                    }, 500);
                }
            }, function (error) {
                _this2.disable_button = false;
                _this2.error_message_subtitle = error.response.data.message;
                setTimeout(function () {
                    _this2.subtitle_video = false;
                }, 1500);
            });
        },
        DELETE_SUBTITLE: function DELETE_SUBTITLE(id, key) {
            var _this3 = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this3.$store.dispatch("DELETE_SUBTITLE", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        AVAILABLE_IT: function AVAILABLE_IT(id, index) {
            var _this4 = this;

            for (var i = 0; i < this.multi_select.length; i++) {
                document.getElementById(this.multi_select[i].id).checked = false;
            }
            axios.post("/api/admin/update/series/episode/available", {
                list: this.multi_select
            }).then(function (response) {
                if (response.status === 200) {
                    for (var _i = 0; _i < response.data.list.length; _i++) {
                        _this4.data.season.data[response.data.list[_i].key].show = response.data.list[_i].show;
                    }
                }
            }, function (error) {
                console.log("error in available this episode ");
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        ADD_TO_MULITSELECT: function ADD_TO_MULITSELECT(item, key) {
            if (this.multi_select.length > 0) {
                for (var i = 0; i < this.multi_select.length; i++) {
                    if (this.multi_select[i].id == item) {
                        this.multi_select.splice(i, 1);
                        return;
                    }
                }
                this.multi_select.push({
                    id: item,
                    key: key
                });
            } else {
                this.multi_select.push({
                    id: item,
                    key: key
                });
            }
        },
        ADD_ALL_TO_MULITSELECT: function ADD_ALL_TO_MULITSELECT() {
            if (this.multi_select.length > 0) {
                for (var i = 0; i < this.multi_select.length; i++) {
                    document.getElementById(this.multi_select[i].id).checked = false;
                }
                this.multi_select = [];
            } else {
                for (var _i2 = 0; _i2 < this.data.season.data.length; _i2++) {
                    this.multi_select.push({
                        id: this.data.season.data[_i2].id,
                        key: _i2
                    });
                    document.getElementById(this.data.season.data[_i2].id).checked = true;
                }
            }
        }
    }
});

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "m-2 p-3", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: {
                        role: "button",
                        to: {
                          name: "series_manage_id",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [_vm._v("Manage\n                    ")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning ml-1",
                      attrs: {
                        role: "button",
                        to: {
                          name: "new_series_episode",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [_vm._v("Episode API\n                    ")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning ml-1",
                      attrs: {
                        role: "button",
                        to: {
                          name: "new_series_episode_custome",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [
                      _vm._v(
                        "\n                        Episode custom\n                    "
                      )
                    ]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _vm._m(0)
            ]),
            _vm._v(" "),
            _vm.showGroupButton
              ? _c("div", { staticClass: "mt-3" }, [
                  _c("div", { staticClass: "button-group" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.AVAILABLE_IT()
                          }
                        }
                      },
                      [_vm._v("Available / Unavailable")]
                    ),
                    _vm._v(" "),
                    !_vm.button_delete_loading
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-warning",
                            on: {
                              click: function($event) {
                                return _vm.DELETE()
                              }
                            }
                          },
                          [_vm._v("Delete\n                    ")]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.button_delete_loading
                      ? _c(
                          "button",
                          { staticClass: "btn btn-sm btn-warning" },
                          [_vm._v("Loading")]
                        )
                      : _vm._e()
                  ])
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _vm.data.season !== null
            ? _c("div", [
                _c("div", { staticClass: "subtitles-modal" }, [
                  _c(
                    "div",
                    {
                      staticClass: "modal fade",
                      attrs: {
                        id: "GetSubtitleModal",
                        tabindex: "-1",
                        role: "dialog",
                        "aria-labelledby": "GetSubtitleModalLabel",
                        "aria-hidden": "true"
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "modal-dialog",
                          attrs: { role: "document" }
                        },
                        [
                          _c("div", { staticClass: "modal-content" }, [
                            _vm._m(1),
                            _vm._v(" "),
                            _c("div", { staticClass: "modal-body" }, [
                              _vm.subtitle_spinner_loading
                                ? _c(
                                    "div",
                                    { staticClass: "spinner-load" },
                                    [_c("Loader")],
                                    1
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              _c("div", { staticClass: "col-12" }, [
                                _c("input", {
                                  staticClass: "inputfile",
                                  attrs: {
                                    type: "file",
                                    id: "subtitle",
                                    name: "subtitle",
                                    multiple: "",
                                    size: "10"
                                  },
                                  on: {
                                    change: function($event) {
                                      return _vm.SHOW_FILES_INFO(
                                        "subtitle",
                                        "subtitleFileDetails"
                                      )
                                    }
                                  }
                                }),
                                _vm._v(" "),
                                _vm._m(2)
                              ]),
                              _vm._v(" "),
                              _vm.subtitle_video
                                ? _c(
                                    "div",
                                    {
                                      staticClass: "subtitle-progress mt-1 p-4"
                                    },
                                    [
                                      _c("div", { staticClass: "row" }, [
                                        _c("div", { staticClass: "svg ml-3" }, [
                                          _c(
                                            "svg",
                                            {
                                              staticStyle: {
                                                "enable-background":
                                                  "new 0 0 384 384"
                                              },
                                              attrs: {
                                                xmlns:
                                                  "http://www.w3.org/2000/svg",
                                                "xmlns:xlink":
                                                  "http://www.w3.org/1999/xlink",
                                                version: "1.1",
                                                id: "Capa_1",
                                                x: "0px",
                                                y: "0px",
                                                viewBox: "0 0 384 384",
                                                "xml:space": "preserve",
                                                width: "50px"
                                              }
                                            },
                                            [
                                              _c("g", [
                                                _c("g", [
                                                  _c("g", [
                                                    _c("path", {
                                                      staticClass:
                                                        "active-path",
                                                      attrs: {
                                                        d:
                                                          "M341.333,21.333H42.667C19.093,21.333,0,40.427,0,64v256c0,23.573,19.093,42.667,42.667,42.667h298.667    C364.907,362.667,384,343.573,384,320V64C384,40.427,364.907,21.333,341.333,21.333z M170.667,170.667h-32V160H96v64h42.667    v-10.667h32v21.333c0,11.733-9.493,21.333-21.333,21.333h-64C73.493,256,64,246.4,64,234.667v-85.333    C64,137.6,73.493,128,85.333,128h64c11.84,0,21.333,9.6,21.333,21.333V170.667z M320,170.667h-32V160h-42.667v64H288v-10.667h32    v21.333C320,246.4,310.507,256,298.667,256h-64c-11.84,0-21.333-9.6-21.333-21.333v-85.333c0-11.733,9.493-21.333,21.333-21.333    h64c11.84,0,21.333,9.6,21.333,21.333V170.667z",
                                                        "data-original":
                                                          "#000000",
                                                        "data-old_color":
                                                          "#00A6F9",
                                                        fill: "#00A6F9"
                                                      }
                                                    })
                                                  ])
                                                ])
                                              ])
                                            ]
                                          )
                                        ]),
                                        _vm._v(" "),
                                        _vm._m(3)
                                      ]),
                                      _vm._v(" "),
                                      _c("div", { staticClass: "progress" }, [
                                        _vm.percentSubtitleUpload !== 100
                                          ? _c("div", {
                                              staticClass: "progress-bar",
                                              style: {
                                                width:
                                                  _vm.percentSubtitleUpload +
                                                  "%",
                                                height: "6px"
                                              },
                                              attrs: {
                                                role: "progressbar",
                                                "aria-valuenow":
                                                  _vm.percentSubtitleUpload,
                                                "aria-valuemin": "0",
                                                "aria-valuemax": "100"
                                              }
                                            })
                                          : _c("div", [
                                              _c("i", {
                                                attrs: { id: "btn-progress" }
                                              }),
                                              _vm._v(
                                                " Prepare\n                                        "
                                              )
                                            ])
                                      ]),
                                      _vm._v(" "),
                                      _c("p", { staticClass: "is-danger" }, [
                                        _vm._v(
                                          _vm._s(_vm.error_message_subtitle)
                                        )
                                      ]),
                                      _vm._v(" "),
                                      _c("p", { staticClass: "is-success" }, [
                                        _vm._v(
                                          _vm._s(_vm.success_message_subtitle)
                                        )
                                      ])
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              _c("hr"),
                              _vm._v(" "),
                              _vm.subtitles.subtitles !== null
                                ? _c(
                                    "div",
                                    { staticClass: "table-responsive" },
                                    [
                                      _c(
                                        "div",
                                        { staticClass: "table table-hover" },
                                        [
                                          _vm._m(4),
                                          _vm._v(" "),
                                          _c(
                                            "tbody",
                                            _vm._l(
                                              _vm.subtitles.subtitles,
                                              function(item, index) {
                                                return _c(
                                                  "tr",
                                                  { key: index },
                                                  [
                                                    _c("td", [
                                                      _vm._v(_vm._s(item.name))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("td", [
                                                      _vm._v(
                                                        _vm._s(item.language)
                                                      )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("td", [
                                                      _vm._v(
                                                        _vm._s(item.created_at)
                                                      )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("td", [
                                                      _c(
                                                        "div",
                                                        {
                                                          staticClass:
                                                            "btn-group",
                                                          attrs: {
                                                            role: "group"
                                                          }
                                                        },
                                                        [
                                                          !_vm.button_loading
                                                            ? _c(
                                                                "button",
                                                                {
                                                                  staticClass:
                                                                    "btn btn-sm btn-danger btn-sm mr-2",
                                                                  on: {
                                                                    click: function(
                                                                      $event
                                                                    ) {
                                                                      return _vm.DELETE_SUBTITLE(
                                                                        item.id,
                                                                        index
                                                                      )
                                                                    }
                                                                  }
                                                                },
                                                                [
                                                                  _vm._v(
                                                                    "Delete\n                                                        "
                                                                  )
                                                                ]
                                                              )
                                                            : _vm._e(),
                                                          _vm._v(" "),
                                                          _vm.button_loading ===
                                                          item.id
                                                            ? _c(
                                                                "button",
                                                                {
                                                                  staticClass:
                                                                    "btn btn-sm btn-danger btn-sm mr-2",
                                                                  attrs: {
                                                                    disabled: ""
                                                                  }
                                                                },
                                                                [
                                                                  _c("i", {
                                                                    staticClass:
                                                                      "fa fa-circle-o-notch fa-spin"
                                                                  }),
                                                                  _vm._v(
                                                                    " Loading\n                                                        "
                                                                  )
                                                                ]
                                                              )
                                                            : _vm._e()
                                                        ]
                                                      )
                                                    ])
                                                  ]
                                                )
                                              }
                                            ),
                                            0
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                : _c("div", { staticClass: "text-center" }, [
                                    _c("h4", [_vm._v("There is no subtitles")])
                                  ])
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "modal-footer" }, [
                              _c(
                                "button",
                                {
                                  staticClass: "btn btn-sm btn-warning",
                                  class: { disabled: _vm.disable_button },
                                  attrs: { type: "button" },
                                  on: {
                                    click: function($event) {
                                      return _vm.UPLOAD_SUBTITLE()
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "Upload Subtitle\n                                "
                                  )
                                ]
                              )
                            ])
                          ])
                        ]
                      )
                    ]
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "table-responsive mt-2" }, [
                  _c("div", { staticClass: "table table-hover" }, [
                    _c("thead", [
                      _c("th", { staticStyle: { "text-align": "center" } }, [
                        _c("input", {
                          attrs: { type: "checkbox", id: "select-all" },
                          on: {
                            click: function($event) {
                              return _vm.ADD_ALL_TO_MULITSELECT()
                            }
                          }
                        })
                      ]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Name")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Session")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Epiosde")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Cloud")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Status")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Created date")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Updated date")]),
                      _vm._v(" "),
                      _c("th", [_vm._v("Control")])
                    ]),
                    _vm._v(" "),
                    _c(
                      "tbody",
                      _vm._l(_vm.data.season.data, function(item, index) {
                        return _c("tr", { key: index }, [
                          _c(
                            "td",
                            { staticStyle: { "text-align": "center" } },
                            [
                              _c("input", {
                                attrs: { type: "checkbox", id: item.id },
                                on: {
                                  click: function($event) {
                                    return _vm.ADD_TO_MULITSELECT(
                                      item.id,
                                      index
                                    )
                                  }
                                }
                              })
                            ]
                          ),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.name))]),
                          _vm._v(" "),
                          _c("td", [
                            _vm._v("Session " + _vm._s(item.season_number))
                          ]),
                          _vm._v(" "),
                          _c("td", [
                            _vm._v("Episode " + _vm._s(item.episode_number))
                          ]),
                          _vm._v(" "),
                          item.cloud == "local"
                            ? _c("td", [
                                _vm._v(
                                  "\n                                Local Server\n                            "
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.cloud == "aws"
                            ? _c("td", [
                                _vm._v(
                                  "\n                                AWS S3\n                            "
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.show
                            ? _c("td", [_vm._v("Available")])
                            : _c("td", [_vm._v("Unavailable")]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.created_at))]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.updated_at))]),
                          _vm._v(" "),
                          _c("td", [
                            _c(
                              "div",
                              {
                                staticClass: "btn-group",
                                attrs: { role: "group" }
                              },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    attrs: {
                                      "data-toggle": "modal",
                                      "data-target": "#GetSubtitleModal"
                                    },
                                    on: {
                                      click: function($event) {
                                        return _vm.GET_SUBTITLE(item.id, index)
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "Get Subtitles\n                                    "
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "router-link",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    attrs: {
                                      role: "buttton",
                                      to: {
                                        name: "episode_edit",
                                        params: { id: item.id }
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "\n                                        Edit\n                                    "
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "router-link",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    attrs: {
                                      role: "buttton",
                                      to: {
                                        name: "episode-ads",
                                        params: { id: item.id }
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "\n                                        Ads\n                                    "
                                    )
                                  ]
                                )
                              ],
                              1
                            )
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c(
                  "nav",
                  {
                    staticClass: "m-4 p-1",
                    attrs: { "aria-label": "pagination" }
                  },
                  [
                    _c("ul", { staticClass: "pagination " }, [
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/series/season/" +
                                      _vm.$route.params.id
                                  )
                                }
                              }
                            },
                            [_vm._v("Begin")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.data.season.prev_page_url === null
                          },
                          attrs: { id: "prev" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.data.season.prev_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Previous")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("li", { staticClass: "page-item" }, [
                        _c("a", { staticClass: "page-link" }, [
                          _vm._v(
                            _vm._s(_vm.data.season.current_page) +
                              "/" +
                              _vm._s(_vm.data.season.last_page)
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.data.season.next_page_url === null
                          },
                          attrs: { id: "next" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.data.season.next_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Next")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/series/season/" +
                                      _vm.$route.params.id +
                                      "?page=" +
                                      _vm.data.season.last_page
                                  )
                                }
                              }
                            },
                            [_vm._v("End")]
                          )
                        ]
                      )
                    ])
                  ]
                )
              ])
            : _c("div", [_vm._m(5)])
        ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", { staticClass: "col offset-md-2 offset-lg-5" }, [
      _c("div", { attrs: { id: "search" } }, [
        _c("input", {
          staticClass: "form-control mr-sm-2",
          attrs: { type: "text", placeholder: "Search" }
        })
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "GetSubtitleModalLabel" } },
        [_vm._v("Subtitles")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "subtitleLabel", for: "subtitle" } }, [
      _vm._v("Add New Subtitles\n                                        "),
      _c("br"),
      _vm._v(" "),
      _c("small", [
        _vm._v("The name most be of the same language exm: English.srt")
      ]),
      _vm._v(" "),
      _c("p", { attrs: { id: "subtitleFileDetails" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "title" }, [
      _c("h6", [_c("strong", [_vm._v("Upload and convert srt ")])])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Language")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center mt-5 mr-5" }, [
      _c("h4", [_vm._v("Sorry no result were found")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5b2b89d6", module.exports)
  }
}

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(503)
/* template */
var __vue_template__ = __webpack_require__(504)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/new-series-episode.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39fd1ca7", Component.options)
  } else {
    hotAPI.reload("data-v-39fd1ca7", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



var alertify = __webpack_require__(3);
/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            id: "",
            video_link: [],
            embed: "",
            embedCodeList: [],
            presets: [{
                'Name': 'HLS - 16000Kilorate - 4K',
                'Resolution': '4k',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 4000Kilorate - 1080P',
                'Resolution': '1080',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 2500Kilorate - 720P',
                'Resolution': '720',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 700Kilorate - 480P',
                'Resolution': '480',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 400Kilorate - 320P',
                'Resolution': '320',
                'Container': 'ts'
            }, {
                'Name': 'Generic - 4K',
                'Resolution': '4k',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 1080P',
                'Resolution': '1080',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 720P',
                'Resolution': '720',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 480P',
                'Resolution': '480',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 320P',
                'Resolution': '320',
                'Container': 'mp4'
            }],
            new_presets: [],
            age: null,
            episode_name: "",
            season: "",
            episode: [],
            listSession: [],
            listEpiosde: [],
            upload_type_is: false,
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null
                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            uploadFormData: new FormData(),
            apiFormData: new FormData(),
            cloud_type: false
        };
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.series.data;
        },
        data_search: function data_search(state) {
            return state.series.data_search;
        },
        button_loading: function button_loading(state) {
            return state.series.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.series.spinner_loading;
        },
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        },
        ListProduction: function ListProduction(state) {
            return state.productions.ListProduction;
        }

    }),

    created: function created() {
        this.$store.dispatch("LIST_PRODUCTION");

        for (var i = 1; i < 50; i++) {
            this.listSession.push(i);
        }
        for (var i = 1; i < 2000; i++) {
            this.listEpiosde.push(i);
        }
    },
    mounted: function mounted() {
        var _this = this;

        // Listen for the 'NewBlogPost' event in the 'team.1' private channel
        Echo.channel('progress').listen('EventTrigger', function (payload) {
            if (payload.progress.progress < 2) {
                _this.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    id: payload.progress.tmdb_id,
                    parameter: 'message',
                    object: 'upload',
                    value: payload.progress.message
                });
                _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    data: _this.uploadData[_this.countUploadData]
                });
            }

            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                key: _this.countUploadData,
                id: payload.progress.tmdb_id,
                parameter: 'progress',
                object: 'upload',
                value: payload.progress.progress
            });

            _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                key: _this.countUploadData,
                data: _this.uploadData[_this.countUploadData]
            });
        });
    },


    methods: {
        MOVIEDB_API: function MOVIEDB_API() {
            var _this2 = this;

            this.apiFormData.append("season_number", this.season);
            this.apiFormData.append("episode_number", JSON.stringify(this.episode));
            this.apiFormData.append("series_id", this.$route.params.id);

            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // Check count of upload data
            this.$store.commit('COUNT_UPLOAD_PROGRESS');

            // Upload video form data
            if (this.upload_type_is == 'transcoding') {

                var video = document.querySelector("#video");
                for (var i = 0; i < video.files.length; i++) {
                    this.uploadFormData.append("video[]", video.files[i]);
                }
                this.uploadFormData.append("resolution", JSON.stringify(this.new_presets));
            } else if (this.upload_type_is == 'externalUrl') {

                if (this.video_link.length > 0) {
                    this.uploadFormData.append("video_link", JSON.stringify(this.video_link));
                } else {
                    this.uploadFormData.append("video_link", "empty");
                }
            } else {
                this.uploadFormData.append("embed_code", JSON.stringify(this.embedCodeList));
            }

            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {

                    _this2.disabled_button = true;
                    _this2.upload_data.api.show = true;
                    _this2.upload_data.id = _this2.$route.params.id;

                    _this2.$store.commit('SET_PROGRESS_DATA', _this2.upload_data);
                    _this2.$store.commit('SET_UPLOAD_PROGRESS', _this2.uploadData[_this2.countUploadData]);
                    _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this2.countUploadData,
                        data: _this2.uploadData[_this2.countUploadData]
                    });

                    axios.post("/api/admin/new/series/episode/details", _this2.apiFormData).then(function (response) {
                        if (response.status === 200) {
                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'success_message',
                                object: 'api',
                                value: response.data.message
                            });
                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'progress',
                                object: 'api',
                                value: 100
                            });
                            _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                data: _this2.uploadData[_this2.countUploadData]
                            });

                            _this2.MOVIEVIDEO_S3({
                                id: response.data.id,
                                series_name: response.data.series_name
                            });

                            _this2.$router.back();
                        }
                    }, function (error) {
                        _this2.disabled_button = false;
                        _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                            key: _this2.countUploadData,
                            parameter: 'error_message',
                            object: 'api',
                            value: error.response.data.message
                        });
                        _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                            key: _this2.countUploadData,
                            data: _this2.uploadData[_this2.countUploadData]
                        });
                    });
                }
            });
        },
        MOVIEVIDEO_S3: function MOVIEVIDEO_S3(data) {
            var _this3 = this;

            this.uploadFormData.append("id", JSON.stringify(data.id));
            this.uploadFormData.append("series_name", data.series_name);
            this.uploadFormData.append("series_id", this.$route.params.id);
            this.uploadFormData.append("tmdb_id", this.$route.params.id);
            this.upload_data.upload.show = true;
            // Cloud Type
            this.uploadFormData.append("cloud_type", this.cloud_type);

            this.$store.commit('UPDATE_PROGRESS_DATA', {
                key: this.countUploadData,
                parameter: 'show',
                object: 'upload',
                value: true
            });

            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },

                onUploadProgress: function onUploadProgress(progressEvent) {

                    _this3.upload_data.upload.progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);

                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'progress',
                        object: 'upload',
                        value: _this3.upload_data.upload.progress
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });
                }
            };
            // Store data
            axios.post("/api/admin/new/series/episode/video", this.uploadFormData, progress).then(function (response) {
                if (response.status === 200) {
                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'success_message',
                        object: 'upload',
                        value: response.data.message
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });

                    alertify.logPosition("top right");
                    alertify.success("Successful upload");
                }
            }, function (error) {
                _this3.disabled_button = false;
                _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    parameter: 'error_message',
                    object: 'upload',
                    value: error.response.data.message
                });
                _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    data: _this3.uploadData[_this3.countUploadData]
                });
            });
        },


        // Show file name and size
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        }
    }
});

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-3", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: {
                    role: "button",
                    to: {
                      name: "series_manage_id",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [_vm._v("Manage\n                    ")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning ml-1",
                  attrs: {
                    role: "button",
                    to: {
                      name: "new_series_episode",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [_vm._v("Episode API\n                    ")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning ml-1",
                  attrs: {
                    role: "button",
                    to: {
                      name: "new_series_episode_custome",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [
                  _vm._v(
                    "\n                        Episode custom\n                    "
                  )
                ]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-lg-6" }, [
            _vm._m(0),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 cloud-upload" }, [
                _c("div", { staticClass: "row" }, [
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "local"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "local-cloud-logo",
                          class: { active: _vm.cloud_type === "local" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/local-cloud.svg",
                              alt: "local-cloud",
                              width: "90px"
                            }
                          })
                        ]
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "aws"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "aws-cloud-logo",
                          class: { active: _vm.cloud_type === "aws" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/aws-cloud.svg",
                              alt: "aws-cloud",
                              width: "120px"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _vm.cloud_type
              ? _c(
                  "div",
                  [
                    _c("div", { staticClass: "col-12 col-sm-12 " }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "Session" } }, [
                          _vm._v("Session")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.season,
                                expression: "season"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { id: "Session" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.season = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.listSession, function(list, index) {
                            return _c("option", { key: index }, [
                              _vm._v(_vm._s(list))
                            ])
                          }),
                          0
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 col-sm-12" }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "Episode" } }, [
                          _vm._v("Episode")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.episode,
                                expression: "episode"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { id: "Episode", multiple: "" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.episode = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.listEpiosde, function(list, index) {
                            return _c("option", { key: index }, [
                              _vm._v(_vm._s(list))
                            ])
                          }),
                          0
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", [_vm._v("Choose way of upload")]),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("small", { staticClass: "text-muted" }, [
                          _vm._v(
                            "If you upload External Link, choose 1 episode"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.upload_type_is,
                                expression: "upload_type_is"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "upload_type", id: "upload_type" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.upload_type_is = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", { attrs: { value: "transcoding" } }, [
                              _vm._v("Upload & Transcoding")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "externalUrl" } }, [
                              _vm._v(" Upload External Link")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "embedCode" } }, [
                              _vm._v(" Upload Using Embed Code")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("upload_type"),
                                expression: "errors.has('upload_type')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("upload_type")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "transcoding",
                              expression: "upload_type_is == 'transcoding' "
                            }
                          ],
                          staticClass: "transcoding-section"
                        },
                        [
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12 col-sm-2" }, [
                                  _c("label", [_vm._v("Episode")])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    staticClass: "inputfile",
                                    attrs: { type: "file", id: "video" },
                                    on: {
                                      change: function($event) {
                                        return _vm.infoShow(
                                          "video",
                                          "videoFileDetails"
                                        )
                                      }
                                    }
                                  }),
                                  _vm._v(" "),
                                  _c(
                                    "label",
                                    {
                                      attrs: { id: "videoLabel", for: "video" }
                                    },
                                    [
                                      _vm._v(
                                        "Choose a Episode video\n                                            "
                                      ),
                                      _c("br"),
                                      _vm._v(" "),
                                      _c("p", {
                                        attrs: { id: "videoFileDetails" }
                                      })
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", { attrs: { for: "presets" } }, [
                                    _vm._v("Select Presets")
                                  ]),
                                  _vm._v(" "),
                                  _c(
                                    "select",
                                    {
                                      directives: [
                                        {
                                          name: "validate",
                                          rawName: "v-validate",
                                          value: "required",
                                          expression: "'required'"
                                        },
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.new_presets,
                                          expression: "new_presets"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      staticStyle: { height: "200px" },
                                      attrs: { multiple: "", id: "presets" },
                                      on: {
                                        change: function($event) {
                                          var $$selectedVal = Array.prototype.filter
                                            .call(
                                              $event.target.options,
                                              function(o) {
                                                return o.selected
                                              }
                                            )
                                            .map(function(o) {
                                              var val =
                                                "_value" in o
                                                  ? o._value
                                                  : o.value
                                              return val
                                            })
                                          _vm.new_presets = $event.target
                                            .multiple
                                            ? $$selectedVal
                                            : $$selectedVal[0]
                                        }
                                      }
                                    },
                                    _vm._l(_vm.presets, function(item, index) {
                                      return _c(
                                        "option",
                                        {
                                          key: index,
                                          domProps: { value: item }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                                " +
                                              _vm._s(item.Name) +
                                              "\n                                            "
                                          )
                                        ]
                                      )
                                    }),
                                    0
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has("presets"),
                                          expression: "errors.has('presets')"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first("presets"))
                                      )
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "externalUrl",
                              expression: "upload_type_is == 'externalUrl'"
                            }
                          ],
                          staticClass: "external-link"
                        },
                        [
                          _c(
                            "div",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.upload_type_is == "externalUrl",
                                  expression: "upload_type_is == 'externalUrl'"
                                }
                              ],
                              staticClass: "external-link"
                            },
                            [
                              _vm.upload_type_is == "externalUrl"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("label", [
                                        _vm._v(
                                          "Episode\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("External Link (360p)")]
                                        )
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.video_link[0],
                                            expression: "video_link[0]"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          type: "text",
                                          placeholder: "320P Episode"
                                        },
                                        domProps: { value: _vm.video_link[0] },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              _vm.video_link,
                                              0,
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ])
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              _vm.upload_type_is == "externalUrl"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("label", [
                                        _vm._v(
                                          "Episode\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("External Link (480p)")]
                                        )
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.video_link[1],
                                            expression: "video_link[1]"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          type: "text",
                                          placeholder: "480P Episode"
                                        },
                                        domProps: { value: _vm.video_link[1] },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              _vm.video_link,
                                              1,
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ])
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              _vm.upload_type_is == "externalUrl"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("label", [
                                        _vm._v(
                                          "Episode\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("External Link (720p)")]
                                        )
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.video_link[2],
                                            expression: "video_link[2]"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          type: "text",
                                          placeholder: "720P Episode"
                                        },
                                        domProps: { value: _vm.video_link[2] },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              _vm.video_link,
                                              2,
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ])
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              _vm.upload_type_is == "externalUrl"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("label", [
                                        _vm._v(
                                          "Episode\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("External Link (1080p)")]
                                        )
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.video_link[3],
                                            expression: "video_link[3]"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          type: "text",
                                          placeholder: "1080P Episode"
                                        },
                                        domProps: { value: _vm.video_link[3] },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              _vm.video_link,
                                              3,
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ])
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              _vm.upload_type_is == "externalUrl"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("label", [
                                        _vm._v(
                                          "Episode\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("External Link (4k)")]
                                        )
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "col-12" }, [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.video_link[4],
                                            expression: "video_link[4]"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          type: "text",
                                          placeholder: "4k Episode"
                                        },
                                        domProps: { value: _vm.video_link[4] },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              _vm.video_link,
                                              4,
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ])
                                  ])
                                : _vm._e()
                            ]
                          )
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.upload_type_is === "embedCode",
                                expression: "upload_type_is === 'embedCode'"
                              }
                            ],
                            staticClass: "embed-code"
                          },
                          [
                            _c(
                              "div",
                              { staticClass: "add float-right mb-3 mt-3" },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-warning",
                                    on: {
                                      click: function($event) {
                                        return _vm.embedCodeList.push({
                                          embed_provider: "",
                                          embed_code: ""
                                        })
                                      }
                                    }
                                  },
                                  [
                                    _c("i", { staticClass: "fa fa-plus" }),
                                    _vm._v(
                                      " Add\n                                        "
                                    )
                                  ]
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.embedCodeList, function(item, index) {
                              return _c(
                                "div",
                                { key: index, staticClass: "embed-list" },
                                [
                                  _c("hr"),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "production" } },
                                      [_vm._v("Embed Provider")]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.embed_provider,
                                            expression: "item.embed_provider"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                          name: "productions",
                                          id: "production"
                                        },
                                        on: {
                                          change: function($event) {
                                            var $$selectedVal = Array.prototype.filter
                                              .call(
                                                $event.target.options,
                                                function(o) {
                                                  return o.selected
                                                }
                                              )
                                              .map(function(o) {
                                                var val =
                                                  "_value" in o
                                                    ? o._value
                                                    : o.value
                                                return val
                                              })
                                            _vm.$set(
                                              item,
                                              "embed_provider",
                                              $event.target.multiple
                                                ? $$selectedVal
                                                : $$selectedVal[0]
                                            )
                                          }
                                        }
                                      },
                                      _vm._l(_vm.ListProduction, function(
                                        item1,
                                        index1
                                      ) {
                                        return _c(
                                          "option",
                                          {
                                            key: index1,
                                            domProps: { value: item1.id }
                                          },
                                          [
                                            _vm._v(
                                              "\n                                                    " +
                                                _vm._s(item1.name) +
                                                "\n                                                "
                                            )
                                          ]
                                        )
                                      }),
                                      0
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      {
                                        directives: [
                                          {
                                            name: "show",
                                            rawName: "v-show",
                                            value: _vm.errors.has("production"),
                                            expression:
                                              "errors.has('production')"
                                          }
                                        ],
                                        staticClass: "c-danger-text"
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(_vm.errors.first("production"))
                                        )
                                      ]
                                    )
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      { attrs: { for: "embed-code" } },
                                      [
                                        _vm._v(
                                          "Movie\n                                                "
                                        ),
                                        _c(
                                          "small",
                                          {
                                            staticClass: "form-text text-muted"
                                          },
                                          [_vm._v("Embed Code")]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c("textarea", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: item.embed_code,
                                          expression: "item.embed_code"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: {
                                        type: "text",
                                        id: "embed-code",
                                        placeholder: "Embed code"
                                      },
                                      domProps: { value: item.embed_code },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            item,
                                            "embed_code",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ])
                                ]
                              )
                            })
                          ],
                          2
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 col-sm-6 mt-2" }, [
                      _c("div", { staticClass: "form-group" }, [
                        !_vm.disabled_button
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                on: {
                                  click: function($event) {
                                    return _vm.MOVIEDB_API()
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  "Upload\n                                "
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.disabled_button
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                attrs: { disabled: "" }
                              },
                              [
                                _vm._v(
                                  "Loading\n                                "
                                )
                              ]
                            )
                          : _vm._e()
                      ])
                    ])
                  ],
                  1
                )
              : _vm._e()
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-group" }, [
      _c("div", { staticClass: "col-12" }, [
        _c(
          "div",
          { staticClass: "alert alert-info", attrs: { role: "alert" } },
          [
            _c("strong", [_vm._v("Important ! ")]),
            _vm._v(" "),
            _c("br"),
            _vm._v(" "),
            _c("ol", [
              _c("li", [
                _vm._v(
                  "\n                                        Re-name the video to same episode number and you can upload multiple episode\n                                        in same time. "
                ),
                _c("br")
              ]),
              _vm._v(" "),
              _c("li", [
                _vm._v(
                  " You can upload one episode through External Link Re-stream.\n                                    "
                )
              ])
            ])
          ]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-39fd1ca7", module.exports)
  }
}

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(506)
/* template */
var __vue_template__ = __webpack_require__(507)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/new-series-episode-custome.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2b4a2f24", Component.options)
  } else {
    hotAPI.reload("data-v-2b4a2f24", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



var alertify = __webpack_require__(3);
/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            id: "",
            video_link: [],
            embed: "",
            presets: [{
                'Name': 'HLS - 16000Kilorate - 4K',
                'Resolution': '4k',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 4000Kilorate - 1080P',
                'Resolution': '1080',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 2500Kilorate - 720P',
                'Resolution': '720',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 700Kilorate - 480P',
                'Resolution': '480',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 400Kilorate - 320P',
                'Resolution': '320',
                'Container': 'ts'
            }, {
                'Name': 'Generic - 4K',
                'Resolution': '4k',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 1080P',
                'Resolution': '1080',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 720P',
                'Resolution': '720',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 480P',
                'Resolution': '480',
                'Container': 'mp4'
            }, {
                'Name': 'Generic - 320P',
                'Resolution': '320',
                'Container': 'mp4'
            }],
            new_presets: [],
            name: "",
            overview: "",
            age: null,
            season: "",
            episode: [],
            year: "",
            genres: [],
            runtime: "",
            rate: "",
            youtube: "",
            count: "",
            //Cast
            cast1: "",
            cast2: "",
            cast3: "",
            cast4: "",
            listSession: [],
            listEpiosde: [],
            upload_type_is: false,
            disabled_button: false,
            upload_data: {
                id: null,
                api: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null
                },
                upload: {
                    show: false,
                    progress: 0,
                    success_message: null,
                    error_message: null,
                    message: null

                },
                subtitle: {
                    progress: 0,
                    success_message: null,
                    error_message: null
                }
            },
            uploadFormData: new FormData(),
            apiFormData: new FormData(),
            cloud_type: false

        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.series.data;
        },
        button_loading: function button_loading(state) {
            return state.series.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.series.spinner_loading;
        },
        countUploadData: function countUploadData(state) {
            return state.event.data_count;
        },
        uploadData: function uploadData(state) {
            return state.event.upload_data;
        }
    }),

    created: function created() {
        for (var i = 1; i < 50; i++) {
            this.listSession.push(i);
        }
        for (var i = 1; i < 2000; i++) {
            this.listEpiosde.push(i);
        }
    },
    mounted: function mounted() {
        var _this = this;

        // Listen for the 'NewBlogPost' event in the 'team.1' private channel
        Echo.channel('progress').listen('EventTrigger', function (payload) {
            if (payload.progress.progress < 2) {
                _this.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    id: payload.progress.tmdb_id,
                    parameter: 'message',
                    object: 'upload',
                    value: payload.progress.message
                });
                _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this.countUploadData,
                    data: _this.uploadData[_this.countUploadData]
                });
            }

            _this.$store.commit('UPDATE_PROGRESS_DATA', {
                key: _this.countUploadData,
                id: payload.progress.tmdb_id,
                parameter: 'progress',
                object: 'upload',
                value: payload.progress.progress
            });

            _this.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                key: _this.countUploadData,
                data: _this.uploadData[_this.countUploadData]
            });
        });
    },


    methods: {
        MOVIEDB_API: function MOVIEDB_API() {
            var _this2 = this;

            this.disabled_button = true;

            // Check count of upload data
            this.$store.commit('COUNT_UPLOAD_PROGRESS');

            // Upload video form data
            if (this.upload_type_is == 'transcoding') {
                var video = document.querySelector("#video");
                for (var i = 0; i < video.files.length; i++) {
                    this.uploadFormData.append("video[]", video.files[i]);
                }
                this.uploadFormData.append("resolution", JSON.stringify(this.new_presets));
            } else if (this.upload_type_is == 'externalUrl') {
                if (this.video_link.length > 0) {
                    this.uploadFormData.append("video_link", JSON.stringify(this.video_link));
                } else {
                    this.uploadFormData.append("video_link", "empty");
                }
            } else {
                this.uploadFormData.append("embed", this.embed);
            }

            // Cloud Type
            this.apiFormData.append("cloud_type", this.cloud_type);

            // API form data
            var backdrop = document.querySelector("#backdrop");
            this.apiFormData.append("name", this.name);
            this.apiFormData.append("overview", this.overview);
            this.apiFormData.append("season_number", this.season);
            this.apiFormData.append("episode_number", JSON.stringify(this.episode));
            for (var _i = 0; _i < backdrop.files.length; _i++) {
                this.apiFormData.append("backdrop[]", backdrop.files[_i]);
            }

            this.apiFormData.append("series_id", this.$route.params.id);

            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {

                    _this2.upload_data.api.show = true;
                    _this2.upload_data.id = _this2.$route.params.id;

                    _this2.$store.commit('SET_PROGRESS_DATA', _this2.upload_data);
                    _this2.$store.commit('SET_UPLOAD_PROGRESS', _this2.uploadData[_this2.countUploadData]);
                    _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this2.countUploadData,
                        data: _this2.uploadData[_this2.countUploadData]
                    });

                    axios.post("/api/admin/new/series/episode/details/custom", _this2.apiFormData).then(function (response) {
                        if (response.status === 200) {
                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'success_message',
                                object: 'api',
                                value: response.data.message
                            });
                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'progress',
                                object: 'api',
                                value: 100
                            });
                            _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                data: _this2.uploadData[_this2.countUploadData]
                            });

                            _this2.MOVIEVIDEO_S3({
                                id: response.data.id,
                                series_name: response.data.series_name
                            });

                            _this2.$router.back();
                        }
                    }, function (error) {
                        _this2.disabled_button = false;
                        if (error.response.status == 422) {
                            alertify.logPosition('top right');
                            alertify.error(error.response.data.errors);
                            alertify.error(error.response.data.message);
                        } else {
                            _this2.$store.commit('UPDATE_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                parameter: 'error_message',
                                object: 'api',
                                value: error.response.data.message
                            });
                            _this2.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                                key: _this2.countUploadData,
                                data: _this2.uploadData[_this2.countUploadData]
                            });
                        }
                    });
                }
            });
        },
        MOVIEVIDEO_S3: function MOVIEVIDEO_S3(data) {
            var _this3 = this;

            this.uploadFormData.append("id", JSON.stringify(data.id));
            this.uploadFormData.append("tmdb_id", this.$route.params.id);
            this.uploadFormData.append("series_name", data.series_name);
            this.uploadFormData.append("series_id", this.$route.params.id);
            // Cloud Type
            this.uploadFormData.append("cloud_type", this.cloud_type);
            this.upload_data.upload.show = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },

                onUploadProgress: function onUploadProgress(progressEvent) {

                    _this3.upload_data.upload.progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);

                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'progress',
                        object: 'upload',
                        value: _this3.upload_data.upload.progress
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });
                }
            };
            // Store data
            axios.post("/api/admin/new/series/episode/video", this.uploadFormData, progress).then(function (response) {
                if (response.status === 200) {
                    _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        parameter: 'success_message',
                        object: 'upload',
                        value: response.data.message
                    });

                    _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                        key: _this3.countUploadData,
                        data: _this3.uploadData[_this3.countUploadData]
                    });

                    alertify.logPosition("top right");
                    alertify.success("Successful upload");
                }
            }, function (error) {
                _this3.disabled_button = false;

                _this3.$store.commit('UPDATE_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    parameter: 'error_message',
                    object: 'upload',
                    value: error.response.data.message
                });
                _this3.$store.commit('UPDATE_UPLOAD_PROGRESS_DATA', {
                    key: _this3.countUploadData,
                    data: _this3.uploadData[_this3.countUploadData]
                });
            });
        },


        // Show file name and size
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        }
    }
});

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-3", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: {
                    role: "button",
                    to: {
                      name: "series_manage_id",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [_vm._v("Manage\n                    ")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning ml-1",
                  attrs: {
                    role: "button",
                    to: {
                      name: "new_series_episode",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [_vm._v("Episode API\n                    ")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning ml-1",
                  attrs: {
                    role: "button",
                    to: {
                      name: "new_series_episode_custome",
                      params: { id: this.$route.params.id }
                    }
                  }
                },
                [
                  _vm._v(
                    "\n                        Episode custom\n                    "
                  )
                ]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-lg-6" }, [
            _vm._m(0),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 cloud-upload" }, [
                _c("div", { staticClass: "row" }, [
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "local"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "local-cloud-logo",
                          class: { active: _vm.cloud_type === "local" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/local-cloud.svg",
                              alt: "local-cloud",
                              width: "90px"
                            }
                          })
                        ]
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "col-12 col-sm-6 image",
                      on: {
                        click: function($event) {
                          _vm.cloud_type = "aws"
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "aws-cloud-logo",
                          class: { active: _vm.cloud_type === "aws" }
                        },
                        [
                          _c("img", {
                            attrs: {
                              src: "/themes/default/img/aws-cloud.svg",
                              alt: "aws-cloud",
                              width: "120px"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _vm.cloud_type
              ? _c(
                  "div",
                  [
                    _c("div", { staticClass: "col-12 col-sm-12 " }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "Session" } }, [
                          _vm._v("Session")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.season,
                                expression: "season"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { id: "Session" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.season = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.listSession, function(list, index) {
                            return _c("option", { key: index }, [
                              _vm._v(_vm._s(list))
                            ])
                          }),
                          0
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 col-sm-12" }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "Episode" } }, [
                          _vm._v("Episode")
                        ]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.episode,
                                expression: "episode"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { id: "Episode", multiple: "" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.episode = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          _vm._l(_vm.listEpiosde, function(list, index) {
                            return _c("option", { key: index }, [
                              _vm._v(_vm._s(list))
                            ])
                          }),
                          0
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _vm._m(2),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12 col-sm-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "image",
                              expression: "'image'"
                            }
                          ],
                          staticClass: "inputfile",
                          attrs: {
                            type: "file",
                            id: "backdrop",
                            name: "backdrop",
                            multiple: ""
                          },
                          on: {
                            change: function($event) {
                              return _vm.infoShow(
                                "backdrop",
                                "backropFileDetails"
                              )
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm._m(3),
                        _vm._v(" "),
                        _c("img", {
                          staticStyle: { display: "none" },
                          attrs: {
                            src: "",
                            id: "backdropFileImage",
                            width: "100%"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("backdrop"),
                                expression: "errors.has('backdrop')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c("label", [_vm._v("Choose way of upload")]),
                        _vm._v(" "),
                        _c(
                          "select",
                          {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required",
                                expression: "'required'"
                              },
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.upload_type_is,
                                expression: "upload_type_is"
                              }
                            ],
                            staticClass: "form-control",
                            attrs: { name: "upload_type", id: "upload_type" },
                            on: {
                              change: function($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function(o) {
                                    return o.selected
                                  })
                                  .map(function(o) {
                                    var val = "_value" in o ? o._value : o.value
                                    return val
                                  })
                                _vm.upload_type_is = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              }
                            }
                          },
                          [
                            _c("option", { attrs: { value: "transcoding" } }, [
                              _vm._v("Upload & Transcoding")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "externalUrl" } }, [
                              _vm._v(" Upload External Link")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("upload_type"),
                                expression: "errors.has('upload_type')"
                              }
                            ],
                            staticClass: " is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("upload_type")))]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "transcoding",
                              expression: "upload_type_is == 'transcoding' "
                            }
                          ],
                          staticClass: "transcoding-section"
                        },
                        [
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12 col-sm-2" }, [
                                  _c("label", [_vm._v("Episode")])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    staticClass: "inputfile",
                                    attrs: { type: "file", id: "video" },
                                    on: {
                                      change: function($event) {
                                        return _vm.infoShow(
                                          "video",
                                          "videoFileDetails"
                                        )
                                      }
                                    }
                                  }),
                                  _vm._v(" "),
                                  _c(
                                    "label",
                                    {
                                      attrs: { id: "videoLabel", for: "video" }
                                    },
                                    [
                                      _vm._v(
                                        "Choose a episode video\n                                            "
                                      ),
                                      _c("br"),
                                      _vm._v(" "),
                                      _c("p", {
                                        attrs: { id: "videoFileDetails" }
                                      })
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "transcoding"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", { attrs: { for: "presets" } }, [
                                    _vm._v("Select Presets")
                                  ]),
                                  _vm._v(" "),
                                  _c(
                                    "select",
                                    {
                                      directives: [
                                        {
                                          name: "validate",
                                          rawName: "v-validate",
                                          value: "required",
                                          expression: "'required'"
                                        },
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.new_presets,
                                          expression: "new_presets"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      staticStyle: { height: "200px" },
                                      attrs: { multiple: "", id: "presets" },
                                      on: {
                                        change: function($event) {
                                          var $$selectedVal = Array.prototype.filter
                                            .call(
                                              $event.target.options,
                                              function(o) {
                                                return o.selected
                                              }
                                            )
                                            .map(function(o) {
                                              var val =
                                                "_value" in o
                                                  ? o._value
                                                  : o.value
                                              return val
                                            })
                                          _vm.new_presets = $event.target
                                            .multiple
                                            ? $$selectedVal
                                            : $$selectedVal[0]
                                        }
                                      }
                                    },
                                    _vm._l(_vm.presets, function(item, index) {
                                      return _c(
                                        "option",
                                        {
                                          key: index,
                                          domProps: { value: item }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                                " +
                                              _vm._s(item.Name) +
                                              "\n                                            "
                                          )
                                        ]
                                      )
                                    }),
                                    0
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has("presets"),
                                          expression: "errors.has('presets')"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first("presets"))
                                      )
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "menu-popover" } }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.upload_type_is == "externalUrl",
                              expression: "upload_type_is == 'externalUrl'"
                            }
                          ],
                          staticClass: "external-link"
                        },
                        [
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Episode\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (360p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[0],
                                        expression: "video_link[0]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "320P Episode"
                                    },
                                    domProps: { value: _vm.video_link[0] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          0,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Episode\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (480p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[1],
                                        expression: "video_link[1]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "480P Episode"
                                    },
                                    domProps: { value: _vm.video_link[1] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          1,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Episode\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (720p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[2],
                                        expression: "video_link[2]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "720P Episode"
                                    },
                                    domProps: { value: _vm.video_link[2] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          2,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Episode\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (1080p)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[3],
                                        expression: "video_link[3]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "1080P Episode"
                                    },
                                    domProps: { value: _vm.video_link[3] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          3,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.upload_type_is == "externalUrl"
                            ? _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("label", [
                                    _vm._v(
                                      "Episode\n                                            "
                                    ),
                                    _c(
                                      "small",
                                      { staticClass: "form-text text-muted" },
                                      [_vm._v("External Link (4k)")]
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-12" }, [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.video_link[4],
                                        expression: "video_link[4]"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    attrs: {
                                      type: "text",
                                      placeholder: "4k Episode"
                                    },
                                    domProps: { value: _vm.video_link[4] },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.$set(
                                          _vm.video_link,
                                          4,
                                          $event.target.value
                                        )
                                      }
                                    }
                                  })
                                ])
                              ])
                            : _vm._e()
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12 mt-2" }, [
                      _c("div", { staticClass: "form-group" }, [
                        !_vm.disabled_button
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                on: {
                                  click: function($event) {
                                    return _vm.MOVIEDB_API()
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  "Upload\n                                "
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.disabled_button
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                attrs: { disabled: "" }
                              },
                              [
                                _vm._v(
                                  "Loading\n                                "
                                )
                              ]
                            )
                          : _vm._e()
                      ])
                    ])
                  ],
                  1
                )
              : _vm._e()
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-group" }, [
      _c("div", { staticClass: "col-12" }, [
        _c(
          "div",
          { staticClass: "alert alert-info", attrs: { role: "alert" } },
          [
            _c("strong", [_vm._v("Important ! ")]),
            _vm._v(" "),
            _c("br"),
            _vm._v(" "),
            _c("ol", [
              _c("li", [
                _vm._v(
                  "\n                                        Re-name the video and image to same episode number and you can upload multiple episode in same time. "
                ),
                _c("br")
              ]),
              _vm._v(" "),
              _c("li", [
                _vm._v(
                  " You can upload one episode through External Link Re-stream.\n                                    "
                )
              ])
            ])
          ]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Choose Cloud ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                    "),
      _c("br"),
      _vm._v(" "),
      _c("p", { attrs: { id: "backropFileDetails" } })
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2b4a2f24", module.exports)
  }
}

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(509)
/* template */
var __vue_template__ = __webpack_require__(510)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/episode-edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-ecf400de", Component.options)
  } else {
    hotAPI.reload("data-v-ecf400de", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      id: "",
      video_link: [],
      showProgress: false,
      percentEpisodeApi: 0,
      name: "",
      overview: "",
      season: "",
      episode: "",
      listSession: [],
      listEpiosde: [],
      episodeApi: false,
      error_message_api: "",
      success_message_api: ""
    };
  },

  components: {
    Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
  },
  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.series.episode_data;
    },
    button_loading: function button_loading(state) {
      return state.series.button_loading;
    },
    spinner_loading: function spinner_loading(state) {
      return state.series.spinner_loading;
    }
  }),
  created: function created() {
    this.$store.dispatch("GET_EPISODE_DETAILS", this.$route.params.id);

    for (var i = 1; i < 50; i++) {
      this.listSession.push(i);
    }
    for (var i = 1; i < 2000; i++) {
      this.listEpiosde.push(i);
    }
  },


  methods: {
    MOVIEDB_API: function MOVIEDB_API() {
      var _this = this;

      var backdrop = document.querySelector("#backdrop");
      var formData = new FormData();
      formData.append("id", this.$route.params.id);
      formData.append("name", this.data.name);
      formData.append("overview", this.data.overview);
      formData.append("season_number", this.data.season_number);
      formData.append("episode_number", this.data.episode_number);
      formData.append("video_url", this.data.video_url);
      formData.append("videos", JSON.stringify(this.data.videos));
      formData.append("backdrop", backdrop.files[0]);

      var progress = {
        headers: {
          "content-type": "multipart/form-data"
        },
        onUploadProgress: function onUploadProgress(progressEvent) {
          _this.percentEpisodeApi = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
        }
      };
      // Store data
      this.$validator.validateAll().then(function (result) {
        if (result) {
          _this.showProgress = true;
          _this.episodeApi = true;
          axios.post("/api/admin/update/series/episode", formData, progress).then(function (response) {
            if (response.status === 200) {
              _this.success_message_api = response.data.message;
              _this.showProgress = false;
              alertify.logPosition("top right");
              alertify.success("Successful upload");
              _this.$router.go(-1);
            }
          }, function (error) {
            _this.error_message_api = error.response.data.message;
            _this.showProgress = false;
          });
        }
      });
    },
    readImage: function readImage(id, outImage) {
      var img = document.getElementById(id);
      var tgt = img.target || window.event.srcElement,
          files = tgt.files;

      // FileReader support
      if (FileReader && files && files.length) {
        var fr = new FileReader();
        fr.onload = function () {
          var srcImage = document.getElementById(outImage);
          srcImage.src = fr.result;
        };
        fr.readAsDataURL(files[0]);
      } else {
        // Not supported
        // fallback -- perhaps submit the input to an iframe and temporarily store
        // them on the server until the user's session ends.
      }
    }
  }
});

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "episode-edit" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [
            _vm._v(_vm._s(_vm.data.name))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-sm-12 col-md-6" }, [
                _c("div", { staticClass: "col-12 col-sm-12 " }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", [_vm._v("Name")]),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|max:30",
                          expression: "'required|max:30'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.name,
                          expression: "data.name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "name",
                        type: "text",
                        placeholder: "Name"
                      },
                      domProps: { value: _vm.data.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data, "name", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("name"),
                            expression: "errors.has('name')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("name")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-12 " }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", [_vm._v("Overview")]),
                    _vm._v(" "),
                    _c("textarea", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|max:255",
                          expression: "'required|max:255'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.overview,
                          expression: "data.overview"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "overview",
                        type: "text",
                        placeholder: "Overview"
                      },
                      domProps: { value: _vm.data.overview },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data, "overview", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("overview"),
                            expression: "errors.has('overview')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("overview")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-12 " }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { attrs: { for: "Session" } }, [
                      _vm._v("Session")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.season_number,
                            expression: "data.season_number"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { id: "Session" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.data,
                              "season_number",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      _vm._l(_vm.listSession, function(list, index) {
                        return _c("option", { key: index }, [
                          _vm._v(_vm._s(list))
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-12" }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { attrs: { for: "Episode" } }, [
                      _vm._v("Episode")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.episode_number,
                            expression: "data.episode_number"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { id: "Episode" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.data,
                              "episode_number",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      _vm._l(_vm.listEpiosde, function(list, index) {
                        return _c("option", { key: index }, [
                          _vm._v(_vm._s(list))
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: {
                        type: "file",
                        id: "backdrop",
                        name: "backdrop",
                        multiple: ""
                      },
                      on: {
                        change: function($event) {
                          return _vm.readImage("backdrop", "backdropFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(1),
                    _vm._v(" "),
                    _vm.data.cloud == "local"
                      ? _c("img", {
                          attrs: {
                            src: "/storage/backdrops/300_" + _vm.data.backdrop,
                            id: "backdropFileImage",
                            width: "100%"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.data.cloud == "aws"
                      ? _c("img", {
                          attrs: {
                            src: _vm.md_backdrop + _vm.data.backdrop,
                            alt: _vm.data.backdrop,
                            id: "backdropFileImage",
                            width: "100%"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("backdrop"),
                            expression: "errors.has('backdrop')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("backdrop"),
                            expression: "errors.has('backdrop')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                    )
                  ])
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("h4", [_vm._v("Videos")]),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "mt-4",
                    attrs: { id: "accordion resolution-videos" }
                  },
                  [
                    _c("h5", { staticClass: "title p-2" }, [_vm._v("Videos")]),
                    _vm._v(" "),
                    _vm._l(_vm.data.videos, function(item, index) {
                      return _c("div", { key: index, staticClass: "card" }, [
                        item.video_format !== "embed"
                          ? _c(
                              "div",
                              {
                                staticClass: "card-header",
                                attrs: { id: "heading" + index }
                              },
                              [
                                _c("h5", { staticClass: "mb-0" }, [
                                  _c(
                                    "button",
                                    {
                                      staticClass: "btn btn-link",
                                      attrs: {
                                        "data-toggle": "collapse",
                                        "data-target": "#collapse" + index,
                                        "aria-expanded": "true",
                                        "aria-controls": "collapse" + index
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                        Resolution "
                                      ),
                                      item.resolution === "320"
                                        ? _c("span", [_vm._v("320P")])
                                        : _vm._e(),
                                      _vm._v(" "),
                                      item.resolution === "480"
                                        ? _c("span", [_vm._v("480P")])
                                        : _vm._e(),
                                      _vm._v(" "),
                                      item.resolution === "720"
                                        ? _c("span", [_vm._v("720P")])
                                        : _vm._e(),
                                      _vm._v(" "),
                                      item.resolution === "1080"
                                        ? _c("span", [_vm._v("1080P")])
                                        : _vm._e()
                                    ]
                                  )
                                ])
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "collapse show",
                            attrs: {
                              id: "collapse" + index,
                              "aria-labelledby": "heading" + index,
                              "data-parent": "#accordion"
                            }
                          },
                          [
                            _c("div", { staticClass: "card-body" }, [
                              _c(
                                "div",
                                { staticClass: "form-group video-player" },
                                [
                                  item.video_format !== "embed"
                                    ? _c(
                                        "video",
                                        {
                                          attrs: { width: "100%", controls: "" }
                                        },
                                        [
                                          _c("source", {
                                            attrs: {
                                              src: item.video_url,
                                              type: "application/x-mpegurl"
                                            }
                                          }),
                                          _vm._v(
                                            "\n                                            Your browser does not support the video tag.\n                                        "
                                          )
                                        ]
                                      )
                                    : _vm._e()
                                ]
                              ),
                              _vm._v(" "),
                              item.video_format !== "embed"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      {
                                        staticClass: "m-1",
                                        attrs: { for: "link" }
                                      },
                                      [_vm._v("Video Link")]
                                    ),
                                    _vm._v(" "),
                                    _c("input", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: item.video_url,
                                          expression: "item.video_url"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: {
                                        type: "text",
                                        name: "link",
                                        id: "link"
                                      },
                                      domProps: { value: item.video_url },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            item,
                                            "video_url",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              item.video_format === "embed"
                                ? _c("div", { staticClass: "form-group" }, [
                                    _c(
                                      "label",
                                      {
                                        staticClass: "m-1",
                                        attrs: { for: "link" }
                                      },
                                      [
                                        _vm._v(
                                          "Embed Code " + _vm._s(index + 1)
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c("textarea", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: item.embed_code,
                                          expression: "item.embed_code"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: {
                                        type: "text",
                                        name: "link",
                                        rows: "5",
                                        id: "embed",
                                        placeholder:
                                          "Put your new code for update"
                                      },
                                      domProps: { value: item.embed_code },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            item,
                                            "embed_code",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ])
                                : _vm._e()
                            ])
                          ]
                        )
                      ])
                    })
                  ],
                  2
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6 mt-2" }, [
              _c("div", { staticClass: "form-group" }, [
                _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.MOVIEDB_API()
                      }
                    }
                  },
                  [_vm._v("Update")]
                )
              ])
            ])
          ]),
          _vm._v(" "),
          _vm.showProgress
            ? _c("div", { staticClass: "upload-modal" }, [
                _c(
                  "div",
                  { staticClass: "modal-dialog", attrs: { role: "document" } },
                  [
                    _c("div", { staticClass: "modal-content" }, [
                      _c("div", { staticClass: "modal-body p-4" }, [
                        _vm.episodeApi
                          ? _c("div", { staticClass: "episodeApi" }, [
                              _c("div", { staticClass: "progress mt-2" }, [
                                _vm.percentEpisodeApi !== 100
                                  ? _c("div", {
                                      staticClass: "progress-bar",
                                      style: {
                                        width: _vm.percentEpisodeApi + "%",
                                        height: "6px"
                                      },
                                      attrs: {
                                        role: "progressbar",
                                        "aria-valuenow": _vm.percentEpisodeApi,
                                        "aria-valuemin": "0",
                                        "aria-valuemax": "100"
                                      }
                                    })
                                  : _c("div", [
                                      _c("i", {
                                        attrs: { id: "btn-progress" }
                                      }),
                                      _vm._v(
                                        " Prepare\n                                "
                                      )
                                    ])
                              ]),
                              _vm._v(" "),
                              _c("p", { staticClass: "is-danger" }, [
                                _vm._v(_vm._s(_vm.error_message_api))
                              ]),
                              _vm._v(" "),
                              _c("p", { staticClass: "is-success" }, [
                                _vm._v(_vm._s(_vm.success_message_api))
                              ]),
                              _vm._v(" "),
                              _c("hr")
                            ])
                          : _vm._e()
                      ])
                    ])
                  ]
                )
              ])
            : _vm._e()
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-ecf400de", module.exports)
  }
}

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(512)
/* template */
var __vue_template__ = __webpack_require__(515)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/episode-ads.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-103ca579", Component.options)
  } else {
    hotAPI.reload("data-v-103ca579", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_slider_component__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_slider_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vue_slider_component__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_slider_component_theme_antd_css__ = __webpack_require__(513);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_slider_component_theme_antd_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_slider_component_theme_antd_css__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            ads: [],
            scheduleAds: [],
            deleteAds: [],
            duplicate: [],
            range: '',
            new: false,
            loading: false
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a,
        vueSlider: __WEBPACK_IMPORTED_MODULE_2_vue_slider_component___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.ads.data;
        },
        episode_data: function episode_data(state) {
            return state.series.episode_data;
        },
        spinner_loading: function spinner_loading(state) {
            return state.ads.spinner_loading;
        }
    }),

    watch: {
        ads: function ads() {
            if (this.new) {
                this.ads[this.ads.length - 1].range = {
                    value: 0
                };
            }
        },
        duplicate: function duplicate() {
            this.duplicate[this.duplicate.length - 1].type = 'duplicate';
        }
    },

    created: function created() {
        var _this = this;

        // schedules ads
        axios.get("/api/admin/get/series/episode/schedules/ads/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {

                if (resposne.data.data !== null) {

                    _this.ads = resposne.data.data;
                    for (var i = 0; i < resposne.data.data.length; i++) {
                        _this.ads[i].range = {
                            value: resposne.data.data[i].offset
                        };
                        _this.scheduleAds.push({
                            tag: resposne.data.data[i].tags,
                            offset: resposne.data.data[i].offset + '%'
                        });
                    }

                    setTimeout(function () {
                        jwplayer("player").setup({
                            "file": _this.episode_data.videos[0].video_url,
                            autostart: true,
                            advertising: {
                                client: 'vast',
                                adscheduleid: "b6Wd5tsW",
                                schedule: _this.scheduleAds
                            }
                        });
                    }, 1500);
                } else {
                    setTimeout(function () {
                        jwplayer("player").setup({
                            "file": _this.episode_data.videos[0].video_url,
                            autostart: true
                        });
                    }, 1500);
                }
            }
        });
        this.$store.dispatch("GET_ALL_ADS");
        this.$store.dispatch("GET_EPISODE_DETAILS", this.$route.params.id);
    },


    methods: {
        addAdsToDemo: function addAdsToDemo(data, index) {
            this.new = true;
            this.ads.push(data);

            this.scheduleAds.push({
                tag: data.tags,
                offset: 0
            });

            this.data.ads.splice(index, 1);

            jwplayer("player").setup({
                file: this.episode_data.videos[0].video_url,
                autostart: false,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        duplicateAds: function duplicateAds(data) {
            this.ads.push({
                ad_name: data.ad_name,
                ads_id: data.ads_id !== undefined ? data.ads_id : data.id,
                client: data.client,
                episode_id: data.episode_id,
                offset: data.offset,
                range: {
                    value: data.range.value
                },
                schedules_id: data.schedules_id,
                tags: data.tags,
                type: 'dup'
            });

            this.scheduleAds.push({
                tag: data.tags,
                offset: 0
            });

            jwplayer("player").setup({
                file: this.episode_data.videos[0].video_url,
                autostart: false,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        updateRange: function updateRange(value, key) {
            this.scheduleAds[key].offset = value + '%';

            jwplayer("player").setup({
                file: this.episode_data.videos[0].video_url,
                autostart: true,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        removeAds: function removeAds(index) {
            this.data.ads.push(this.ads[index]);
            this.deleteAds.push(this.ads[index]);
            this.ads.splice(index, 1);
        },
        UPDATE: function UPDATE() {
            var _this2 = this;

            this.loading = true;

            axios.post("/api/admin/create/series/episode/schedules/ads/" + this.$route.params.id, {
                update: this.ads,
                delete: this.deleteAds
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    _this2.loading = false;
                    _this2.$router.back();
                }
            }, function (error) {
                _this2.error_message_api = error.response.data.message;
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                setTimeout(function () {
                    _this2.loading = false;
                }, 4000);
            });
        }
    }

});

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(514);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(66)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../css-loader/index.js!./antd.css", function() {
			var newContent = require("!!../../css-loader/index.js!./antd.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* component style */\n.vue-slider-disabled .vue-slider-process {\n  background-color: #a7a7a7;\n}\n.vue-slider-disabled .vue-slider-dot-handle {\n  border-color: #a7a7a7;\n}\n.vue-slider-disabled .vue-slider-mark-step-active {\n  box-shadow: 0 0 0 2px #a7a7a7;\n}\n\n/* rail style */\n.vue-slider-rail {\n  background-color: whitesmoke;\n  border-radius: 15px;\n  transition: background-color 0.3s;\n}\n.vue-slider:hover .vue-slider-rail {\n  background-color: #e1e1e1;\n}\n\n/* process style */\n.vue-slider-process {\n  background-color: #9cd5ff;\n  border-radius: 15px;\n  transition: background-color 0.3s;\n}\n.vue-slider:hover .vue-slider-process {\n  background-color: #69c0ff;\n}\n\n/* mark style */\n.vue-slider-mark-step {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  box-shadow: 0 0 0 2px #e8e8e8;\n  background-color: #fff;\n}\n.vue-slider-mark-step-active {\n  box-shadow: 0 0 0 2px #9cd5ff;\n}\n.vue-slider:hover .vue-slider-mark-step-active {\n  box-shadow: 0 0 0 2px #69c0ff;\n}\n\n.vue-slider-mark-label {\n  font-size: 12px;\n  white-space: nowrap;\n}\n/* dot style */\n.vue-slider-dot-handle {\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #fff;\n  border: 2px solid #9cd5ff;\n  box-sizing: border-box;\n  transition: box-shadow 0.3s, border-color 0.3s;\n}\n.vue-slider:hover .vue-slider-dot-handle {\n  border-color: #69c0ff;\n}\n\n.vue-slider-dot-handle-focus {\n  border-color: #36abff;\n  box-shadow: 0 0 0 5px rgba(54, 171, 255, 0.2);\n}\n.vue-slider:hover .vue-slider-dot-handle-focus {\n  border-color: #36abff;\n}\n\n.vue-slider-dot-handle:hover {\n  border-color: #36abff;\n}\n.vue-slider:hover .vue-slider-dot-handle:hover {\n  border-color: #36abff;\n}\n\n.vue-slider-dot-handle-disabled {\n  cursor: not-allowed;\n  border-color: #ddd !important;\n}\n\n.vue-slider-dot-tooltip {\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s;\n}\n.vue-slider-dot-tooltip-inner {\n  font-size: 14px;\n  white-space: nowrap;\n  padding: 6px 8px;\n  color: #fff;\n  border-radius: 5px;\n  border-color: rgba(0, 0, 0, 0.75);\n  background-color: rgba(0, 0, 0, 0.75);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  transform: scale(0.9);\n  transition: transform 0.3s;\n}\n.vue-slider-dot-tooltip-inner::after {\n  content: \"\";\n  position: absolute;\n}\n.vue-slider-dot-tooltip-inner-top::after {\n  top: 100%;\n  left: 50%;\n  transform: translate(-50%, 0);\n  height: 0;\n  width: 0;\n  border-color: transparent;\n  border-style: solid;\n  border-width: 5px;\n  border-top-color: inherit;\n}\n.vue-slider-dot-tooltip-inner-bottom::after {\n  bottom: 100%;\n  left: 50%;\n  transform: translate(-50%, 0);\n  height: 0;\n  width: 0;\n  border-color: transparent;\n  border-style: solid;\n  border-width: 5px;\n  border-bottom-color: inherit;\n}\n.vue-slider-dot-tooltip-inner-left::after {\n  left: 100%;\n  top: 50%;\n  transform: translate(0, -50%);\n  height: 0;\n  width: 0;\n  border-color: transparent;\n  border-style: solid;\n  border-width: 5px;\n  border-left-color: inherit;\n}\n.vue-slider-dot-tooltip-inner-right::after {\n  right: 100%;\n  top: 50%;\n  transform: translate(0, -50%);\n  height: 0;\n  width: 0;\n  border-color: transparent;\n  border-style: solid;\n  border-width: 5px;\n  border-right-color: inherit;\n}\n.vue-slider-dot-tooltip-inner-top {\n  transform-origin: 50% 100%;\n}\n.vue-slider-dot-tooltip-inner-bottom {\n  transform-origin: 50% 0;\n}\n.vue-slider-dot-tooltip-inner-left {\n  transform-origin: 100% 50%;\n}\n.vue-slider-dot-tooltip-inner-right {\n  transform-origin: 0% 50%;\n}\n\n.vue-slider-dot:hover .vue-slider-dot-tooltip, .vue-slider-dot-tooltip-show {\n  opacity: 1;\n  visibility: visible;\n}\n.vue-slider-dot:hover .vue-slider-dot-tooltip .vue-slider-dot-tooltip-inner, .vue-slider-dot-tooltip-show .vue-slider-dot-tooltip-inner {\n  transform: scale(1);\n}\n", ""]);

// exports


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "create-episode-ads" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "title p-2" }, [_vm._v("Episode Ads")]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 mt-3" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12 col-md-8" }, [
                    _c("label", { attrs: { for: "ad-client" } }, [
                      _vm._v("Select ads")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required",
                            expression: "'required'"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          id: "ad-client",
                          name: "ad-client",
                          multiple: ""
                        }
                      },
                      _vm._l(_vm.data.ads, function(item, index) {
                        return _c(
                          "option",
                          {
                            key: index,
                            domProps: { value: item },
                            on: {
                              click: function($event) {
                                return _vm.addAdsToDemo(item, index)
                              }
                            }
                          },
                          [
                            _vm._v(
                              "\n                                        " +
                                _vm._s(item.ad_name) +
                                "\n                                    "
                            )
                          ]
                        )
                      }),
                      0
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("ad-client"),
                            expression: "errors.has('ad-client')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("ad-client")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c(
                    "div",
                    { staticClass: "col-12 col-md-8" },
                    [
                      _c("label", [_vm._v("Schedule Ads")]),
                      _vm._v(" "),
                      _vm._l(_vm.ads, function(item, index) {
                        return _c(
                          "div",
                          { key: index, staticClass: "schedule-ads" },
                          [
                            _c("div", { staticClass: "header" }, [
                              _c(
                                "div",
                                { staticClass: "left-text pull-left" },
                                [
                                  _vm._v(
                                    "\n                                        " +
                                      _vm._s(item.ad_name) +
                                      "\n                                    "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: "right-text float-right" },
                                [
                                  _vm._v(
                                    "\n                                        " +
                                      _vm._s(item.client) +
                                      "\n                                    "
                                  )
                                ]
                              )
                            ]),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "rang m-2 pt-4" },
                              [
                                _c("vue-slider", {
                                  ref: index,
                                  refInFor: true,
                                  on: {
                                    callback: function($event) {
                                      return _vm.updateRange(
                                        item.range.value,
                                        index
                                      )
                                    }
                                  },
                                  model: {
                                    value: item.range.value,
                                    callback: function($$v) {
                                      _vm.$set(item.range, "value", $$v)
                                    },
                                    expression: "item.range.value"
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(" "),
                            item.type == undefined
                              ? _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-sm btn-warning",
                                    on: {
                                      click: function($event) {
                                        return _vm.duplicateAds(item)
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "Duplicate\n                                    "
                                    )
                                  ]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "button",
                              {
                                staticClass: "btn btn-sm btn-warning",
                                on: {
                                  click: function($event) {
                                    return _vm.removeAds(index)
                                  }
                                }
                              },
                              [_vm._v("Remove")]
                            )
                          ]
                        )
                      })
                    ],
                    2
                  )
                ])
              ]),
              _vm._v(" "),
              _vm._m(0)
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6 mt-2" }, [
              _c("div", { staticClass: "form-group" }, [
                !_vm.loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v("  Loading")
                      ]
                    )
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-md-6" }, [
      _c("h4", [_vm._v("Videos")]),
      _vm._v(" "),
      _c("div", { attrs: { id: "player" } }, [_vm._v("Loading the player...")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-103ca579", module.exports)
  }
}

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(517)
/* template */
var __vue_template__ = __webpack_require__(518)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/movies/movie-ads.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f30acb8c", Component.options)
  } else {
    hotAPI.reload("data-v-f30acb8c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 517 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_slider_component__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_slider_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vue_slider_component__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            ads: [],
            scheduleAds: [],
            deleteAds: [],
            duplicate: [],
            range: '',
            new: false,
            loading: false
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a,
        vueSlider: __WEBPACK_IMPORTED_MODULE_2_vue_slider_component___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.ads.data;
        },
        movie_data: function movie_data(state) {
            return state.movies.data;
        },
        spinner_loading: function spinner_loading(state) {
            return state.ads.spinner_loading;
        }
    }),

    watch: {
        ads: function ads() {
            if (this.new) {
                this.ads[this.ads.length - 1].range = {
                    value: 0
                };
            }
        },
        duplicate: function duplicate() {
            this.duplicate[this.duplicate.length - 1].type = 'duplicate';
        }
    },

    created: function created() {
        var _this = this;

        // schedules ads
        axios.get("/api/admin/get/movies/schedules/ads/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {

                if (resposne.data.data !== null) {

                    _this.ads = resposne.data.data;
                    for (var i = 0; i < resposne.data.data.length; i++) {
                        _this.ads[i].range = {
                            value: resposne.data.data[i].offset
                        };
                        _this.scheduleAds.push({
                            tag: resposne.data.data[i].tags,
                            offset: resposne.data.data[i].offset + '%'
                        });
                    }

                    setTimeout(function () {
                        jwplayer("player").setup({
                            "file": _this.movie_data.videos[0].video_url,
                            autostart: true,
                            advertising: {
                                client: 'vast',
                                adscheduleid: "b6Wd5tsW",
                                schedule: _this.scheduleAds
                            }
                        });
                    }, 1500);
                } else {
                    setTimeout(function () {
                        jwplayer("player").setup({
                            "file": _this.movie_data.videos[0].video_url,
                            autostart: true
                        });
                    }, 1500);
                }
            }
        });

        this.$store.dispatch("GET_ALL_ADS");
        this.$store.dispatch("GET_MOVIE", this.$route.params.id);
    },


    methods: {
        addAdsToDemo: function addAdsToDemo(data, index) {
            this.new = true;
            this.ads.push(data);

            this.scheduleAds.push({
                tag: data.tags,
                offset: 0
            });

            this.data.ads.splice(index, 1);

            jwplayer("player").setup({
                file: this.movie_data.videos[0].video_url,
                autostart: false,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        duplicateAds: function duplicateAds(data) {
            this.ads.push({
                ad_name: data.ad_name,
                ads_id: data.ads_id !== undefined ? data.ads_id : data.id,
                client: data.client,
                movie_id: data.movie_id,
                offset: data.offset,
                range: {
                    value: data.range.value
                },
                schedules_id: data.schedules_id,
                tags: data.tags,
                type: 'dup'
            });

            this.scheduleAds.push({
                tag: data.tags,
                offset: 0
            });

            jwplayer("player").setup({
                file: this.movie_data.videos[0].video_url,
                autostart: false,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        updateRange: function updateRange(value, key) {
            this.scheduleAds[key].offset = value + '%';

            jwplayer("player").setup({
                file: this.movie_data.videos[0].video_url,
                autostart: true,
                advertising: {
                    client: 'vast',
                    adscheduleid: "b6Wd5tsW",
                    schedule: this.scheduleAds
                }
            });
        },
        removeAds: function removeAds(index) {
            this.data.ads.push(this.ads[index]);
            this.deleteAds.push(this.ads[index]);
            this.ads.splice(index, 1);
        },
        UPDATE: function UPDATE() {
            var _this2 = this;

            this.loading = true;

            axios.post("/api/admin/create/movies/schedules/ads/" + this.$route.params.id, {
                update: this.ads,
                delete: this.deleteAds
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    _this2.loading = false;
                    _this2.$router.back();
                }
            }, function (error) {
                _this2.error_message_api = error.response.data.message;
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                setTimeout(function () {
                    _this2.loading = false;
                }, 4000);
            });
        }
    }

});

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "create-movie-ads" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "title p-2" }, [_vm._v("Movie Ads")]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 mt-3" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12 col-md-8" }, [
                    _c("label", { attrs: { for: "ad-client" } }, [
                      _vm._v("Select ads")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required",
                            expression: "'required'"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          id: "ad-client",
                          name: "ad-client",
                          multiple: ""
                        }
                      },
                      _vm._l(_vm.data.ads, function(item, index) {
                        return _c(
                          "option",
                          {
                            key: index,
                            domProps: { value: item },
                            on: {
                              click: function($event) {
                                return _vm.addAdsToDemo(item, index)
                              }
                            }
                          },
                          [
                            _vm._v(
                              "\n                                        " +
                                _vm._s(item.ad_name) +
                                "\n                                    "
                            )
                          ]
                        )
                      }),
                      0
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("ad-client"),
                            expression: "errors.has('ad-client')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("ad-client")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c(
                    "div",
                    { staticClass: "col-12 col-md-8" },
                    [
                      _c("label", [_vm._v("Schedule Ads")]),
                      _vm._v(" "),
                      _vm._l(_vm.ads, function(item, index) {
                        return _c(
                          "div",
                          { key: index, staticClass: "col-12 schedule-ads" },
                          [
                            _c("div", { staticClass: "header" }, [
                              _c(
                                "div",
                                { staticClass: "left-text pull-left" },
                                [
                                  _vm._v(
                                    "\n                                        " +
                                      _vm._s(item.ad_name) +
                                      "\n                                    "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: "right-text float-right" },
                                [
                                  _vm._v(
                                    "\n                                        " +
                                      _vm._s(item.client) +
                                      "\n                                    "
                                  )
                                ]
                              )
                            ]),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "rang m-2 pt-4" },
                              [
                                _c("vue-slider", {
                                  ref: index,
                                  refInFor: true,
                                  on: {
                                    callback: function($event) {
                                      return _vm.updateRange(
                                        item.range.value,
                                        index
                                      )
                                    }
                                  },
                                  model: {
                                    value: item.range.value,
                                    callback: function($$v) {
                                      _vm.$set(item.range, "value", $$v)
                                    },
                                    expression: "item.range.value"
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(" "),
                            item.type == undefined
                              ? _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-sm btn-warning",
                                    on: {
                                      click: function($event) {
                                        return _vm.duplicateAds(item)
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "Duplicate\n                                    "
                                    )
                                  ]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "button",
                              {
                                staticClass: "btn btn-sm btn-warning",
                                on: {
                                  click: function($event) {
                                    return _vm.removeAds(index)
                                  }
                                }
                              },
                              [_vm._v("Remove")]
                            )
                          ]
                        )
                      })
                    ],
                    2
                  )
                ])
              ]),
              _vm._v(" "),
              _vm._m(0)
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6 mt-2" }, [
              _c("div", { staticClass: "form-group" }, [
                !_vm.loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v("  Loading")
                      ]
                    )
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-md-6" }, [
      _c("h4", [_vm._v("Videos")]),
      _vm._v(" "),
      _c("div", { attrs: { id: "player" } }, [_vm._v("Loading the player...")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-f30acb8c", module.exports)
  }
}

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(520)
/* template */
var __vue_template__ = __webpack_require__(521)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/series-edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-675e7b8a", Component.options)
  } else {
    hotAPI.reload("data-v-675e7b8a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 520 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            video_link: null,
            genres: [],
            search_query: "",
            showProgress: false,
            seriesedit: false,
            percentCompleted: 0,
            selectedCast3: null,
            error_message_edit: "",
            success_message_edit: ""
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.series.data;
        },
        genre_list: function genre_list(state) {
            return state.genres.data;
        },
        data_actors: function data_actors(state) {
            return state.actors.data;
        },
        data_actors_search: function data_actors_search(state) {
            return state.actors.data_search;
        },
        button_loading: function button_loading(state) {
            return state.series.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.series.spinner_loading;
        },
        spinner_loading_actor: function spinner_loading_actor(state) {
            return state.actors.spinner_loading;
        },
        categories_list: function categories_list(state) {
            return state.categories.data;
        }

    }),

    watch: {
        search_query: function search_query(val) {
            if (val !== "") {
                this.$store.dispatch("GET_ACTORS_SEARCH", val);
            } else {
                this.$store.commit("CLEAR_SEARCH");
            }
        }
    },

    mounted: function mounted() {
        this.$store.dispatch("GET_SERIES", this.$route.params.id);
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'series');
        this.$store.dispatch("GET_ALL_ACTORS");
        this.$store.dispatch("GET_ALL_GENRES");
    },

    methods: {
        UPDATE: function UPDATE() {
            var _this = this;

            var poster = document.querySelector("#poster");
            var backdrop = document.querySelector("#backdrop");
            var formData = new FormData();
            formData.append("id", this.data.series.id);
            formData.append("name", this.data.series.name);
            formData.append("year", this.data.series.year);
            formData.append("genres", this.genres);
            formData.append("overview", this.data.series.overview);
            formData.append("rate", this.data.series.rate);
            formData.append("poster", poster.files[0]);
            formData.append("backdrop", backdrop.files[0]);
            formData.append("cast", JSON.stringify(this.data.cast));
            formData.append("category", this.data.series.category);

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.showProgress = true;
                    _this.seriesedit = true;
                    var progress = {
                        headers: {
                            "content-type": "multipart/form-data"
                        },
                        onUploadProgress: function onUploadProgress(progressEvent) {
                            _this.percentCompleted = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                        }
                    };
                    var _self = _this;
                    axios.post("api/admin/update/series", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this.success_message_edit = response.data.message;
                            setTimeout(function () {
                                _this.$router.go(-1);
                            }, 2000);
                        }
                    });
                }
            }, function (error) {
                _this.error_message_edit = response.data.message;
            });
        },
        ADD_ACTOR: function ADD_ACTOR(key, type) {
            if (type === "default") {
                this.data.cast.push(this.data_actors.actors.data[key]);
                alertify.logPosition("top right");
                alertify.success(this.data_actors.actors.data[key].name + " has been added to cast");
            } else if (type === "search") {
                this.data.cast.push(this.data_actors_search.actors[key]);
                alertify.logPosition("top right");
                alertify.success(this.data_actors_search.actors[key].name + " has been added to cast");
            }
        },
        DELETE_ACTOR: function DELETE_ACTOR(key) {
            this.data.cast.splice(key, 1);
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [
            _vm._v(_vm._s(_vm.data.series.name))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-3", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: {
                        role: "button",
                        to: {
                          name: "series_manage_id",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [_vm._v("Manage\n                    ")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning ml-1",
                      attrs: {
                        role: "button",
                        to: {
                          name: "new_series_episode",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [_vm._v("Episode API\n                    ")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning ml-1",
                      attrs: {
                        role: "button",
                        to: {
                          name: "new_series_episode_custome",
                          params: { id: this.$route.params.id }
                        }
                      }
                    },
                    [
                      _vm._v(
                        "\n                        Episode custom\n                    "
                      )
                    ]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "actor-modal" }, [
            _c(
              "div",
              {
                staticClass: "modal fade",
                attrs: {
                  id: "GetActorModal",
                  tabindex: "-1",
                  role: "dialog",
                  "aria-labelledby": "GetActorModalLabel",
                  "aria-hidden": "true"
                }
              },
              [
                _c(
                  "div",
                  {
                    staticClass: "modal-dialog modal-lg",
                    attrs: { role: "document" }
                  },
                  [
                    _c("div", { staticClass: "modal-content" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c("div", { staticClass: "modal-body" }, [
                        _vm.spinner_loading_actor
                          ? _c(
                              "div",
                              { staticClass: "spinner-load" },
                              [_c("Loader")],
                              1
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "col-12" }, [
                          _c("div", { staticClass: "form-group" }, [
                            _c("label", [_vm._v("Search")]),
                            _vm._v(" "),
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.search_query,
                                  expression: "search_query"
                                }
                              ],
                              staticClass: "form-control",
                              attrs: {
                                name: "search",
                                type: "text",
                                placeholder: "Search By Name"
                              },
                              domProps: { value: _vm.search_query },
                              on: {
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.search_query = $event.target.value
                                }
                              }
                            })
                          ]),
                          _vm._v(" "),
                          _vm.data_actors.actors !== null
                            ? _c("div", { staticClass: "col-12" }, [
                                _vm.data_actors_search === null
                                  ? _c(
                                      "div",
                                      { staticClass: "row" },
                                      _vm._l(
                                        _vm.data_actors.actors.data,
                                        function(item, index) {
                                          return _c(
                                            "div",
                                            {
                                              key: index,
                                              staticClass:
                                                "col-8 col-sm-3 mt-2 add-actor",
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_ACTOR(
                                                    index,
                                                    "default"
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "div",
                                                { staticClass: "image" },
                                                [
                                                  item.cloud == "local"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src: item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  item.cloud == "aws"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src:
                                                            _vm.md_cast +
                                                            item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  _c("p", [
                                                    _vm._v(_vm._s(item.name))
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        }
                                      ),
                                      0
                                    )
                                  : _c(
                                      "div",
                                      { staticClass: "row" },
                                      _vm._l(
                                        _vm.data_actors_search.actors,
                                        function(item, index) {
                                          return _c(
                                            "div",
                                            {
                                              key: index,
                                              staticClass:
                                                "col-8 col-sm-3 mt-2 add-actor",
                                              on: {
                                                click: function($event) {
                                                  return _vm.ADD_ACTOR(
                                                    index,
                                                    "search"
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "div",
                                                { staticClass: "image" },
                                                [
                                                  item.cloud == "local" ||
                                                  item.cloud == null
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src: item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  item.cloud == "aws"
                                                    ? _c("img", {
                                                        staticClass:
                                                          "img-rounded",
                                                        attrs: {
                                                          src:
                                                            _vm.md_cast +
                                                            item.image,
                                                          id:
                                                            "preview_" +
                                                            item.id,
                                                          width: "100%"
                                                        }
                                                      })
                                                    : _vm._e(),
                                                  _vm._v(" "),
                                                  _c("p", [
                                                    _vm._v(_vm._s(item.name))
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        }
                                      ),
                                      0
                                    )
                              ])
                            : _c("div", [_vm._m(1)])
                        ])
                      ])
                    ])
                  ]
                )
              ]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(2),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|max:60",
                          expression: "'required|max:60'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.series.name,
                          expression: "data.series.name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "name",
                        type: "text",
                        placeholder: "Name"
                      },
                      domProps: { value: _vm.data.series.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data.series, "name", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("name"),
                            expression: "errors.has('name')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("name")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(3),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|numeric|max:4",
                          expression: "'required|numeric|max:4'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.series.year,
                          expression: "data.series.year"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "year",
                        type: "text",
                        placeholder: "Years"
                      },
                      domProps: { value: _vm.data.series.year },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data.series, "year", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("year"),
                            expression: "errors.has('year')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("year")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(4),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.genres,
                            expression: "genres"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: {
                          multiple: "",
                          name: "genres",
                          id: "exampleSelect2"
                        },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.genres = $event.target.multiple
                              ? $$selectedVal
                              : $$selectedVal[0]
                          }
                        }
                      },
                      _vm._l(_vm.genre_list, function(item, index) {
                        return _c(
                          "option",
                          { key: index, domProps: { value: item.name } },
                          [_vm._v(_vm._s(item.name))]
                        )
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(5),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required",
                            expression: "'required'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.series.category,
                            expression: "data.series.category"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { name: "category", id: "category" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.data.series,
                              "category",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      _vm._l(_vm.categories_list.categories, function(
                        item,
                        index
                      ) {
                        return _c(
                          "option",
                          { key: index, domProps: { value: item.id } },
                          [
                            _vm._v(
                              "\n                                        " +
                                _vm._s(item.name) +
                                "\n                                    "
                            )
                          ]
                        )
                      }),
                      0
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("category"),
                            expression: "errors.has('category')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("category")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(6),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("textarea", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.series.overview,
                          expression: "data.series.overview"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "overview",
                        type: "text",
                        placeholder: "Overview"
                      },
                      domProps: { value: _vm.data.series.overview },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.data.series,
                            "overview",
                            $event.target.value
                          )
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("overview"),
                            expression: "errors.has('overview')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [
                        _vm._v(
                          _vm._s(_vm.errors.first("overview")) +
                            "\n                            "
                        )
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(7),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|decimal|max:5",
                          expression: "'required|decimal|max:5'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.series.rate,
                          expression: "data.series.rate"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "rate",
                        type: "text",
                        placeholder: "Rate"
                      },
                      domProps: { value: _vm.data.series.rate },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data.series, "rate", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("rate"),
                            expression: "errors.has('rate')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("rate")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(8),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: { type: "file", id: "poster", name: "poster" },
                      on: {
                        change: function($event) {
                          return _vm.readImage("poster", "posterFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(9),
                    _vm._v(" "),
                    _vm.data.series.cloud == "local"
                      ? _c("img", {
                          attrs: {
                            src:
                              "/storage/posters/300_" + _vm.data.series.poster,
                            id: "posterFileImage",
                            width: "100%"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.data.series.cloud == "aws"
                      ? _c("img", {
                          attrs: {
                            src: _vm.md_poster + _vm.data.series.poster,
                            alt: _vm.data.series.poster,
                            id: "posterFileImage",
                            width: "300px"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("poster"),
                            expression: "errors.has('poster')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("poster")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(10),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: { type: "file", id: "backdrop", name: "backdrop" },
                      on: {
                        change: function($event) {
                          return _vm.readImage("backdrop", "backdropFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(11),
                    _vm._v(" "),
                    _vm.data.series.cloud == "local"
                      ? _c("img", {
                          attrs: {
                            src:
                              "/storage/backdrops/300_" +
                              _vm.data.series.backdrop,
                            id: "backdropFileImage",
                            width: "100%"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.data.series.cloud == "aws"
                      ? _c("img", {
                          attrs: {
                            src: _vm.md_backdrop + _vm.data.series.backdrop,
                            alt: _vm.data.series.backdrop,
                            id: "backdropFileImage",
                            width: "100%"
                          }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("backdrop"),
                            expression: "errors.has('backdrop')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                    )
                  ])
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 col-md-6 cast" }, [
                _c("h4", [_vm._v("Cast")]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "row" },
                  [
                    _vm._l(_vm.data.cast, function(item, key) {
                      return _c(
                        "div",
                        {
                          key: key,
                          staticClass:
                            "col-lg-3 col-sm-4 col-12 mt-4 text-center"
                        },
                        [
                          _c("div", { staticClass: "image-cast" }, [
                            _c("div", { staticClass: "delete-cast" }, [
                              _c("i", {
                                staticClass: "fa fa-times-circle",
                                on: {
                                  click: function($event) {
                                    return _vm.DELETE_ACTOR(key)
                                  }
                                }
                              })
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "image" }, [
                              item.cloud == "local"
                                ? _c("img", {
                                    staticClass: "img-rounded",
                                    attrs: {
                                      src: item.image,
                                      id: "preview_" + item.id,
                                      width: "100%"
                                    }
                                  })
                                : _vm._e(),
                              _vm._v(" "),
                              item.cloud == "aws"
                                ? _c("img", {
                                    staticClass: "img-rounded",
                                    attrs: {
                                      src: _vm.md_cast + item.image,
                                      id: "preview_" + item.id,
                                      width: "100%"
                                    }
                                  })
                                : _vm._e(),
                              _vm._v(" "),
                              _c("p", [_vm._v(_vm._s(item.name))])
                            ])
                          ])
                        ]
                      )
                    }),
                    _vm._v(" "),
                    _vm._m(12)
                  ],
                  2
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-6" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  ])
                ])
              ]),
              _vm._v(" "),
              _vm.showProgress
                ? _c("div", { staticClass: "upload-modal" }, [
                    _c(
                      "div",
                      {
                        staticClass: "modal-dialog",
                        attrs: { role: "document" }
                      },
                      [
                        _c("div", { staticClass: "modal-content" }, [
                          _c("div", { staticClass: "modal-body p-4" }, [
                            _vm.seriesedit
                              ? _c("div", { staticClass: "seriesapi" }, [
                                  _c("div", { staticClass: "progress mt-2" }, [
                                    _c("div", {
                                      staticClass: "progress-bar",
                                      style: {
                                        width: _vm.percentCompleted + "%",
                                        height: "6px"
                                      },
                                      attrs: {
                                        role: "progressbar",
                                        "aria-valuenow": _vm.percentCompleted,
                                        "aria-valuemin": "0",
                                        "aria-valuemax": "100"
                                      }
                                    })
                                  ]),
                                  _vm._v(" "),
                                  _c("p", { staticClass: "is-danger" }, [
                                    _vm._v(_vm._s(_vm.error_message_edit))
                                  ]),
                                  _vm._v(" "),
                                  _c("p", { staticClass: "is-success" }, [
                                    _vm._v(_vm._s(_vm.success_message_edit))
                                  ]),
                                  _vm._v(" "),
                                  _c("hr")
                                ])
                              : _vm._e()
                          ])
                        ])
                      ]
                    )
                  ])
                : _vm._e()
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "GetActorModalLabel" } },
        [_vm._v("Actors")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center" }, [
      _c("h4", [_vm._v("No result were found")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Years")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Genres")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [
      _c("label", [_vm._v("Overview")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-2" }, [_c("label", [_vm._v("Rate")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Poster")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "posterLabel", for: "poster" } }, [
      _vm._v("Choose a poster\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Backdrop")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                    "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      { staticClass: "col-lg-3 col-sm-4 col-12 mt-4 text-center" },
      [
        _c(
          "div",
          {
            staticClass: "add-cast",
            attrs: { "data-toggle": "modal", "data-target": "#GetActorModal" }
          },
          [_c("h3", [_vm._v("ADD")])]
        )
      ]
    )
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-675e7b8a", module.exports)
  }
}

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(523)
/* template */
var __vue_template__ = __webpack_require__(524)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/series/analysis-series.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d62a50ba", Component.options)
  } else {
    hotAPI.reload("data-v-d62a50ba", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 523 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["default"] = ({
    components: {
        "views-day-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        "views-month-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        "views-year-chart": __WEBPACK_IMPORTED_MODULE_0__charts_regions_js__["a" /* default */],
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    data: function data() {
        return {
            show_alert_services: false,
            show_chart: true,
            analysis_date: "Daily",
            like: {},
            favor: {},
            latest_views: [],
            top_episode: [],
            watchMovieInDay: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },
            spinner_loading: true,
            watchMovieInMonth: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            watchMovieInYear: {
                perecent: {},
                all: 0,
                labels: [],
                datasets: [{
                    label: "Views In Year",
                    yAxisID: "Views",
                    backgroundColor: "rgba(3, 169, 244, 0.7)",
                    pointBackgroundColor: "#818181",
                    borderWidth: 1,
                    borderColor: "#818181",
                    pointBorderColor: "#fff",
                    //Data to be represented on y-axis
                    data: []
                }]
            },

            //Chart.js options that controls the appearance of the chart
            options: {
                scales: {
                    yAxes: [{
                        id: "Views",
                        type: "linear",
                        position: "left",
                        ticks: {
                            beginAtZero: false,
                            display: false
                        },
                        gridLines: {
                            display: false
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    zAxes: [{
                        ticks: {
                            display: false
                        }
                    }]
                },
                legend: {
                    display: false
                },
                responsive: true,
                maintainAspectRatio: false
            }
        };
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/analysis/series/" + this.$route.params.id).then(function (response) {
            if (response.status === 200) {
                // Active and Inactivity User
                // Day
                for (var index = 0; index < response.data.data.views.day.length; index++) {
                    //Active
                    _this.watchMovieInDay.labels.push(response.data.data.views.day[index].hour);
                    _this.watchMovieInDay.datasets[0].data.push(response.data.data.views.day[index].number);
                }

                //Month
                for (var _index = 0; _index < response.data.data.views.month.length; _index++) {
                    _this.watchMovieInMonth.labels.push(response.data.data.views.month[_index].month);
                    _this.watchMovieInMonth.datasets[0].data.push(response.data.data.views.month[_index].number);
                }

                //Year
                for (var _index2 = 0; _index2 < response.data.data.views.year.length; _index2++) {
                    _this.watchMovieInYear.labels.push(response.data.data.views.year[_index2].year);
                    _this.watchMovieInYear.datasets[0].data.push(response.data.data.views.year[_index2].number);
                }

                _this.like = response.data.data.like;
                _this.favor = response.data.data.favor;
                _this.latest_views = response.data.data.latest_views;
                _this.all_views = response.data.data.all_views;
                _this.top_episode = response.data.data.top_episode;
                _this.spinner_loading = false;
            }
        });
    },


    methods: {}
});

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "analysis" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "dashboard" }, [
          _c("div", { staticClass: "change-date" }, [
            _c("div", { staticClass: "dropdown" }, [
              _c(
                "button",
                {
                  staticClass: "dropdown-toggle",
                  staticStyle: {
                    "font-size": "15px",
                    "font-weight": "bold",
                    color: "#2996f3",
                    "text-transform": "uppercase"
                  },
                  attrs: {
                    type: "button",
                    id: "dropdownNavbar",
                    "data-toggle": "dropdown",
                    "aria-haspopup": "true",
                    "aria-expanded": "false"
                  }
                },
                [
                  _vm._v(
                    "\n                           " +
                      _vm._s(_vm.analysis_date) +
                      "\n            "
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "dropdown-menu",
                  attrs: { "aria-labelledby": "dropdownNavbar" }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Daily"
                        }
                      }
                    },
                    [_vm._v("Daily")]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Monthly"
                        }
                      }
                    },
                    [_vm._v("Monthly")]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-item",
                      on: {
                        click: function($event) {
                          _vm.analysis_date = "Yearly"
                        }
                      }
                    },
                    [_vm._v("Yearly")]
                  )
                ]
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 row" }, [
            _c("div", { staticClass: "col-12 col-sm-6 crms text-center p-2" }, [
              _c("div", { staticClass: "row" }, [
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/heart.svg",
                        alt: "Likes",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _vm.analysis_date == "Daily"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.day))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Monthly"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.month))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Yearly"
                      ? _c("h4", { staticClass: "likes" }, [
                          _vm._v(_vm._s(_vm.like.year))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Likes")])
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/star.svg",
                        alt: "Favor",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _vm.analysis_date == "Daily"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.day))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Monthly"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.month))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.analysis_date == "Yearly"
                      ? _c("h4", { staticClass: "favor" }, [
                          _vm._v(_vm._s(_vm.favor.year))
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("Favor")])
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-lg-6 mt-2" }, [
                  _c("div", { staticClass: "details m-md-2 white" }, [
                    _c("img", {
                      attrs: {
                        src: "/themes/default/img/admin/movie.svg",
                        alt: "views",
                        width: "60px"
                      }
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "favor" }, [
                      _vm._v(_vm._s(_vm.all_views))
                    ]),
                    _vm._v(" "),
                    _c("span", { staticClass: "header" }, [_vm._v("All Views")])
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-sm-6" }, [
              _c("span", { staticClass: "title p-2" }, [_vm._v("Views")]),
              _vm._v(" "),
              _c("div", { staticClass: "details white m-2 p-2" }, [
                _vm.analysis_date == "Daily"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInDay.datasets[0].data.length > 0
                          ? _c("views-day-chart", {
                              attrs: {
                                data: _vm.watchMovieInDay,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in this day")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.analysis_date == "Monthly"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInMonth.datasets[0].data.length > 0
                          ? _c("views-month-chart", {
                              attrs: {
                                data: _vm.watchMovieInMonth,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in last month")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.analysis_date == "Yearly"
                  ? _c(
                      "div",
                      { staticClass: "chart" },
                      [
                        _vm.watchMovieInYear.datasets[0].data.length > 0
                          ? _c("views-year-chart", {
                              attrs: {
                                data: _vm.watchMovieInYear,
                                options: _vm.options,
                                height: 150
                              }
                            })
                          : _c(
                              "div",
                              { staticClass: "no-views m-3 text-center" },
                              [
                                _c("h3", { staticClass: "title" }, [
                                  _vm._v("There is no view in last year")
                                ])
                              ]
                            )
                      ],
                      1
                    )
                  : _vm._e()
              ])
            ]),
            _vm._v(" "),
            _vm.latest_views.length > 0
              ? _c("div", { staticClass: "col-12 col-sm-6 mt-3" }, [
                  _c("div", { staticClass: "title p-2" }, [
                    _vm._v("Latest Epiosde Views")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "table-responsive white" }, [
                    _c("div", { staticClass: "table table-hover" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c(
                        "tbody",
                        _vm._l(_vm.latest_views, function(item, index) {
                          return _c("tr", { key: index }, [
                            _c("td", [_vm._v(_vm._s(item.user_name))]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.name))]),
                            _vm._v(" "),
                            _c("td", [
                              _vm._v(
                                _vm._s(item.season_number) +
                                  " / " +
                                  _vm._s(item.episode_number)
                              )
                            ]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.created_at))])
                          ])
                        }),
                        0
                      )
                    ])
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.top_episode.length > 0
              ? _c("div", { staticClass: "col-12 col-sm-6 mt-3" }, [
                  _c("div", { staticClass: "title p-2" }, [
                    _vm._v("Top Episode Views")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "table-responsive white" }, [
                    _c("div", { staticClass: "table table-hover" }, [
                      _vm._m(1),
                      _vm._v(" "),
                      _c(
                        "tbody",
                        _vm._l(_vm.top_episode, function(item, index) {
                          return _c("tr", { key: index }, [
                            _c("td", [_vm._v(_vm._s(item.name))]),
                            _vm._v(" "),
                            _c("td", [
                              _vm._v(
                                _vm._s(item.season_number) +
                                  " / " +
                                  _vm._s(item.episode_number)
                              )
                            ]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.number))])
                          ])
                        }),
                        0
                      )
                    ])
                  ])
                ])
              : _vm._e()
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Username")]),
      _vm._v(" "),
      _c("th", [_vm._v("Episode Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("SE/EP")]),
      _vm._v(" "),
      _c("th", [_vm._v("View date")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Episode Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("SE/EP")]),
      _vm._v(" "),
      _c("th", [_vm._v("Views")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d62a50ba", module.exports)
  }
}

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(526)
/* template */
var __vue_template__ = __webpack_require__(527)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/tops.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-12059831", Component.options)
  } else {
    hotAPI.reload("data-v-12059831", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 526 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {};
  },


  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.tops.data;
    },
    button_loading: function button_loading(state) {
      return state.tops.button_loading;
    },
    spinner_loading: function spinner_loading(state) {
      return state.tops.spinner_loading;
    }
  }),

  components: {
    Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
  },

  created: function created() {
    this.$store.dispatch("GET_TOPS");
  },


  methods: {
    DELETE: function DELETE(id, key) {
      var _this = this;

      swal({
        title: "Are you sure to delete ?",
        icon: "warning",
        buttons: true,
        dangerMode: true
      }).then(function (willDelete) {
        if (willDelete) {
          _this.$store.dispatch("DELETE_TOP", { id: id, key: key });
        }
      });
    }
  }
});

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Top")]),
          _vm._v(" "),
          _vm.data.top !== null
            ? _c("div", { staticClass: "table-responsive mt-2" }, [
                _c("div", { staticClass: "table table-hover" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "tbody",
                    _vm._l(_vm.data.top, function(item, index) {
                      return _c("tr", { key: index }, [
                        item.cloud == "local"
                          ? _c("td", [
                              _c("img", {
                                attrs: {
                                  src: "/storage/posters/300_" + item.poster,
                                  alt: item.name,
                                  width: "40"
                                }
                              })
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        item.cloud == "aws"
                          ? _c("td", [
                              _c("img", {
                                attrs: {
                                  src: _vm.sm_poster + item.poster,
                                  alt: item.name,
                                  width: "40"
                                }
                              })
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.name))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.created_at))]),
                        _c("td", [
                          _c(
                            "div",
                            {
                              staticClass: "btn-group",
                              attrs: { role: "group" }
                            },
                            [
                              _c(
                                "button",
                                {
                                  staticClass:
                                    "btn btn-sm btn-danger btn-sm mr-2",
                                  attrs: { id: item.id },
                                  on: {
                                    click: function($event) {
                                      return _vm.DELETE(item.id, index)
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                            Delete\n                        "
                                  )
                                ]
                              )
                            ]
                          )
                        ])
                      ])
                    }),
                    0
                  )
                ])
              ])
            : _c("div", { staticClass: "text-center" }, [
                _c("h4", [_vm._v("No result were found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Cover")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-12059831", module.exports)
  }
}

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(529)
/* template */
var __vue_template__ = __webpack_require__(530)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/actors/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5bade2da", Component.options)
  } else {
    hotAPI.reload("data-v-5bade2da", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      new_actor_name: "",
      show_key: null,
      button_loading: false,
      search_query: ""
    };
  },


  components: {
    Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
  },

  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.actors.data;
    },
    data_search: function data_search(state) {
      return state.actors.data_search;
    },
    spinner_loading: function spinner_loading(state) {
      return state.actors.spinner_loading;
    }
  }),

  created: function created() {
    this.$store.commit("CLEAN_SEARCH_ACTORS");
    this.$store.dispatch("GET_ALL_ACTORS");
  },


  methods: {
    PAGINATION: function PAGINATION(path_url) {
      this.$store.dispatch("GET_ACTORS_PAGINATION", path_url);
    },
    SHOW_EDIT: function SHOW_EDIT(key) {
      if (this.show_key === key) {
        this.show_key = false;
      } else {
        this.show_key = key;
      }
    },
    UPDATE: function UPDATE(id, key) {
      var _this = this;

      this.button_loading = id;
      var formData = new FormData();
      var image = document.getElementById("image_" + id).files[0];
      if (image === undefined) {
        formData.append("id", id);
        formData.append("name", this.data.actors.data[key].name);
      } else {
        formData.append("id", id);
        formData.append("image", image);
        formData.append("name", this.data.actors.data[key].name);
      }
      axios.post("/api/admin/update/actors/", formData).then(function (response) {
        if (response.status === 200) {
          _this.data.actors.data[key].image = response.data.image;
          _this.data.actors.data[key].name = response.data.name;
          _this.show_key = false;
          _this.button_loading = false;
          alertify.logPosition("top right");
          alertify.success(response.data.message);
        }
      });
    },
    READ_IMAGE: function READ_IMAGE(id) {
      var img = document.getElementById("image_" + id);
      var tgt = img.target || window.event.srcElement,
          files = tgt.files;

      // FileReader support
      if (FileReader && files && files.length) {
        var fr = new FileReader();
        fr.onload = function () {
          var srcImage = document.getElementById("preview_" + id);
          srcImage.style.display = "block";
          srcImage.src = fr.result;
        };
        fr.readAsDataURL(files[0]);
      } else {
        // Not supported
        // fallback -- perhaps submit the input to an iframe and temporarily store
        // them on the server until the user's session ends.
      }
    },
    CREATE_ACTOR: function CREATE_ACTOR() {
      var _this2 = this;

      this.button_loading = true;
      var formData = new FormData();
      var photo = document.getElementById("photo").files[0];
      formData.append("photo", photo);
      formData.append("name", this.new_actor_name);
      this.$validator.validateAll().then(function (result) {
        axios.post("/api/admin/new/actor", formData).then(function (response) {
          if (response.data.status === "success") {
            alertify.logPosition("top right");
            alertify.success(response.data.message);
            if (_this2.data.actors === null) {
              _this2.data.actors = { data: [] };
              _this2.data.actors.data.push(response.data.actor);
            } else {
              _this2.data.actors.data.push(response.data.actor);
            }
            _this2.button_loading = false;
          }
        }, function (error) {
          _this2.button_loading = false;
        });
      });
    },
    DELETE: function DELETE(id, key) {
      var _this3 = this;

      swal({
        title: "Are you sure to delete ?",
        icon: "warning",
        buttons: true,
        dangerMode: true
      }).then(function (willDelete) {
        if (willDelete) {
          _this3.$store.dispatch("DELETE_ACTOR", {
            id: id,
            key: key
          });
        }
      });
    },
    SEARCH: function SEARCH() {
      if (this.search_query !== "") {
        this.$store.dispatch("GET_ACTORS_SEARCH", this.search_query);
      } else {
        this.$store.commit("CLEAR_SEARCH");
      }
    },
    readImage: function readImage(id, outImage) {
      var img = document.getElementById(id);
      var tgt = img.target || window.event.srcElement,
          files = tgt.files;

      // FileReader support
      if (FileReader && files && files.length) {
        var fr = new FileReader();
        fr.onload = function () {
          var srcImage = document.getElementById(outImage);
          srcImage.style.display = "block";
          srcImage.src = fr.result;
        };
        fr.readAsDataURL(files[0]);
      } else {
        // Not supported
        // fallback -- perhaps submit the input to an iframe and temporarily store
        // them on the server until the user's session ends.
      }
    }
  }
});

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Actors")]),
      _vm._v(" "),
      _c("div", { staticClass: "my-2 p-3" }, [
        _c("div", { staticClass: "col-12 row" }, [
          _vm._m(0),
          _vm._v(" "),
          _c("div", { staticClass: "col-6 pull-right" }, [
            _c("div", { staticClass: "pull-right", attrs: { id: "search" } }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.search_query,
                    expression: "search_query"
                  }
                ],
                staticClass: "form-control mr-sm-2",
                attrs: { type: "text", placeholder: "Search" },
                domProps: { value: _vm.search_query },
                on: {
                  keyup: _vm.SEARCH,
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.search_query = $event.target.value
                  }
                }
              })
            ])
          ])
        ]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _vm.spinner_loading
          ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
          : _vm._e(),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "modal fade",
            attrs: {
              id: "CreateActorModal",
              tabindex: "-1",
              role: "dialog",
              "aria-labelledby": "CreateActorModalLabel",
              "aria-hidden": "true"
            }
          },
          [
            _c(
              "div",
              { staticClass: "modal-dialog", attrs: { role: "document" } },
              [
                _c("div", { staticClass: "modal-content" }, [
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "modal-body" }, [
                    _c("div", { staticClass: "create-actor" }, [
                      _c("div", { staticClass: "form-group col-md-12" }, [
                        _c("label", { attrs: { for: "name" } }, [
                          _vm._v("Name")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|max:60",
                              expression: "'required|max:60'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.new_actor_name,
                              expression: "new_actor_name"
                            }
                          ],
                          staticClass: "form-control",
                          attrs: {
                            type: "text",
                            id: "name",
                            name: "name",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.new_actor_name },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.new_actor_name = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name"),
                                expression: "errors.has('name')"
                              }
                            ],
                            staticClass: "is-danger"
                          },
                          [_vm._v(_vm._s(_vm.errors.first("name")))]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group col-md-12" }, [
                        _c("div", { staticClass: "image-upload" }, [
                          _c("input", {
                            directives: [
                              {
                                name: "validate",
                                rawName: "v-validate",
                                value: "required|image",
                                expression: "'required|image'"
                              }
                            ],
                            staticClass: "inputfile",
                            attrs: { type: "file", id: "photo", name: "photo" },
                            on: {
                              change: function($event) {
                                return _vm.readImage("photo", "posterFileImage")
                              }
                            }
                          }),
                          _vm._v(" "),
                          _vm._m(2),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value: _vm.errors.has("photo"),
                                  expression: "errors.has('photo')"
                                }
                              ],
                              staticClass: " is-danger"
                            },
                            [_vm._v(_vm._s(_vm.errors.first("photo")))]
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _vm._m(3)
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "modal-footer" }, [
                    !_vm.button_loading
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-warning",
                            attrs: { type: "button" },
                            on: {
                              click: function($event) {
                                return _vm.CREATE_ACTOR()
                              }
                            }
                          },
                          [_vm._v("Create")]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.button_loading
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-warning",
                            attrs: { disabled: "" }
                          },
                          [
                            _c("i", { attrs: { id: "btn-progress" } }),
                            _vm._v(" Loading")
                          ]
                        )
                      : _vm._e()
                  ])
                ])
              ]
            )
          ]
        ),
        _vm._v(" "),
        !_vm.spinner_loading
          ? _c("div", [
              _vm.data.actors !== null
                ? _c("div", { staticClass: "m-2" }, [
                    _vm.data_search === null
                      ? _c(
                          "div",
                          { staticClass: "row" },
                          _vm._l(_vm.data.actors.data, function(item, index) {
                            return _c(
                              "div",
                              {
                                key: index,
                                staticClass:
                                  "col-8 col-sm-3 col-lg-2 mt-2 actor"
                              },
                              [
                                _c("div", { staticClass: "actor-image" }, [
                                  item.cloud == "local"
                                    ? _c("img", {
                                        attrs: {
                                          src: item.image,
                                          alt: item.name,
                                          width: "100%"
                                        }
                                      })
                                    : _vm._e(),
                                  _vm._v(" "),
                                  item.cloud == "aws"
                                    ? _c("img", {
                                        attrs: {
                                          src: _vm.md_cast + item.image,
                                          alt: item.name,
                                          width: "100%"
                                        }
                                      })
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "control" }, [
                                    _c("div", { staticClass: "row" }, [
                                      _c("i", {
                                        staticClass: "fa fa-pencil ml-2",
                                        attrs: { "aria-hidden": "true" },
                                        on: {
                                          click: function($event) {
                                            return _vm.SHOW_EDIT(index)
                                          }
                                        }
                                      }),
                                      _vm._v(" "),
                                      _c("i", {
                                        staticClass: "fa fa-trash ml-2",
                                        attrs: { "aria-hidden": "true" },
                                        on: {
                                          click: function($event) {
                                            return _vm.DELETE(item.id, index)
                                          }
                                        }
                                      })
                                    ])
                                  ]),
                                  _vm._v(" "),
                                  index === _vm.show_key
                                    ? _c(
                                        "div",
                                        { staticClass: "image-upload" },
                                        [
                                          _c("img", {
                                            staticClass: "img-rounded",
                                            attrs: {
                                              src: item.image,
                                              id: "preview_" + item.id,
                                              width: "100%"
                                            }
                                          }),
                                          _vm._v(" "),
                                          _c("input", {
                                            directives: [
                                              {
                                                name: "validate",
                                                rawName: "v-validate",
                                                value: "image",
                                                expression: "'image'"
                                              }
                                            ],
                                            staticClass: "inputfile",
                                            attrs: {
                                              type: "file",
                                              name: "image_" + item.id,
                                              id: "image_" + item.id
                                            },
                                            on: {
                                              change: function($event) {
                                                return _vm.READ_IMAGE(item.id)
                                              }
                                            }
                                          }),
                                          _vm._v(" "),
                                          _c(
                                            "label",
                                            {
                                              attrs: { for: "image_" + item.id }
                                            },
                                            [
                                              _c("i", {
                                                staticClass:
                                                  "fa fa-cloud-upload",
                                                attrs: { "aria-hidden": "true" }
                                              })
                                            ]
                                          )
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "details" }, [
                                    index === _vm.show_key
                                      ? _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.name,
                                              expression: "item.name"
                                            },
                                            {
                                              name: "validate",
                                              rawName: "v-validate",
                                              value: "required|max:60",
                                              expression: "'required|max:60'"
                                            }
                                          ],
                                          attrs: { type: "text" },
                                          domProps: { value: item.name },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "name",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    index === _vm.show_key &&
                                    !_vm.button_loading
                                      ? _c(
                                          "button",
                                          {
                                            staticClass:
                                              "btn btn-sm btn-warning",
                                            on: {
                                              click: function($event) {
                                                return _vm.UPDATE(
                                                  item.id,
                                                  index
                                                )
                                              }
                                            }
                                          },
                                          [_vm._v("Update")]
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _vm.button_loading === item.id
                                      ? _c(
                                          "button",
                                          {
                                            staticClass:
                                              "btn btn-sm btn-warning",
                                            attrs: { disabled: "" }
                                          },
                                          [
                                            _c("i", {
                                              attrs: { id: "btn-progress" }
                                            }),
                                            _vm._v(" Loading")
                                          ]
                                        )
                                      : _vm._e()
                                  ])
                                ]),
                                _vm._v(" "),
                                index !== _vm.show_key
                                  ? _c("p", { staticClass: "mt-2" }, [
                                      _vm._v(_vm._s(item.name))
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: _vm.errors.has(item.name),
                                        expression: "errors.has(item.name)"
                                      }
                                    ],
                                    staticClass: " is-danger"
                                  },
                                  [_vm._v(_vm._s(_vm.errors.first(item.name)))]
                                ),
                                _vm._v(" "),
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: _vm.errors.has(
                                          "image_" + item.id
                                        ),
                                        expression:
                                          "errors.has('image_'+item.id)"
                                      }
                                    ],
                                    staticClass: " is-danger"
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.errors.first("image_" + item.id)
                                      )
                                    )
                                  ]
                                )
                              ]
                            )
                          }),
                          0
                        )
                      : _c(
                          "div",
                          { staticClass: "row" },
                          [
                            _vm._l(_vm.data_search.actors, function(
                              item,
                              index
                            ) {
                              return _c(
                                "div",
                                {
                                  key: index,
                                  staticClass:
                                    "col-6 col-sm-4 col-lg-3 col-xl-2 mt-2 actor"
                                },
                                [
                                  _c("div", { staticClass: "actor-image" }, [
                                    item.cloud == "local"
                                      ? _c("img", {
                                          attrs: {
                                            src: item.image,
                                            alt: item.name,
                                            width: "100%"
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    item.cloud == "aws"
                                      ? _c("img", {
                                          attrs: {
                                            src: _vm.md_cast + item.image,
                                            alt: item.name,
                                            width: "100%"
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "control" }, [
                                      _c("div", { staticClass: "row" }, [
                                        _c("i", {
                                          staticClass: "fa fa-pencil ml-2",
                                          attrs: { "aria-hidden": "true" },
                                          on: {
                                            click: function($event) {
                                              return _vm.SHOW_EDIT(index)
                                            }
                                          }
                                        }),
                                        _vm._v(" "),
                                        _c("i", {
                                          staticClass: "fa fa-trash ml-2",
                                          attrs: { "aria-hidden": "true" },
                                          on: {
                                            click: function($event) {
                                              return _vm.DELETE(item.id, index)
                                            }
                                          }
                                        })
                                      ])
                                    ]),
                                    _vm._v(" "),
                                    index === _vm.show_key
                                      ? _c(
                                          "div",
                                          { staticClass: "image-upload" },
                                          [
                                            _c("img", {
                                              staticClass: "img-rounded",
                                              attrs: {
                                                src: item.image,
                                                id: "preview_" + item.id,
                                                width: "100%"
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("input", {
                                              directives: [
                                                {
                                                  name: "validate",
                                                  rawName: "v-validate",
                                                  value: "image",
                                                  expression: "'image'"
                                                }
                                              ],
                                              staticClass: "inputfile",
                                              attrs: {
                                                type: "file",
                                                name: "image_" + item.id,
                                                id: "image_" + item.id
                                              },
                                              on: {
                                                change: function($event) {
                                                  return _vm.READ_IMAGE(item.id)
                                                }
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c(
                                              "label",
                                              {
                                                attrs: {
                                                  for: "image_" + item.id
                                                }
                                              },
                                              [
                                                _c("i", {
                                                  staticClass:
                                                    "fa fa-cloud-upload",
                                                  attrs: {
                                                    "aria-hidden": "true"
                                                  }
                                                })
                                              ]
                                            )
                                          ]
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "details" }, [
                                      index === _vm.show_key
                                        ? _c("input", {
                                            directives: [
                                              {
                                                name: "model",
                                                rawName: "v-model",
                                                value: item.name,
                                                expression: "item.name"
                                              },
                                              {
                                                name: "validate",
                                                rawName: "v-validate",
                                                value: "required|max:60",
                                                expression: "'required|max:60'"
                                              }
                                            ],
                                            attrs: { type: "text" },
                                            domProps: { value: item.name },
                                            on: {
                                              input: function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "name",
                                                  $event.target.value
                                                )
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      index === _vm.show_key &&
                                      !_vm.button_loading
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning",
                                              on: {
                                                click: function($event) {
                                                  return _vm.UPDATE(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [_vm._v("Update")]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _vm.button_loading === item.id
                                        ? _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning",
                                              attrs: { disabled: "" }
                                            },
                                            [
                                              _c("i", {
                                                attrs: { id: "btn-progress" }
                                              }),
                                              _vm._v(" Loading")
                                            ]
                                          )
                                        : _vm._e()
                                    ])
                                  ]),
                                  _vm._v(" "),
                                  index !== _vm.show_key
                                    ? _c("p", { staticClass: "mt-2" }, [
                                        _vm._v(_vm._s(item.name))
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has(item.name),
                                          expression: "errors.has(item.name)"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first(item.name))
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has(
                                            "image_" + item.id
                                          ),
                                          expression:
                                            "errors.has('image_'+item.id)"
                                        }
                                      ],
                                      staticClass: " is-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.errors.first("image_" + item.id)
                                        )
                                      )
                                    ]
                                  )
                                ]
                              )
                            }),
                            _vm._v(" "),
                            _vm.data_search === null
                              ? _c("div", [_vm._m(4)])
                              : _vm._e()
                          ],
                          2
                        ),
                    _vm._v(" "),
                    _vm.data.actors !== null && _vm.data_search === null
                      ? _c(
                          "nav",
                          {
                            staticClass: "m-4 p-1",
                            attrs: { "aria-label": "pagination" }
                          },
                          [
                            _c("ul", { staticClass: "pagination " }, [
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  attrs: { id: "end" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            "/api/admin/get/actors"
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Begin")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  class: {
                                    disabled:
                                      _vm.data.actors.prev_page_url === null
                                  },
                                  attrs: { id: "prev" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            _vm.data.actors.prev_page_url
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Previous")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c("li", { staticClass: "page-item" }, [
                                _c("a", { staticClass: "page-link" }, [
                                  _vm._v(
                                    _vm._s(_vm.data.actors.current_page) +
                                      "/" +
                                      _vm._s(_vm.data.actors.last_page)
                                  )
                                ])
                              ]),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  class: {
                                    disabled:
                                      _vm.data.actors.next_page_url === null
                                  },
                                  attrs: { id: "next" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            _vm.data.actors.next_page_url
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Next")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  attrs: { id: "end" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            "/api/admin/get/actors?page=" +
                                              _vm.data.actors.last_page
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("End")]
                                  )
                                ]
                              )
                            ])
                          ]
                        )
                      : _vm._e()
                  ])
                : _c("div", [_vm._m(5)])
            ])
          : _vm._e()
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-6" }, [
      _c("div", { staticClass: "group-btn" }, [
        _c(
          "button",
          {
            staticClass: "btn btn-sm btn-warning",
            attrs: {
              type: "button",
              "data-toggle": "modal",
              "data-target": "#CreateActorModal"
            }
          },
          [_vm._v("\n              Create new actor\n            ")]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "CreateActorModalLabel" } },
        [_vm._v("New actor")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "photoLabel", for: "photo" } }, [
      _vm._v("Choose a poster\n                      "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-group col-md-12" }, [
      _c("img", {
        staticStyle: { display: "none" },
        attrs: { src: "", id: "posterFileImage", width: "200" }
      })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center" }, [
      _c("h4", [_vm._v("No result were found")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center" }, [
      _c("h4", [_vm._v("No result were found")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5bade2da", module.exports)
  }
}

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(532)
/* template */
var __vue_template__ = __webpack_require__(533)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/reports/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fd536630", Component.options)
  } else {
    hotAPI.reload("data-v-fd536630", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "report-manage",
    data: function data() {
        return {
            report_item: [],
            show_report_modal: false
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.reports.data;
        },
        data_search: function data_search(state) {
            return state.reports.data_search;
        },
        spinner_loading: function spinner_loading(state) {
            return state.reports.spinner_loading;
        }
    }),

    created: function created() {
        this.$store.dispatch("GET_ALL_REPORTS");
    },


    methods: {
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_REPORTS_PAGINATION", path_url);
        },
        SHOW_REPORT: function SHOW_REPORT(key) {
            var _this = this;

            this.show_report_modal = true;
            this.report_item = this.items[key];
            axios.put("api/admin/reports/readit/" + this.items[key].id).then(function (res) {
                if (res.data.status === "success") {
                    _this.items[key].report_readit = 1;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("There is error in back-end");
            });
        },
        DELETE: function DELETE(id, key) {
            var _this2 = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this2.$store.dispatch("DELETE_ALL_REPORTS", {
                        id: id,
                        key: key
                    });
                }
            });
        }
    }
});

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Reports")]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2" }, [
            _vm.data.reports !== null
              ? _c("div", [
                  _c(
                    "div",
                    { staticClass: "report-list" },
                    _vm._l(_vm.data.reports.data, function(item, index) {
                      return _c("div", { key: index }, [
                        item.m_name !== null
                          ? _c(
                              "div",
                              {
                                staticClass: "col-12 my-2",
                                attrs: { id: "report-box" }
                              },
                              [
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-sm-2 col-lg-1" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.m_poster,
                                          alt: item.m_poster,
                                          width: "100%"
                                        }
                                      }),
                                      _vm._v(" "),
                                      item.report_not_readit
                                        ? _c(
                                            "div",
                                            { staticClass: "notification" },
                                            [
                                              _c("span", [
                                                _vm._v(
                                                  _vm._s(item.report_not_readit)
                                                )
                                              ])
                                            ]
                                          )
                                        : _vm._e()
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "col-7 text-left" },
                                    [
                                      _c("ul", [
                                        _c("li", [
                                          _c("b", [_vm._v("#ID:")]),
                                          _vm._v(
                                            " " +
                                              _vm._s(item.id) +
                                              "\n                                            "
                                          )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", [
                                          _c("b", [_vm._v("Name:")]),
                                          _vm._v(
                                            " " +
                                              _vm._s(item.m_name) +
                                              "\n                                            "
                                          )
                                        ]),
                                        _vm._v(" "),
                                        _vm._m(0, true),
                                        _vm._v(" "),
                                        _c("li", [
                                          _c("b", [_vm._v("Reports number:")]),
                                          _vm._v(" "),
                                          _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-primary"
                                            },
                                            [
                                              _vm._v(
                                                " " + _vm._s(item.movies_count)
                                              )
                                            ]
                                          )
                                        ])
                                      ])
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "col-sm-3 col-lg-4" },
                                    [
                                      _c(
                                        "div",
                                        {
                                          staticClass: "btn-group float-right",
                                          attrs: { role: "group" }
                                        },
                                        [
                                          _c(
                                            "router-link",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: {
                                                role: "button",
                                                to: {
                                                  name: "report-show",
                                                  params: { id: item.id }
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Show\n                                            "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.m_id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                            "
                                              )
                                            ]
                                          )
                                        ],
                                        1
                                      )
                                    ]
                                  )
                                ])
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        item.t_name !== null
                          ? _c(
                              "div",
                              {
                                staticClass: "col-12",
                                attrs: { id: "report-box" }
                              },
                              [
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    {
                                      staticClass:
                                        "col-12 col-sm-3 col-md-3 col-lg-1"
                                    },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            item.t_poster,
                                          alt: item.m_poster,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    {
                                      staticClass:
                                        "col-12 col-sm-7 col-md-5 col-lg-7 text-left"
                                    },
                                    [
                                      _c("ul", [
                                        _c("li", [
                                          _c("b", [_vm._v("ID:")]),
                                          _vm._v(
                                            " " +
                                              _vm._s(item.id) +
                                              "\n                                                "
                                          )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", [
                                          _c("b", [_vm._v("Name:")]),
                                          _vm._v(
                                            " " +
                                              _vm._s(item.t_name) +
                                              "\n                                                "
                                          )
                                        ]),
                                        _vm._v(" "),
                                        _vm._m(1, true),
                                        _vm._v(" "),
                                        _c("li", [
                                          _c("b", [_vm._v("Reports number:")]),
                                          _vm._v(" "),
                                          _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-primary"
                                            },
                                            [
                                              _vm._v(
                                                " " + _vm._s(item.series_count)
                                              )
                                            ]
                                          )
                                        ])
                                      ])
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    {
                                      staticClass: "col-12 col-sm-2 col-md-4 "
                                    },
                                    [
                                      _c(
                                        "div",
                                        {
                                          staticClass:
                                            "btn-group float-sm-right",
                                          attrs: { role: "group" }
                                        },
                                        [
                                          _c(
                                            "router-link",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: {
                                                role: "button",
                                                to: {
                                                  name: "report-show",
                                                  params: { id: item.id }
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Show\n                                                "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.t_id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                            "
                                              )
                                            ]
                                          )
                                        ],
                                        1
                                      )
                                    ]
                                  )
                                ])
                              ]
                            )
                          : _vm._e()
                      ])
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c(
                    "nav",
                    {
                      staticClass: "m-4 p-1",
                      attrs: { "aria-label": "pagination" }
                    },
                    [
                      _c("ul", { staticClass: "pagination" }, [
                        _c(
                          "li",
                          { staticClass: "page-item", attrs: { id: "end" } },
                          [
                            _c(
                              "a",
                              {
                                staticClass: "page-link",
                                on: {
                                  click: function($event) {
                                    return _vm.PAGINATION(
                                      "/api/admin/get/reports"
                                    )
                                  }
                                }
                              },
                              [_vm._v("Begin")]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "page-item",
                            class: {
                              disabled: _vm.data.reports.prev_page_url === null
                            },
                            attrs: { id: "prev" }
                          },
                          [
                            _c(
                              "a",
                              {
                                staticClass: "page-link",
                                on: {
                                  click: function($event) {
                                    return _vm.PAGINATION(
                                      _vm.data.reports.prev_page_url
                                    )
                                  }
                                }
                              },
                              [_vm._v("Previous")]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("li", { staticClass: "page-item" }, [
                          _c("a", { staticClass: "page-link" }, [
                            _vm._v(
                              _vm._s(_vm.data.reports.current_page) +
                                "/" +
                                _vm._s(_vm.data.reports.last_page)
                            )
                          ])
                        ]),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "page-item",
                            class: {
                              disabled: _vm.data.reports.next_page_url === null
                            },
                            attrs: { id: "next" }
                          },
                          [
                            _c(
                              "a",
                              {
                                staticClass: "page-link",
                                on: {
                                  click: function($event) {
                                    return _vm.PAGINATION(
                                      _vm.data.reports.next_page_url
                                    )
                                  }
                                }
                              },
                              [_vm._v("Next")]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          { staticClass: "page-item", attrs: { id: "end" } },
                          [
                            _c(
                              "a",
                              {
                                staticClass: "page-link",
                                on: {
                                  click: function($event) {
                                    return _vm.PAGINATION(
                                      "/api/admin/get/reports?page=" +
                                        _vm.data.reports.last_page
                                    )
                                  }
                                }
                              },
                              [_vm._v("End")]
                            )
                          ]
                        )
                      ])
                    ]
                  )
                ])
              : _c("div", [_vm._m(2)])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", [
      _c("b", [_vm._v("Report type:")]),
      _vm._v(" "),
      _c("span", { staticClass: "badge badge-primary" }, [
        _c("i", {
          staticClass: "fa fa-film fa-1x",
          attrs: { "aria-hidden": "true" }
        }),
        _vm._v(" Movie")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", [
      _c("b", [_vm._v("Report type:")]),
      _vm._v(" "),
      _c("span", { staticClass: "badge badge-primary" }, [
        _c("i", {
          staticClass: "fa fa-television fa-1x",
          attrs: { "aria-hidden": "true" }
        }),
        _vm._v(" Series")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "text-center mt-5 mr-5" }, [
      _c("h2", [_vm._v("Sorry no result were found")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-fd536630", module.exports)
  }
}

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(535)
/* template */
var __vue_template__ = __webpack_require__(536)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/reports/report.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5fc98537", Component.options)
  } else {
    hotAPI.reload("data-v-5fc98537", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            report_item: [],
            show_report_modal: false
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.reports.data;
        },
        data_search: function data_search(state) {
            return state.reports.data_search;
        },
        spinner_loading: function spinner_loading(state) {
            return state.reports.spinner_loading;
        }
    }),

    created: function created() {
        this.$store.dispatch("GET_REPORT", this.$route.params.id);
    },


    methods: {
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_REPORT_PAGINATION", path_url);
        },
        SHOW_REPORT: function SHOW_REPORT(key) {
            var _this = this;

            this.show_report_modal = true;
            this.report_item = this.data.reports.data[key];
            axios.put("/api/admin/new/report/readit/" + this.data.reports.data[key].id).then(function (response) {
                if (response.data.status === 200) {
                    _this.data.reports.data[key].report_readit = 1;
                }
            });
        },
        DELETE: function DELETE(id, key) {
            var _this2 = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this2.$store.dispatch("DELETE_REPORT", {
                        id: id,
                        key: key
                    });
                }
            });
        }
    }
});

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table p-1" }, [
          _vm.data.reports !== null
            ? _c("div", [
                _c("h5", { staticClass: "title p-2" }, [
                  _vm._v(_vm._s(_vm.data.reports.data[0].name))
                ]),
                _vm._v(" "),
                _vm.show_report_modal
                  ? _c("div", { staticClass: "report-modal" }, [
                      _c(
                        "div",
                        {
                          staticClass:
                            "col-12 col-sm-8 col-lg-10 offset-sm-2 offset-lg-1",
                          attrs: { id: "modal" }
                        },
                        [
                          _c("div", { staticClass: "header" }, [
                            _c(
                              "span",
                              {
                                attrs: { id: "close" },
                                on: {
                                  click: function($event) {
                                    _vm.show_report_modal = false
                                  }
                                }
                              },
                              [
                                _c("i", {
                                  staticClass: "fa fa-times-circle-o",
                                  attrs: { "aria-hidden": "true" }
                                })
                              ]
                            )
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "body" }, [
                            _c("ul", [
                              _c("li", [
                                _c("b", [_vm._v("Sender Name")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(
                                  " " +
                                    _vm._s(_vm.report_item.username) +
                                    "\n                            "
                                )
                              ]),
                              _vm._v(" "),
                              _c("li", [
                                _c("b", [_vm._v("Report Type")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(" "),
                                _vm.report_item.report_type === 1
                                  ? _c(
                                      "span",
                                      { staticClass: "badge badge-warning" },
                                      [_vm._v("Labeling Problem")]
                                    )
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.report_item.report_type === 2
                                  ? _c(
                                      "span",
                                      { staticClass: "badge badge-danger" },
                                      [_vm._v("Video Problem")]
                                    )
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.report_item.report_type === 3
                                  ? _c(
                                      "span",
                                      { staticClass: "badge badge-danger" },
                                      [_vm._v("Sound Problem")]
                                    )
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.report_item.report_type === 4
                                  ? _c(
                                      "span",
                                      { staticClass: "badge badge-warning" },
                                      [_vm._v("Captios Problem")]
                                    )
                                  : _vm._e()
                              ]),
                              _vm._v(" "),
                              _c("li", [
                                _c("b", [_vm._v("Name")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(
                                  " " +
                                    _vm._s(_vm.report_item.name) +
                                    "\n                            "
                                )
                              ]),
                              _vm._v(" "),
                              _c("li", [
                                _c("b", [_vm._v("Report Details")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(
                                  " " +
                                    _vm._s(_vm.report_item.report_details) +
                                    "\n                            "
                                )
                              ])
                            ])
                          ])
                        ]
                      )
                    ])
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "table-responsive mt-2" }, [
                  _c("div", { staticClass: "table table-hover" }, [
                    _vm._m(0),
                    _vm._v(" "),
                    _c(
                      "tbody",
                      _vm._l(_vm.data.reports.data, function(item, index) {
                        return _c("tr", { key: index }, [
                          _c("td", [_vm._v(_vm._s(item.id))]),
                          _vm._v(" "),
                          item.report_type === 1
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-warning" },
                                  [_vm._v("Labeling Problem")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.report_type === 2
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-danger" },
                                  [_vm._v("Video Problem")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.report_type === 3
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-danger" },
                                  [_vm._v("Sound Problem")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.report_type === 4
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-warning" },
                                  [_vm._v("Captios Problem")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.type === "series"
                            ? _c("td", [
                                _vm._v(
                                  _vm._s(
                                    item.name +
                                      " S:" +
                                      item.season_number +
                                      " E:" +
                                      item.episode_number
                                  )
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.type === "movie"
                            ? _c("td", [_vm._v(_vm._s(item.name))])
                            : _vm._e(),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.username))]),
                          _vm._v(" "),
                          item.report_readit === 0
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-warning" },
                                  [_vm._v("See it")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          item.report_readit === 1
                            ? _c("td", [
                                _c(
                                  "span",
                                  { staticClass: "badge badge-success" },
                                  [_vm._v("Saw it")]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.created_at))]),
                          _vm._v(" "),
                          _c("td", [
                            _c(
                              "div",
                              {
                                staticClass: "btn-group",
                                attrs: { role: "group" }
                              },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    on: {
                                      click: function($event) {
                                        return _vm.SHOW_REPORT(index)
                                      }
                                    }
                                  },
                                  [_vm._v("Show")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-danger btn-sm mr-2",
                                    on: {
                                      click: function($event) {
                                        return _vm.DELETE(item.id, index)
                                      }
                                    }
                                  },
                                  [_vm._v("Delete")]
                                )
                              ]
                            )
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c(
                  "nav",
                  {
                    staticClass: "m-4 p-1",
                    attrs: { "aria-label": "pagination" }
                  },
                  [
                    _c("ul", { staticClass: "pagination" }, [
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/report/" +
                                      _vm.$route.params.id
                                  )
                                }
                              }
                            },
                            [_vm._v("Begin")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.data.reports.prev_page_url === null
                          },
                          attrs: { id: "prev" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.data.reports.prev_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Previous")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("li", { staticClass: "page-item" }, [
                        _c("a", { staticClass: "page-link" }, [
                          _vm._v(
                            _vm._s(_vm.data.reports.current_page) +
                              "/" +
                              _vm._s(_vm.data.reports.last_page)
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.data.reports.next_page_url === null
                          },
                          attrs: { id: "next" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.data.reports.next_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Next")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/reports" +
                                      _vm.$route.params.id +
                                      "?page=" +
                                      _vm.data.reports.last_page
                                  )
                                }
                              }
                            },
                            [_vm._v("End")]
                          )
                        ]
                      )
                    ])
                  ]
                )
              ])
            : _vm._e()
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("#ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Report Type")]),
      _vm._v(" "),
      _c("th", [_vm._v("Where")]),
      _vm._v(" "),
      _c("th", [_vm._v("Sender name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5fc98537", module.exports)
  }
}

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(538)
/* template */
var __vue_template__ = __webpack_require__(539)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/profile/profile.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d86ac2c0", Component.options)
  } else {
    hotAPI.reload("data-v-d86ac2c0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 538 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: "",
            email: "",
            avatar_image: "",
            showModelError: false,
            success: false,
            spinner_loading: false
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    created: function created() {
        var _this = this;

        // Get all details
        axios.get("api/admin/profile").then(function (res) {
            _this.avatar_image = res.data[0].image;
            _this.name = res.data[0].name;
            _this.email = res.data[0].email;
        });
    },

    methods: {
        changeImage: function changeImage() {
            var _this2 = this;

            this.spinner_loading = true;
            var formData = new FormData();
            var image = document.getElementById("avatar-img-file");
            formData.append("image", image.files[0]);
            axios.post("api/admin/profile/image", formData).then(function (res) {
                if (res.data.status === "success") {
                    _this2.avatar_image = res.data.image;
                    localStorage.setItem("image", res.data.image);
                    _this2.spinner_loading = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("There is error in back-end");
                _this2.spinner_loading = false;
            });
        },
        changeDetails: function changeDetails() {
            var _this3 = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("api/admin/profile/details", {
                        name: _this3.name,
                        email: _this3.email
                    }).then(function (res) {
                        if (res.data.status === "success") {
                            _this3.success = true;
                            localStorage.setItem("name", _this3.name);
                        }
                    });
                }
            });
        },
        LOGOUT: function LOGOUT() {
            axios.post("admin/logout").then(function (res) {
                localStorage.removeItem('_a');
                location.reload();
            });
        }
    }
});

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "profile" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "container my-5" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-sm-3 col-lg-3" }, [
                _c(
                  "div",
                  { staticClass: "list-group" },
                  [
                    _c(
                      "router-link",
                      {
                        staticClass: "list-group-item list-group-item-action",
                        attrs: { to: { name: "profile" } }
                      },
                      [
                        _vm._v(
                          "\n                            Profile\n                        "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "router-link",
                      {
                        staticClass: "list-group-item list-group-item-action",
                        attrs: { to: { name: "security" }, exact: "" }
                      },
                      [
                        _vm._v(
                          "\n                            Security\n                        "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("hr"),
                _vm._v(" "),
                _c(
                  "b",
                  {
                    staticClass: "is-danger",
                    staticStyle: { cursor: "pointer", "margin-left": "10px" },
                    on: { click: _vm.LOGOUT }
                  },
                  [_vm._v("Logout")]
                )
              ]),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "col-12 col-sm-6 col-lg-4  mt-5",
                  attrs: { id: "profile-setting" }
                },
                [
                  _c("div", { attrs: { id: "avatar-img" } }, [
                    _c("img", {
                      attrs: {
                        src: _vm.$auth.getUserInfo("image"),
                        onError:
                          "this.onerror=null;this.src='/images/avatar.png';",
                        width: "100%"
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(0),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: {
                        type: "file",
                        id: "avatar-img-file",
                        name: "avatar"
                      },
                      on: { change: _vm.changeImage }
                    })
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "text-center" }, [
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("avatar"),
                            expression: "errors.has('avatar')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("avatar")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { attrs: { id: "profile-details" } }, [
                    _c("div", { staticClass: "form-group" }, [
                      _c("label", { staticClass: "col-8 control-label" }, [
                        _vm._v("Name")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|min:6|max:24",
                              expression: "'required|min:6|max:24'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.name,
                              expression: "name"
                            }
                          ],
                          staticClass: "form-control",
                          class: {
                            input: true,
                            "input-danger": _vm.errors.has("name")
                          },
                          attrs: {
                            type: "name",
                            name: "name",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.name },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.name = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name"),
                                expression: "errors.has('name')"
                              }
                            ],
                            staticClass: "help is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name")) +
                                "\n                                "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("label", { staticClass: "col-8 control-label" }, [
                        _vm._v("E-mail")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.email,
                              expression: "email"
                            },
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "required|max:50",
                              expression: "'required|max:50'"
                            }
                          ],
                          staticClass: "form-control",
                          class: {
                            input: true,
                            "input-danger": _vm.errors.has("email")
                          },
                          attrs: {
                            type: "email",
                            name: "email",
                            placeholder: "E-mail"
                          },
                          domProps: { value: _vm.email },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.email = $event.target.value
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("email"),
                                expression: "errors.has('email')"
                              }
                            ],
                            staticClass: "help is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("email")) +
                                "\n                                "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _vm.success
                      ? _c("div", { staticClass: "form-group" }, [_vm._m(1)])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-warning",
                            on: { click: _vm.changeDetails }
                          },
                          [
                            _vm._v(
                              "Update\n                                    "
                            )
                          ]
                        )
                      ])
                    ])
                  ])
                ]
              )
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { for: "avatar-img-file" } }, [
      _c("i", {
        staticClass: "fa fa-pencil",
        attrs: { "aria-hidden": "true" }
      }),
      _vm._v("Change image")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("span", { staticClass: "is-success" }, [_vm._v("Successful change.")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d86ac2c0", module.exports)
  }
}

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(541)
/* template */
var __vue_template__ = __webpack_require__(542)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/profile/security.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6139f24e", Component.options)
  } else {
    hotAPI.reload("data-v-6139f24e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 541 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            password: "",
            confirm: "",
            success: ""
        };
    },

    methods: {
        changePassword: function changePassword() {
            var _this = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("api/admin/profile/password", {
                        password: _this.password,
                        password_confirmation: _this.confirm
                    }).then(function (res) {
                        if (res.data.status === "success") {
                            _this.success = true;
                            _this.$auth.destroyToken();
                            _this.$router.push({
                                name: "login"
                            });
                        }
                    }, function (error) {
                        alertify.logPosition("top right");
                        alertify.error("There is error in back-end");
                    });
                }
            });
        },
        LOGOUT: function LOGOUT() {
            axios.post("admin/logout").then(function (res) {
                localStorage.removeItem('_a');
                location.reload();
            });
        }
    }
});

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "container my-5" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-sm-3 col-lg-3" }, [
            _c(
              "div",
              { staticClass: "list-group" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "list-group-item list-group-item-action",
                    attrs: { to: { name: "profile" } }
                  },
                  [
                    _vm._v(
                      "\n                            Profile\n                        "
                    )
                  ]
                ),
                _vm._v(" "),
                _c(
                  "router-link",
                  {
                    staticClass: "list-group-item list-group-item-action",
                    attrs: { to: { name: "security" }, exact: "" }
                  },
                  [
                    _vm._v(
                      "\n                            Security\n                        "
                    )
                  ]
                )
              ],
              1
            ),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _c(
              "b",
              {
                staticClass: "is-danger",
                staticStyle: { cursor: "pointer", "margin-left": "21px" },
                on: { click: _vm.LOGOUT }
              },
              [_vm._v("Logout")]
            )
          ]),
          _vm._v(" "),
          _c(
            "div",
            {
              staticClass: "col-12 col-sm-6 col-lg-4 mt-5",
              attrs: { id: "profile-setting" }
            },
            [
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "min:8|required",
                        expression: "'min:8|required'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.password,
                        expression: "password"
                      }
                    ],
                    ref: "passwordRef",
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("password")
                    },
                    attrs: {
                      type: "password",
                      name: "password",
                      placeholder: "Password"
                    },
                    domProps: { value: _vm.password },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.password = $event.target.value
                      }
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "min:8|required|confirmed:passwordRef",
                        expression: "'min:8|required|confirmed:passwordRef'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.confirm,
                        expression: "confirm"
                      }
                    ],
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("password")
                    },
                    attrs: {
                      type: "password",
                      name: "password_confirmation",
                      placeholder: "Confirm password",
                      "data-vv-as": "password"
                    },
                    domProps: { value: _vm.confirm },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.confirm = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("password_confirmation"),
                          expression: "errors.has('password_confirmation')"
                        }
                      ],
                      staticClass: "text-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("password_confirmation")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _vm.success
                ? _c("div", { staticClass: "form-group" }, [_vm._m(0)])
                : _vm._e(),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-sm btn-warning",
                      on: { click: _vm.changePassword }
                    },
                    [_vm._v("Update")]
                  )
                ])
              ])
            ]
          )
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("span", { staticClass: "is-success" }, [_vm._v("Successful change.")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6139f24e", module.exports)
  }
}

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(544)
/* template */
var __vue_template__ = __webpack_require__(545)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/users/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1d7943bf", Component.options)
  } else {
    hotAPI.reload("data-v-1d7943bf", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 544 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    name: "users-manage",
    data: function data() {
        return {
            date: new Date(),
            search_query: null
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.users.data;
        },
        invoices: function invoices(state) {
            return state.users.invoices;
        },
        data_search: function data_search(state) {
            return state.users.data_search;
        },
        button_loading: function button_loading(state) {
            return state.users.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.users.spinner_loading;
        },
        invoice_spinner_loading: function invoice_spinner_loading(state) {
            return state.users.invoice_spinner_loading;
        }
    }),

    created: function created() {
        this.$store.commit("CLEAN_SEARCH_USERS");
        this.$store.dispatch("GET_ALL_USERS");
    },


    methods: {
        PAGINATION: function PAGINATION(path_url) {
            this.$store.dispatch("GET_ALL_USERS_BY_PAGINATION", path_url);
        },
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_USER", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        ALL: function ALL() {
            this.$store.dispatch("GET_ALL_USERS");
        },
        INACTIVITY: function INACTIVITY() {
            this.$store.dispatch("GET_INACTIVITY_USERS");
        },
        ACTIVITY: function ACTIVITY() {
            this.$store.dispatch("GET_ACTIVITY_USERS");
        },
        SEARCH: function SEARCH() {
            this.$store.dispatch("GET_USERS_SEARCH", this.search_query);
        },
        BILLING: function BILLING(id) {
            this.$store.dispatch("GET_USERS_BILLING", id);
        }
    }
});

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Users")]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12 row" }, [
        _c("div", { staticClass: "col-8" }, [
          _c(
            "div",
            { staticClass: "group-btn" },
            [
              _c(
                "button",
                {
                  staticClass: "btn btn-sm btn-warning",
                  on: { click: _vm.ALL }
                },
                [_vm._v("All")]
              ),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass: "btn btn-sm btn-success",
                  on: { click: _vm.ACTIVITY }
                },
                [_vm._v("Activity")]
              ),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass: "btn btn-sm btn-danger",
                  on: { click: _vm.INACTIVITY }
                },
                [_vm._v("Inactivity")]
              ),
              _vm._v(" "),
              _c(
                "router-link",
                {
                  staticClass: "btn btn-sm btn-warning mr-3",
                  attrs: { role: "button", to: { name: "create-user" } }
                },
                [_vm._v("Create New User")]
              )
            ],
            1
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "col-4 pull-right" }, [
          _c("div", { staticClass: "pull-right", attrs: { id: "search" } }, [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.search_query,
                  expression: "search_query"
                }
              ],
              staticClass: "form-control mr-sm-2",
              attrs: { type: "text", placeholder: "Search" },
              domProps: { value: _vm.search_query },
              on: {
                keyup: _vm.SEARCH,
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.search_query = $event.target.value
                }
              }
            })
          ])
        ])
      ]),
      _vm._v(" "),
      _vm.spinner_loading
        ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
        : _vm._e(),
      _vm._v(" "),
      !_vm.spinner_loading
        ? _c("div", { staticClass: "m-2" }, [
            _c(
              "div",
              {
                staticClass: "modal fade",
                attrs: {
                  id: "CreateUserModal",
                  tabindex: "-1",
                  role: "dialog",
                  "aria-labelledby": "CreateUserModalLabel",
                  "aria-hidden": "true"
                }
              },
              [
                _c(
                  "div",
                  { staticClass: "modal-dialog", attrs: { role: "document" } },
                  [
                    _c("div", { staticClass: "modal-content" }, [
                      _c("div", { staticClass: "modal-body" }, [
                        _vm.invoice_spinner_loading
                          ? _c(
                              "div",
                              { staticClass: "spinner-load" },
                              [_c("Loader")],
                              1
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.invoices !== null && !_vm.invoice_spinner_loading
                          ? _c("div", [
                              _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "col-12" }, [
                                  _c("small", [_vm._v("Next plan")]),
                                  _vm._v(" "),
                                  _vm.invoices.name === "Monthly"
                                    ? _c("h6", [
                                        _vm._v(
                                          _vm._s(_vm.invoices.name) +
                                            " for\n                                                $" +
                                            _vm._s(_vm.invoices.amount) +
                                            "/mo"
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _vm.invoices.name === "Yearly"
                                    ? _c("h6", [
                                        _vm._v(
                                          " " +
                                            _vm._s(_vm.invoices.name) +
                                            " for\n                                                $" +
                                            _vm._s(_vm.invoices.amount) +
                                            "/y"
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c("hr")
                                ])
                              ]),
                              _vm._v(" "),
                              _c(
                                "table",
                                { staticClass: "table table-hover" },
                                [
                                  _vm._m(0),
                                  _vm._v(" "),
                                  _c(
                                    "tbody",
                                    _vm._l(_vm.invoices.invoices, function(
                                      item,
                                      key
                                    ) {
                                      return _c("tr", { key: key }, [
                                        _c("td", [
                                          _vm._v("Cinemarine service")
                                        ]),
                                        _vm._v(" "),
                                        _c("td", [_vm._v(_vm._s(item.start))]),
                                        _vm._v(" "),
                                        _c("td", [_vm._v(_vm._s(item.end))]),
                                        _vm._v(" "),
                                        _c("td", [
                                          _vm._v("$" + _vm._s(item.total / 100))
                                        ])
                                      ])
                                    }),
                                    0
                                  )
                                ]
                              )
                            ])
                          : _vm._e()
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "modal-footer" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-warning",
                            attrs: { type: "button", "data-dismiss": "modal" },
                            on: {
                              click: function($event) {
                                _vm.invoices = null
                              }
                            }
                          },
                          [_vm._v("Close\n                            ")]
                        )
                      ])
                    ])
                  ]
                )
              ]
            ),
            _vm._v(" "),
            _vm.data.users === null
              ? _c("div", { staticClass: "text-center" }, [
                  _c("h4", [_vm._v("No result were found")])
                ])
              : _c("div", [
                  Object.keys(_vm.data_search).length > 0 &&
                  _vm.data_search.users !== null
                    ? _c("div", [
                        _c(
                          "div",
                          {
                            staticClass: "table-responsive mt-2",
                            attrs: { id: "users-manage" }
                          },
                          [
                            _c("div", { staticClass: "table table-hover" }, [
                              _vm._m(1),
                              _vm._v(" "),
                              _c(
                                "tbody",
                                _vm._l(_vm.data_search.users, function(
                                  item,
                                  index
                                ) {
                                  return _c("tr", { key: index }, [
                                    _c("td", [_vm._v(_vm._s(item.id))]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.name))]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _vm._v(
                                        "\n                                            " +
                                          _vm._s(item.email) +
                                          "\n                                        "
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [
                                      item.confirmed === 0
                                        ? _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-warning"
                                            },
                                            [_vm._v("Unconfirmed mail")]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      new Date(item.period_end) > new Date()
                                        ? _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-success"
                                            },
                                            [_vm._v("Activity")]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      new Date(item.period_end) < new Date()
                                        ? _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-danger"
                                            },
                                            [_vm._v("Inactivity")]
                                          )
                                        : _vm._e()
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.created_at))]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _c(
                                        "div",
                                        {
                                          staticClass: "btn-group",
                                          attrs: { role: "group" }
                                        },
                                        [
                                          _c(
                                            "router-link",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: {
                                                role: "button",
                                                to: {
                                                  name: "edit-user",
                                                  params: { id: item.id }
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Edit\n                                                "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                        "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          item.braintree_id != null &&
                                          item.card_brand != null
                                            ? _c(
                                                "button",
                                                {
                                                  staticClass:
                                                    "btn btn-sm btn-danger btn-sm mr-2",
                                                  attrs: {
                                                    "data-toggle": "modal",
                                                    "data-target":
                                                      "#CreateUserModal"
                                                  },
                                                  on: {
                                                    click: function($event) {
                                                      return _vm.BILLING(
                                                        item.id
                                                      )
                                                    }
                                                  }
                                                },
                                                [
                                                  _vm._v(
                                                    "Billing\n                                        "
                                                  )
                                                ]
                                              )
                                            : _vm._e()
                                        ],
                                        1
                                      )
                                    ])
                                  ])
                                }),
                                0
                              )
                            ])
                          ]
                        )
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.data_search.users === null ||
                  Object.keys(_vm.data_search).length === 0
                    ? _c("div", [
                        _c(
                          "div",
                          {
                            staticClass: "table-responsive mt-2",
                            attrs: { id: "users-manage" }
                          },
                          [
                            _c("div", { staticClass: "table table-hover" }, [
                              _vm._m(2),
                              _vm._v(" "),
                              _c(
                                "tbody",
                                _vm._l(_vm.data.users.data, function(
                                  item,
                                  index
                                ) {
                                  return _c("tr", { key: index }, [
                                    _c("td", [_vm._v(_vm._s(item.id))]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.name))]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _vm._v(
                                        "\n                                            " +
                                          _vm._s(item.email) +
                                          "\n                                        "
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [
                                      item.confirmed === 0
                                        ? _c(
                                            "span",
                                            {
                                              staticClass: "badge badge-warning"
                                            },
                                            [_vm._v("Unconfirmed mail")]
                                          )
                                        : _vm._e(),
                                      _vm._v(" "),
                                      item.period_end == null
                                        ? _c("span", [
                                            _c(
                                              "span",
                                              {
                                                staticClass:
                                                  "badge badge-success"
                                              },
                                              [_vm._v("Active (non-payment)")]
                                            )
                                          ])
                                        : _c("span", [
                                            new Date(item.period_end) >
                                            new Date()
                                              ? _c(
                                                  "span",
                                                  {
                                                    staticClass:
                                                      "badge badge-success"
                                                  },
                                                  [_vm._v("Active")]
                                                )
                                              : _vm._e(),
                                            _vm._v(" "),
                                            new Date(item.period_end) <
                                            new Date()
                                              ? _c(
                                                  "span",
                                                  {
                                                    staticClass:
                                                      "badge badge-danger"
                                                  },
                                                  [_vm._v("Inactive")]
                                                )
                                              : _vm._e()
                                          ])
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.created_at))]),
                                    _vm._v(" "),
                                    _c("td", [_vm._v(_vm._s(item.updated_at))]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _c(
                                        "div",
                                        {
                                          staticClass: "btn-group",
                                          attrs: { role: "group" }
                                        },
                                        [
                                          _c(
                                            "router-link",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-warning btn-sm mr-2",
                                              attrs: {
                                                role: "button",
                                                to: {
                                                  name: "edit-user",
                                                  params: { id: item.id }
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Edit\n                                                "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-danger btn-sm mr-2",
                                              attrs: { id: item.id },
                                              on: {
                                                click: function($event) {
                                                  return _vm.DELETE(
                                                    item.id,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "Delete\n                                        "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          item.braintree_id != null &&
                                          item.card_brand != null
                                            ? _c(
                                                "button",
                                                {
                                                  staticClass:
                                                    "btn btn-sm btn-danger mr-2",
                                                  attrs: {
                                                    "data-toggle": "modal",
                                                    "data-target":
                                                      "#CreateUserModal"
                                                  },
                                                  on: {
                                                    click: function($event) {
                                                      return _vm.BILLING(
                                                        item.id
                                                      )
                                                    }
                                                  }
                                                },
                                                [
                                                  _vm._v(
                                                    "Billing\n                                        "
                                                  )
                                                ]
                                              )
                                            : _vm._e(),
                                          _vm._v(" "),
                                          item.braintree_id == null &&
                                          item.card_brand == null
                                            ? _c(
                                                "button",
                                                {
                                                  staticClass:
                                                    "btn btn-sm btn-secondary mr-2",
                                                  attrs: {
                                                    "data-toggle": "tooltip",
                                                    "data-placement": "top",
                                                    title:
                                                      "The user have not billing because the payment gateway is disabled",
                                                    disabled: ""
                                                  }
                                                },
                                                [
                                                  _vm._v(
                                                    "Billing\n                                        "
                                                  )
                                                ]
                                              )
                                            : _vm._e()
                                        ],
                                        1
                                      )
                                    ])
                                  ])
                                }),
                                0
                              )
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "nav",
                          {
                            staticClass: "m-4 p-1",
                            attrs: { "aria-label": "pagination" }
                          },
                          [
                            _c("ul", { staticClass: "pagination " }, [
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  attrs: { id: "end" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            "/api/admin/get/users"
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Begin")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  class: {
                                    disabled:
                                      _vm.data.users.prev_page_url === null
                                  },
                                  attrs: { id: "prev" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            _vm.data.users.prev_page_url
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Previous")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c("li", { staticClass: "page-item" }, [
                                _c("a", { staticClass: "page-link" }, [
                                  _vm._v(
                                    _vm._s(_vm.data.users.current_page) +
                                      "/" +
                                      _vm._s(_vm.data.users.last_page)
                                  )
                                ])
                              ]),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  class: {
                                    disabled:
                                      _vm.data.users.next_page_url === null
                                  },
                                  attrs: { id: "next" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            _vm.data.users.next_page_url
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("Next")]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "li",
                                {
                                  staticClass: "page-item",
                                  attrs: { id: "end" }
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "page-link",
                                      on: {
                                        click: function($event) {
                                          return _vm.PAGINATION(
                                            "/api/admin/get/users?page=" +
                                              _vm.data.users.last_page
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("End")]
                                  )
                                ]
                              )
                            ])
                          ]
                        )
                      ])
                    : _vm._e()
                ])
          ])
        : _vm._e()
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", [_vm._v("Description")]),
        _vm._v(" "),
        _c("th", [_vm._v("Start period")]),
        _vm._v(" "),
        _c("th", [_vm._v("End period")]),
        _vm._v(" "),
        _c("th", [_vm._v("Total")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("#ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Email")]),
      _vm._v(" "),
      _c("th", [_vm._v("Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("#ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Email")]),
      _vm._v(" "),
      _c("th", [_vm._v("Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1d7943bf", module.exports)
  }
}

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(547)
/* template */
var __vue_template__ = __webpack_require__(548)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/users/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-01343b38", Component.options)
  } else {
    hotAPI.reload("data-v-01343b38", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 547 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            password: null,
            subscribe: null
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.users.data;
        },
        button_loading: function button_loading(state) {
            return state.users.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.users.spinner_loading;
        }

    }),

    created: function created() {
        this.$store.dispatch("GET_USER_DETAILS", this.$route.params.id);
    },


    methods: {
        UPDATE: function UPDATE() {
            var _this = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.$store.dispatch("UPDATE_USER_DETAILS", {
                        id: _this.data.id,
                        name: _this.data.name,
                        email: _this.data.email,
                        braintree_id: _this.data.braintree_id,
                        password: _this.password,
                        subscribe: _this.subscribe
                    });
                }
            });
        }
    }
});

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "edit-users" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _c("div", { staticClass: "k1_manage_table p-2" }, [
          _c("div", { staticClass: "container my-5" }, [
            _c("div", { staticClass: "row" }, [
              _c(
                "div",
                {
                  staticClass: "col-12 col-sm-6 col-lg-6",
                  attrs: { id: "profile-setting" }
                },
                [
                  _c("div", { attrs: { id: "profile-details" } }, [
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        _vm.data.card_brand !== null
                          ? _c("h4", [
                              _c("i", {
                                staticClass: "fa fa-cc-visa",
                                attrs: { "aria-hidden": "true" }
                              }),
                              _vm._v(
                                "\n                                    ************" +
                                  _vm._s(_vm.data.card_last_four) +
                                  "\n                                "
                              )
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.data.braintree_id == null &&
                        _vm.data.card_brand == null
                          ? _c("h6", [
                              _vm._v(
                                "\n                                    Subscription ends in : " +
                                  _vm._s(_vm.data.period_end) +
                                  "\n                                "
                              )
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        new Date(_vm.data.period_end) > new Date()
                          ? _c("span", { staticClass: "badge badge-success" }, [
                              _vm._v("Active")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        new Date(_vm.data.period_end) < new Date()
                          ? _c("span", { staticClass: "badge badge-danger" }, [
                              _vm._v("Inactive")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("hr")
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("label", { staticClass: "col-8 control-label" }, [
                        _vm._v("Name")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "min:6|max:24",
                              expression: "'min:6|max:24'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.data.name,
                              expression: "data.name"
                            }
                          ],
                          staticClass: "form-control",
                          class: {
                            input: true,
                            "input-danger": _vm.errors.has("name")
                          },
                          attrs: {
                            type: "name",
                            name: "name",
                            placeholder: "Name"
                          },
                          domProps: { value: _vm.data.name },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(_vm.data, "name", $event.target.value)
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("name"),
                                expression: "errors.has('name')"
                              }
                            ],
                            staticClass: "help is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("name")) +
                                "\n                            "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("label", { staticClass: "col-8 control-label" }, [
                        _vm._v("E-mail")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.data.email,
                              expression: "data.email"
                            },
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "max:50",
                              expression: "'max:50'"
                            }
                          ],
                          staticClass: "form-control",
                          class: {
                            input: true,
                            "input-danger": _vm.errors.has("email")
                          },
                          attrs: {
                            type: "email",
                            name: "email",
                            placeholder: "E-mail"
                          },
                          domProps: { value: _vm.data.email },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(_vm.data, "email", $event.target.value)
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.errors.has("email"),
                                expression: "errors.has('email')"
                              }
                            ],
                            staticClass: "help is-danger"
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.errors.first("email")) +
                                "\n                            "
                            )
                          ]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("label", { staticClass: "col-8 control-label" }, [
                        _vm._v("Password")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "col-12" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "validate",
                              rawName: "v-validate",
                              value: "min:8",
                              expression: "'min:8'"
                            },
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.password,
                              expression: "password"
                            }
                          ],
                          staticClass: "form-control",
                          class: {
                            input: true,
                            "input-danger": _vm.errors.has("password")
                          },
                          attrs: {
                            type: "password",
                            name: "confirm-field",
                            placeholder: "Password"
                          },
                          domProps: { value: _vm.password },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.password = $event.target.value
                            }
                          }
                        })
                      ])
                    ]),
                    _vm._v(" "),
                    _vm.data.braintree_id == null && _vm.data.card_brand == null
                      ? _c("div", { staticClass: "form-group" }, [
                          _c("label", { staticClass: "col-8 control-label" }, [
                            _vm._v("Subscribe")
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "col-12 btn-group" }, [
                            _c(
                              "div",
                              {
                                staticClass: "btn btn-sm btn-warning",
                                class: { active: _vm.subscribe === "week" },
                                on: {
                                  click: function($event) {
                                    _vm.subscribe = "week"
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  "Weekly\n                                "
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "btn btn-sm btn-warning",
                                class: { active: _vm.subscribe === "month" },
                                on: {
                                  click: function($event) {
                                    _vm.subscribe = "month"
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  "Monthly\n                                "
                                )
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "btn btn-sm btn-warning",
                                class: { active: _vm.subscribe === "year" },
                                on: {
                                  click: function($event) {
                                    _vm.subscribe = "year"
                                  }
                                }
                              },
                              [
                                _vm._v(
                                  "Yearly\n                                "
                                )
                              ]
                            )
                          ])
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "col-12" }, [
                        !_vm.button_loading
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning mt-2",
                                on: { click: _vm.UPDATE }
                              },
                              [
                                _vm._v(
                                  "\n                                    Update\n                                "
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.button_loading
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning m-2",
                                attrs: { disabled: "" }
                              },
                              [
                                _c("i", { attrs: { id: "btn-progress" } }),
                                _vm._v(
                                  " Loading\n                                "
                                )
                              ]
                            )
                          : _vm._e()
                      ])
                    ])
                  ])
                ]
              )
            ])
          ])
        ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-01343b38", module.exports)
  }
}

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(550)
/* template */
var __vue_template__ = __webpack_require__(551)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/users/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4b2ab854", Component.options)
  } else {
    hotAPI.reload("data-v-4b2ab854", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 550 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      name: null,
      email: null,
      password: null,
      subscribe: null
    };
  },


  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.users.data;
    },
    button_loading: function button_loading(state) {
      return state.users.button_loading;
    }

  }),

  methods: {
    CREATE: function CREATE() {
      var _this = this;

      this.$validator.validateAll().then(function (result) {
        if (result) {
          _this.$store.dispatch("CREATE_NEW_USER", {
            name: _this.name,
            email: _this.email,
            password: _this.password,
            subscribe: _this.subscribe
          });
        }
      });
    }
  }
});

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Create New User")]),
      _vm._v(" "),
      _c("div", { staticClass: "container my-5" }, [
        _c("div", { staticClass: "row" }, [
          _c(
            "div",
            {
              staticClass: "col-12 col-sm-6 col-lg-6",
              attrs: { id: "profile-setting" }
            },
            [
              _c("div", { attrs: { id: "profile-details" } }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { staticClass: "col-8 control-label" }, [
                    _vm._v("Name")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "min:6|max:24",
                          expression: "'min:6|max:24'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.name,
                          expression: "name"
                        }
                      ],
                      staticClass: "form-control",
                      class: {
                        input: true,
                        "input-danger": _vm.errors.has("name")
                      },
                      attrs: {
                        type: "name",
                        name: "name",
                        placeholder: "Name"
                      },
                      domProps: { value: _vm.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.name = $event.target.value
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("name"),
                            expression: "errors.has('name')"
                          }
                        ],
                        staticClass: "help is-danger"
                      },
                      [
                        _vm._v(
                          _vm._s(_vm.errors.first("name")) +
                            "\n                            "
                        )
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { staticClass: "col-8 control-label" }, [
                    _vm._v("E-mail")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.email,
                          expression: "email"
                        },
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "max:50",
                          expression: "'max:50'"
                        }
                      ],
                      staticClass: "form-control",
                      class: {
                        input: true,
                        "input-danger": _vm.errors.has("email")
                      },
                      attrs: {
                        type: "email",
                        name: "email",
                        placeholder: "E-mail"
                      },
                      domProps: { value: _vm.email },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.email = $event.target.value
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("email"),
                            expression: "errors.has('email')"
                          }
                        ],
                        staticClass: "help is-danger"
                      },
                      [
                        _vm._v(
                          _vm._s(_vm.errors.first("email")) +
                            "\n                            "
                        )
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { staticClass: "col-8 control-label" }, [
                    _vm._v("Password")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "min:8",
                          expression: "'min:8'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.password,
                          expression: "password"
                        }
                      ],
                      staticClass: "form-control",
                      class: {
                        input: true,
                        "input-danger": _vm.errors.has("password")
                      },
                      attrs: {
                        type: "password",
                        name: "confirm-field",
                        placeholder: "Password"
                      },
                      domProps: { value: _vm.password },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.password = $event.target.value
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { staticClass: "col-8 control-label" }, [
                    _vm._v("Subscribe")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 btn-group" }, [
                    _c(
                      "div",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        class: { active: _vm.subscribe === "week" },
                        on: {
                          click: function($event) {
                            _vm.subscribe = "week"
                          }
                        }
                      },
                      [_vm._v("Weekly")]
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        class: { active: _vm.subscribe === "month" },
                        on: {
                          click: function($event) {
                            _vm.subscribe = "month"
                          }
                        }
                      },
                      [_vm._v("Monthly")]
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        class: { active: _vm.subscribe === "year" },
                        on: {
                          click: function($event) {
                            _vm.subscribe = "year"
                          }
                        }
                      },
                      [_vm._v("Yearly")]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12" }, [
                    !_vm.button_loading
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-md btn-warning mt-2",
                            on: { click: _vm.CREATE }
                          },
                          [_vm._v("Create")]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.button_loading
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-md btn-warning m-2",
                            attrs: { disabled: "" }
                          },
                          [
                            _c("i", { attrs: { id: "btn-progress" } }),
                            _vm._v(" Loading")
                          ]
                        )
                      : _vm._e()
                  ])
                ])
              ])
            ]
          )
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4b2ab854", module.exports)
  }
}

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(553)
/* template */
var __vue_template__ = __webpack_require__(554)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/tv/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-05d7cda2", Component.options)
  } else {
    hotAPI.reload("data-v-05d7cda2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 553 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {};
  },

  components: {
    Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
  },
  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.channels.data;
    },
    button_loading: function button_loading(state) {
      return state.channels.button_loading;
    },
    spinner_loading: function spinner_loading(state) {
      return state.channels.spinner_loading;
    }
  }),
  created: function created() {
    this.$store.dispatch("GET_ALL_CHANNELS");
  },

  methods: {
    DELETE: function DELETE(id, key) {
      var _this = this;

      swal({
        title: "Are you sure to delete ?",
        icon: "warning",
        text: "All videos and subtitles will removed!",
        buttons: true,
        dangerMode: true
      }).then(function (willDelete) {
        if (willDelete) {
          _this.$store.dispatch("DELETE_CHANNEL", {
            id: id,
            key: key
          });
        }
      });
    },
    STREAMING_STATUS: function STREAMING_STATUS(id, key) {
      this.$store.dispatch("STREAMING_STATUS", {
        id: id,
        key: key
      });
    }
  }
});

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Live Tv")]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "tv-manage" } }
                    },
                    [_vm._v("Manage")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "tv-create" } }
                    },
                    [_vm._v("Create")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _vm.data.channels !== null
            ? _c("div", { staticClass: "table-responsive mt-2" }, [
                _c("div", { staticClass: "table table-hover" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "tbody",
                    _vm._l(_vm.data.channels, function(item, index) {
                      return _c("tr", { key: index }, [
                        _c("td", [
                          _c("img", {
                            attrs: {
                              src: "/storage/posters/" + item.image,
                              alt: item.name,
                              width: "40"
                            }
                          })
                        ]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.name))]),
                        _vm._v(" "),
                        !item.streaming_status
                          ? _c("td", [_vm._v(" off ")])
                          : _c("td", [_vm._v(" ON ")]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.created_at))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.updated_at))]),
                        _vm._v(" "),
                        _c("td", [
                          _c(
                            "div",
                            {
                              staticClass: "btn-group",
                              attrs: { role: "group" }
                            },
                            [
                              _c(
                                "router-link",
                                {
                                  staticClass:
                                    "btn btn-sm btn-warning btn-sm mr-2",
                                  attrs: {
                                    role: "buttton",
                                    to: {
                                      name: "tv-edit",
                                      params: { id: item.id }
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                    Edit\n                                "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "button",
                                {
                                  staticClass:
                                    "btn btn-sm btn-danger btn-sm mr-2",
                                  attrs: { id: item.id },
                                  on: {
                                    click: function($event) {
                                      return _vm.DELETE(item.id, index)
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                    Delete\n                                "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              !item.streaming_status
                                ? _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-success btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.STREAMING_STATUS(
                                            item.id,
                                            index
                                          )
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                    Start Streaming\n                                "
                                      )
                                    ]
                                  )
                                : _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-danger btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.STREAMING_STATUS(
                                            item.id,
                                            index
                                          )
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                    Stop Streaming\n                                "
                                      )
                                    ]
                                  )
                            ],
                            1
                          )
                        ])
                      ])
                    }),
                    0
                  )
                ])
              ])
            : _c("div", { staticClass: "text-center" }, [
                _c("h4", [_vm._v("No result were found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Cover")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Streaming Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-05d7cda2", module.exports)
  }
}

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(556)
/* template */
var __vue_template__ = __webpack_require__(557)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/tv/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8bf50d74", Component.options)
  } else {
    hotAPI.reload("data-v-8bf50d74", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 556 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: '',
            external_link: '',
            genre: '',
            showProgress: false,
            percent_details_progress: 0,
            percentChannelUpload: 0,
            details_progress: false,
            video_upload_progress: false,
            upload_status: 'Upload video',
            upload_message: '',
            error_message_api: '',
            success_message_api: '',
            presets: [{
                'Name': 'HLS - 4000Kilorate - 1080P',
                'Resolution': '1080',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 2500Kilorate - 720P',
                'Resolution': '720',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 700Kilorate - 480P',
                'Resolution': '480',
                'Container': 'ts'
            }, {
                'Name': 'HLS - 400Kilorate - 360P',
                'Resolution': '360',
                'Container': 'ts'
            }],
            new_presets: '',
            category: null

        };
    },
    mounted: function mounted() {
        var _this = this;

        // Listen for the 'NewBlogPost' event in the 'team.1' private channel
        Echo.channel('progress').listen('EventTrigger', function (payload) {
            _this.upload_status = 'FFmpegTranscoding Video';
            _this.percentChannelUpload = payload.progress.progress;
            _this.upload_message = payload.progress.message;
        });
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        categories_list: function categories_list(state) {
            return state.categories.data;
        }
    }),

    created: function created() {
        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'live');
    },


    methods: {
        CHANNEL_DETAILS: function CHANNEL_DETAILS(name) {
            var _this2 = this;

            var image = document.querySelector("#backdrop");
            var formData = new FormData();
            formData.append("name", this.name);
            formData.append("genre", this.genre);
            formData.append("category", this.category);
            formData.append("image", image.files[0]);
            formData.append("iptv_url", this.external_link);
            // Progress
            this.showProgress = true;
            this.details_progress = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this2.percent_details_progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/new/channel/details", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this2.success_message_api = response.data.message;
                            _this2.showProgress = false;
                            _this2.percent_details_progress = 100;
                            _this2.$router.push({ name: 'tv-manage' });
                        }
                    }, function (error) {
                        _this2.error_message_api = error.response.data.message;
                        setTimeout(function () {
                            _this2.showProgress = false;
                        }, 4000);
                    });
                }
            });
        },
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: { role: "button", to: { name: "tv-manage" } }
                },
                [_vm._v("Manage")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: { role: "button", to: { name: "tv-create" } }
                },
                [_vm._v("Create")]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-md-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.name,
                      expression: "name"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { type: "text", placeholder: "Channel name" },
                  domProps: { value: _vm.name },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.name = $event.target.value
                    }
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "required|image",
                      expression: "'required|image'"
                    }
                  ],
                  staticClass: "inputfile",
                  attrs: { type: "file", id: "backdrop", name: "backdrop" },
                  on: {
                    change: function($event) {
                      return _vm.readImage("backdrop", "imageFileImage")
                    }
                  }
                }),
                _vm._v(" "),
                _vm._m(2),
                _vm._v(" "),
                _c("img", {
                  staticStyle: { display: "none" },
                  attrs: { src: "", id: "imageFileImage", width: "200" }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("backdrop"),
                        expression: "errors.has('backdrop')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(3),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c(
                  "select",
                  {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.category,
                        expression: "category"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { name: "category", id: "category" },
                    on: {
                      change: function($event) {
                        var $$selectedVal = Array.prototype.filter
                          .call($event.target.options, function(o) {
                            return o.selected
                          })
                          .map(function(o) {
                            var val = "_value" in o ? o._value : o.value
                            return val
                          })
                        _vm.category = $event.target.multiple
                          ? $$selectedVal
                          : $$selectedVal[0]
                      }
                    }
                  },
                  _vm._l(_vm.categories_list.categories, function(item, index) {
                    return _c(
                      "option",
                      { key: index, domProps: { value: item.id } },
                      [
                        _vm._v(
                          "\n                                    " +
                            _vm._s(item.name) +
                            "\n                                "
                        )
                      ]
                    )
                  }),
                  0
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("category"),
                        expression: "errors.has('category')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("category")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(4),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.external_link,
                      expression: "external_link"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { type: "text", placeholder: "HLS Tv Link" },
                  domProps: { value: _vm.external_link },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.external_link = $event.target.value
                    }
                  }
                })
              ])
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "form-group" }, [
          _c("div", { staticClass: "col-12" }, [
            _c(
              "button",
              {
                staticClass: "btn btn-md btn-warning",
                on: {
                  click: function($event) {
                    return _vm.CHANNEL_DETAILS()
                  }
                }
              },
              [_vm._v("Upload")]
            )
          ])
        ]),
        _vm._v(" "),
        _vm.showProgress
          ? _c("div", { staticClass: "upload-modal" }, [
              _c(
                "div",
                { staticClass: "modal-dialog", attrs: { role: "document" } },
                [
                  _c("div", { staticClass: "modal-content" }, [
                    _c("div", { staticClass: "modal-body p-4" }, [
                      _vm.details_progress
                        ? _c("div", { staticClass: "details_progress" }, [
                            _c("div", { staticClass: "progress mt-2" }, [
                              _vm.percent_details_progress !== 100
                                ? _c(
                                    "div",
                                    {
                                      staticClass: "progress-bar",
                                      style: {
                                        width:
                                          _vm.percent_details_progress + "%"
                                      },
                                      attrs: {
                                        role: "progressbar",
                                        "aria-valuenow":
                                          _vm.percent_details_progress,
                                        "aria-valuemin": "0",
                                        "aria-valuemax": "100"
                                      }
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.percent_details_progress)
                                      )
                                    ]
                                  )
                                : _c("div", [
                                    _c("i", { attrs: { id: "btn-progress" } }),
                                    _vm._v(
                                      " Prepare\n                                    "
                                    )
                                  ])
                            ]),
                            _vm._v(" "),
                            _c("p", { staticClass: "is-danger" }, [
                              _vm._v(_vm._s(_vm.error_message_api))
                            ]),
                            _vm._v(" "),
                            _c("p", { staticClass: "is-success" }, [
                              _vm._v(_vm._s(_vm.success_message_api))
                            ]),
                            _vm._v(" "),
                            _c("hr")
                          ])
                        : _vm._e()
                    ])
                  ])
                ]
              )
            ])
          : _vm._e()
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Logo")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "backdrop" } }, [
      _vm._v("Choose a backdrop\n                                "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [
        _vm._v("M3U8 OR RTMP\n                                "),
        _c("small", { staticClass: "form-text text-muted" }, [
          _vm._v("External Link")
        ])
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-8bf50d74", module.exports)
  }
}

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(559)
/* template */
var __vue_template__ = __webpack_require__(560)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/tv/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b4d15858", Component.options)
  } else {
    hotAPI.reload("data-v-b4d15858", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 559 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            data: [],
            transcoding: "",
            genre: "",
            presets: [{
                Name: "HLS - 4000Kilorate - 1080P",
                Resolution: "1080",
                Container: "ts"
            }, {
                Name: "HLS - 2500Kilorate - 720P",
                Resolution: "720",
                Container: "ts"
            }, {
                Name: "HLS - 700Kilorate - 480P",
                Resolution: "480",
                Container: "ts"
            }, {
                Name: "HLS - 400Kilorate - 360P",
                Resolution: "360",
                Container: "ts"
            }],
            new_presets: "",
            showProgress: false,
            channel_details: false,
            percentChannelUpload: 0,
            percentVideoUpload: 0,
            error_message_details: "",
            success_message_details: "",
            error_message_video: "",
            success_message_video: "",
            spinner_loading: true
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_1_vuex__["b" /* mapState */])({
        categories_list: function categories_list(state) {
            return state.categories.data;
        }
    }),

    created: function created() {
        var _this = this;

        axios.get("/api/admin/get/channel/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {
                _this.data = resposne.data;
                _this.spinner_loading = false;
            }
        });

        this.$store.dispatch('GET_CATEGORIES_BY_SORT', 'live');
    },

    methods: {
        CHANNEL_DETAILS: function CHANNEL_DETAILS() {
            var _this2 = this;

            var image = document.querySelector("#image");
            var formData = new FormData();
            formData.append("id", this.data.data.id);
            formData.append("name", this.data.data.name);
            formData.append("image", image.files[0]);
            formData.append("genre", this.data.data.genre);
            formData.append("resolution", this.data.data.streaming_resolutions);
            formData.append("transcoding", this.data.data.streaming_transcoding);
            formData.append("iptv_url", this.data.data.streaming_url);
            formData.append("category", this.data.data.category);

            // Progress
            this.showProgress = true;
            this.channel_details = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this2.percentChannelUpload = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                }
            };
            // Store data
            axios.post("/api/admin/update/channel", formData, progress).then(function (response) {
                if (response.status === 200) {
                    _this2.success_message_api = response.data.message;
                    _this2.percentChannelUpload = 0;
                    _this2.showProgress = false;
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                }
            }, function (error) {
                _this2.error_message_api = error.response.data.message;
            });
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [
            _vm._v(_vm._s(_vm.data.data.name))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "tv-manage" } }
                    },
                    [_vm._v("Manage\n                    ")]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "tv-create" } }
                    },
                    [_vm._v("Create\n                    ")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-sm-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.data.name,
                          expression: "data.data.name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { type: "text", placeholder: "Channel name" },
                      domProps: { value: _vm.data.data.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data.data, "name", $event.target.value)
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: { type: "file", id: "image", name: "image" },
                      on: {
                        change: function($event) {
                          return _vm.readImage("image", "imageFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(2),
                    _vm._v(" "),
                    _c("img", {
                      attrs: {
                        src: "/storage/posters/" + _vm.data.data.image,
                        id: "imageFileImage",
                        width: "40%"
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("image"),
                            expression: "errors.has('image')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("image")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(3),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.data.streaming_url,
                          expression: "data.data.streaming_url"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { type: "text", placeholder: "HLS Tv Link" },
                      domProps: { value: _vm.data.data.streaming_url },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.data.data,
                            "streaming_url",
                            $event.target.value
                          )
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(4),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required",
                            expression: "'required'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.data.category,
                            expression: "data.data.category"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { name: "category", id: "category" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.data.data,
                              "category",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      _vm._l(_vm.categories_list.categories, function(
                        item,
                        index
                      ) {
                        return _c(
                          "option",
                          { key: index, domProps: { value: item.id } },
                          [
                            _vm._v(
                              "\n\n                                    " +
                                _vm._s(item.name) +
                                "\n\n                                "
                            )
                          ]
                        )
                      }),
                      0
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("category"),
                            expression: "errors.has('category')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("category")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12 col-sm-12" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.CHANNEL_DETAILS()
                          }
                        }
                      },
                      [_vm._v("Upload")]
                    )
                  ])
                ])
              ])
            ])
          ]),
          _vm._v(" "),
          _vm.showProgress
            ? _c("div", { staticClass: "upload-modal" }, [
                _c(
                  "div",
                  { staticClass: "modal-dialog", attrs: { role: "document" } },
                  [
                    _c("div", { staticClass: "modal-content" }, [
                      _c("div", { staticClass: "modal-body p-4" }, [
                        _vm.channel_details
                          ? _c("div", { staticClass: "channel" }, [
                              _c("div", { staticClass: "progress mt-2" }, [
                                _vm.percentChannelUpload !== 100
                                  ? _c("div", {
                                      staticClass: "progress-bar",
                                      style: {
                                        width: _vm.percentChannelUpload + "%",
                                        height: "6px"
                                      },
                                      attrs: {
                                        role: "progressbar",
                                        "aria-valuenow":
                                          _vm.percentChannelUpload,
                                        "aria-valuemin": "0",
                                        "aria-valuemax": "100"
                                      }
                                    })
                                  : _c("div", [
                                      _c("i", {
                                        attrs: { id: "btn-progress" }
                                      }),
                                      _vm._v(
                                        " Prepare\n                                "
                                      )
                                    ])
                              ]),
                              _vm._v(" "),
                              _c("p", { staticClass: "is-danger" }, [
                                _vm._v(_vm._s(_vm.error_message_details))
                              ]),
                              _vm._v(" "),
                              _c("p", { staticClass: "is-success" }, [
                                _vm._v(_vm._s(_vm.success_message_details))
                              ]),
                              _vm._v(" "),
                              _c("hr")
                            ])
                          : _vm._e()
                      ])
                    ])
                  ]
                )
              ])
            : _vm._e()
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-12" }, [
      _c("label", [_vm._v("Name")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Logo")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "image" } }, [
      _vm._v("Choose a backdrop\n                                "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-12" }, [
      _c("label", [
        _vm._v("M3U8 OR RTMP\n                                "),
        _c("small", { staticClass: "form-text text-muted" }, [
          _vm._v("External Link")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", { attrs: { for: "category" } }, [_vm._v("Category")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-b4d15858", module.exports)
  }
}

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(562)
}
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(564)
/* template */
var __vue_template__ = __webpack_require__(565)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-d19d3928"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/braintree/subscribe.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d19d3928", Component.options)
  } else {
    hotAPI.reload("data-v-d19d3928", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(563);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(13)("7d23f75d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-d19d3928\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./subscribe.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-d19d3928\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./subscribe.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "\n.custom-card[data-v-d19d3928] {\n    background-color: #f9fcfe;\n    padding: 10px;\n    padding-bottom: 20px;\n    border-radius: 5px;\n    font-size: 15px;\n}\n", ""]);

// exports


/***/ }),
/* 564 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            planList: [],
            loading: true,
            btn_loading: false
        };
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/get/braintree/plans").then(function (response) {
            if (response.status === 200) {
                _this.planList = response.data;
                _this.loading = false;
            }
        });
    },


    methods: {
        ACTIVE: function ACTIVE(index) {
            var _this2 = this;

            this.btn_loading = true;
            axios.post("/api/admin/update/braintree/plans", {
                plan_id: this.planList.data[index]['plan']["id"],
                plan_name: this.planList.data[index]['plan']["name"],
                plan_amount: this.planList.data[index]['plan']["price"],
                plan_currency: this.planList.data[index]['plan']["currencyIsoCode"],
                plan_trial: this.planList.data[index]['plan']["trialDuration"]
            }).then(function (response) {
                if (response.status === 200) {
                    if (response.data.type === "add") {
                        alertify.logPosition("top right");
                        alertify.success(response.data.message);
                        _this2.planList.data[index]["active"] = true;
                        _this2.btn_loading = false;
                    } else {
                        alertify.logPosition("top right");
                        alertify.success(response.data.message);
                        _this2.planList.data[index]["active"] = false;
                        _this2.btn_loading = false;
                    }
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.success("Error in input data");
                _this2.btn_loading = false;
            });
        },
        INACTIVE_PAYMENT_GATEWAY: function INACTIVE_PAYMENT_GATEWAY() {
            var _this3 = this;

            axios.get("/api/admin/update/braintree/payment/status").then(function (response) {
                if (response.status === 200) {
                    if (response.data.type == 'active') {
                        _this3.planList.payment_gateway_status = 1;
                    } else if (response.data.type == 'inactive') {
                        _this3.planList.payment_gateway_status = 0;
                    }
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error('Error to remove plan');
            });
        }
    }
});

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "subscribe-braintree" }, [
    _vm.loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.loading
      ? _c("div", [
          _vm.planList !== null
            ? _c("div", { staticClass: "k1_manage_table" }, [
                _c("h5", { staticClass: "title p-2" }, [
                  _vm._v("Braintree Manage")
                ]),
                _vm._v(" "),
                _vm.planList.status === "failed"
                  ? _c(
                      "div",
                      {
                        staticClass: "alert alert-warning",
                        attrs: { role: "alert" }
                      },
                      [
                        _vm._v(
                          "\n                " +
                            _vm._s(_vm.planList.message) +
                            "\n            "
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 my-3 p-2" }, [
                  _c("div", { staticClass: "group-btn" }, [
                    _vm.planList.payment_gateway_status
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-success",
                            on: { click: _vm.INACTIVE_PAYMENT_GATEWAY }
                          },
                          [
                            _vm._v(
                              " Active Payment Gateway\n                    "
                            )
                          ]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    !_vm.planList.payment_gateway_status
                      ? _c(
                          "button",
                          {
                            staticClass: "btn btn-sm btn-danger",
                            on: { click: _vm.INACTIVE_PAYMENT_GATEWAY }
                          },
                          [
                            _vm._v(
                              " Inactive Payment Gateway\n                    "
                            )
                          ]
                        )
                      : _vm._e()
                  ])
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "row p-2" },
                  _vm._l(_vm.planList.data, function(item, index) {
                    return _c(
                      "div",
                      {
                        key: index,
                        staticClass: "col-12 col-md-4 col-xl-3 mt-2"
                      },
                      [
                        _c("div", { staticClass: "custom-card" }, [
                          _c("div", { staticClass: "header" }, [
                            _c("h5", [
                              _vm._v(
                                _vm._s(_vm.planList.data[index]["plan"].name)
                              )
                            ]),
                            _vm._v(" "),
                            _c("small", { staticClass: "text-muted" }, [
                              _vm._v(
                                _vm._s(_vm.planList.data[index]["plan"].id)
                              )
                            ])
                          ]),
                          _vm._v(" "),
                          _c("hr"),
                          _vm._v(" "),
                          _c("div", { staticClass: "body" }, [
                            _c("ul", { staticClass: "list-unstyled" }, [
                              _c("li", [
                                _c("strong", [_vm._v("Amount")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(
                                  " " +
                                    _vm._s(
                                      _vm.planList.data[index]["plan"].price
                                    ) +
                                    "\n                                "
                                )
                              ]),
                              _vm._v(" "),
                              _c("li", [
                                _c("strong", [_vm._v("Currency")]),
                                _vm._v(" "),
                                _c("br"),
                                _vm._v(
                                  " " +
                                    _vm._s(
                                      _vm.planList.data[index]["plan"]
                                        .currencyIsoCode
                                    ) +
                                    "\n                                "
                                )
                              ]),
                              _vm._v(" "),
                              item.trialPeriod == true
                                ? _c("li", [
                                    _c("strong", [_vm._v("Trial")]),
                                    _vm._v(" "),
                                    _c("br"),
                                    _vm._v(
                                      " " +
                                        _vm._s(
                                          _vm.planList[index]["plan"]
                                            .trialDuration
                                        ) +
                                        "\n                                    " +
                                        _vm._s(
                                          _vm.planList[index]["plan"]
                                            .trialDurationUnit
                                        ) +
                                        "\n                                "
                                    )
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              item.trialPeriod == false
                                ? _c("li", [
                                    _c("strong", [_vm._v("Trial")]),
                                    _vm._v(" "),
                                    _c("br"),
                                    _vm._v(
                                      " No Trial Period\n                                "
                                    )
                                  ])
                                : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("hr"),
                            _vm._v(" "),
                            _vm.planList.data[index].active &&
                            _vm.btn_loading !== index
                              ? _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-sm btn-danger",
                                    on: {
                                      click: function($event) {
                                        _vm.ACTIVE(index)
                                        _vm.btn_loading = index
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "Inactive\n                            "
                                    )
                                  ]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            !_vm.planList.data[index].active &&
                            _vm.btn_loading !== index
                              ? _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-sm btn-success",
                                    on: {
                                      click: function($event) {
                                        _vm.ACTIVE(index)
                                        _vm.btn_loading = index
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "Active\n                            "
                                    )
                                  ]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.btn_loading === index
                              ? _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-sm btn-success",
                                    attrs: { disabled: "" }
                                  },
                                  [
                                    _c("i", {
                                      staticClass:
                                        "fa fa-circle-o-notch fa-spin"
                                    }),
                                    _vm._v(
                                      " Loading\n                            "
                                    )
                                  ]
                                )
                              : _vm._e()
                          ])
                        ])
                      ]
                    )
                  }),
                  0
                ),
                _vm._v(" "),
                _vm._m(0)
              ])
            : _c("div", { staticClass: "text-center my-5" }, [
                _c("h1", [_vm._v("There is no plan found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "p-3" }, [
      _c("hr"),
      _vm._v(" "),
      _c("h6", { staticClass: "text-muted" }, [
        _vm._v("If you update the plan, click to inactive and active it again")
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d19d3928", module.exports)
  }
}

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(567)
/* template */
var __vue_template__ = __webpack_require__(568)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/users/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4b595ad5", Component.options)
  } else {
    hotAPI.reload("data-v-4b595ad5", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 567 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "admins-users-manage",
    data: function data() {
        return {
            items: [],
            report_item: []
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.admins.data;
        },
        invoices: function invoices(state) {
            return state.admins.invoices;
        },
        data_search: function data_search(state) {
            return state.admins.data_search;
        },
        button_loading: function button_loading(state) {
            return state.admins.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.admins.spinner_loading;
        },
        invoice_spinner_loading: function invoice_spinner_loading(state) {
            return state.admins.invoice_spinner_loading;
        }
    }),

    created: function created() {
        this.$store.dispatch("GET_ALL_ADMINS");
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_ADMIN", {
                        id: id,
                        key: key
                    });
                }
            });
        }
    }
});

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "users" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "title p-2" }, [
            _vm._v("\n            Administrator Users\n        ")
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 my-3 p-2" }, [
            _c(
              "div",
              { staticClass: "group-btn" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "btn btn-sm btn-warning",
                    attrs: {
                      role: "button",
                      to: { name: "admins-user-create" }
                    }
                  },
                  [_vm._v("Create new account")]
                )
              ],
              1
            )
          ]),
          _vm._v(" "),
          _vm.data.admins !== null
            ? _c("div", [
                _c("hr"),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "table-responsive mt-2",
                    attrs: { id: "users-manage" }
                  },
                  [
                    _c("div", { staticClass: "table table-hover" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c(
                        "tbody",
                        _vm._l(_vm.data.admins, function(item, index) {
                          return _c("tr", { key: index }, [
                            _c("td", [_vm._v(_vm._s(item.id))]),
                            _vm._v(" "),
                            _c("td", [
                              _c("img", {
                                attrs: {
                                  src: item.image,
                                  alt: item.name,
                                  width: "50",
                                  onError:
                                    "this.onerror=null;this.src='/images/avatar.png';"
                                }
                              })
                            ]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.name))]),
                            _vm._v(" "),
                            _c("td", [
                              _vm._v(
                                "\n                                " +
                                  _vm._s(item.email) +
                                  "\n                            "
                              )
                            ]),
                            _vm._v(" "),
                            item.role_id === 3
                              ? _c("td", [
                                  _c(
                                    "span",
                                    { staticClass: "badge badge-primary" },
                                    [_vm._v("Blocked")]
                                  )
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            item.role_id === 1
                              ? _c("td", [
                                  _c(
                                    "span",
                                    { staticClass: "badge badge-success" },
                                    [_vm._v("Admin")]
                                  )
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            item.role_id === 2
                              ? _c("td", [
                                  _c(
                                    "span",
                                    { staticClass: "badge badge-primary" },
                                    [_vm._v("Manager")]
                                  )
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.created_at))]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.updated_at))]),
                            _vm._v(" "),
                            _c("td", [
                              _c(
                                "div",
                                {
                                  staticClass: "btn-group",
                                  attrs: { role: "group" }
                                },
                                [
                                  _c(
                                    "router-link",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-warning btn-sm mr-2",
                                      attrs: {
                                        role: "button",
                                        to: {
                                          name: "admins-user-edit",
                                          params: { id: item.id }
                                        }
                                      }
                                    },
                                    [_vm._v("Edit")]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-danger btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.DELETE(item.id, index)
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                        Delete\n                                    "
                                      )
                                    ]
                                  )
                                ],
                                1
                              )
                            ])
                          ])
                        }),
                        0
                      )
                    ])
                  ]
                )
              ])
            : _c("div", { staticClass: "text-center my-5" }, [
                _c("h1", [_vm._v("There is no users found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("#ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Image")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Email")]),
      _vm._v(" "),
      _c("th", [_vm._v("Permission")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4b595ad5", module.exports)
  }
}

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(570)
/* template */
var __vue_template__ = __webpack_require__(571)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/users/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-136cc6fa", Component.options)
  } else {
    hotAPI.reload("data-v-136cc6fa", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 570 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            password: null
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.admins.data;
        },
        button_loading: function button_loading(state) {
            return state.admins.button_loading;
        }
    }),

    created: function created() {
        this.$store.dispatch("GET_ADMIN_DETAILS", this.$route.params.id);
    },


    methods: {
        changeImage: function changeImage() {
            var _this = this;

            var formData = new FormData();
            var image = document.getElementById("avatar-img-file");
            formData.append("image", image.files[0]);
            formData.append("id", this.$route.params.id);
            axios.post("api/admin/settings/users/image", formData).then(function (res) {
                if (res.data.status === "success") {
                    _this.avatar_image = res.data.image;
                }
            }, function (error) {
                if (error.response.status === 401) {
                    _this.error = 401;
                }
            });
        },
        UPDATE_DETAILS: function UPDATE_DETAILS() {
            var _this2 = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this2.$store.dispatch("UPDATE_ADMIN_DETAILS", {
                        id: _this2.data.details.id,
                        name: _this2.data.details.name,
                        email: _this2.data.details.email,
                        password: _this2.password,
                        permission: _this2.data.details.role_id
                    });
                }
            });
        }
    }
});

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "edit-users" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "title p-2" }, [
            _vm._v("\n            Edit\n        ")
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "container my-5" }, [
            _c(
              "div",
              {
                staticClass: "col-12 col-sm-6 col-lg-4 offset-sm-3 offset-lg-3",
                attrs: { id: "profile-setting" }
              },
              [
                _c("div", { attrs: { id: "avatar-img" } }, [
                  _c("img", {
                    attrs: {
                      src: _vm.data.details.image,
                      alt: "numberone",
                      id: "avatar",
                      width: "100",
                      onError:
                        "this.onerror=null;this.src='/images/avatar.png';"
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "image",
                        expression: "'image'"
                      }
                    ],
                    staticClass: "inputfile",
                    attrs: {
                      type: "file",
                      id: "avatar-img-file",
                      name: "avatar"
                    },
                    on: { change: _vm.changeImage }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "text-center" }, [
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("avatar"),
                          expression: "errors.has('avatar')"
                        }
                      ],
                      staticClass: "is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("avatar")))]
                  )
                ]),
                _vm._v(" "),
                _c("div", { attrs: { id: "profile-details" } }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { staticClass: "col-8 control-label" }, [
                      _vm._v("Name")
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "min:6|max:24",
                            expression: "'min:6|max:24'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.details.name,
                            expression: "data.details.name"
                          }
                        ],
                        staticClass: "form-control",
                        class: {
                          input: true,
                          "input-danger": _vm.errors.has("name")
                        },
                        attrs: {
                          type: "name",
                          name: "name",
                          placeholder: "Name"
                        },
                        domProps: { value: _vm.data.details.name },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.data.details,
                              "name",
                              $event.target.value
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("name"),
                              expression: "errors.has('name')"
                            }
                          ],
                          staticClass: "help is-danger"
                        },
                        [
                          _vm._v(
                            _vm._s(_vm.errors.first("name")) +
                              "\n                            "
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { staticClass: "col-8 control-label" }, [
                      _vm._v("E-mail")
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.details.email,
                            expression: "data.details.email"
                          },
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "max:50",
                            expression: "'max:50'"
                          }
                        ],
                        staticClass: "form-control",
                        class: {
                          input: true,
                          "input-danger": _vm.errors.has("email")
                        },
                        attrs: {
                          type: "email",
                          name: "email",
                          placeholder: "E-mail"
                        },
                        domProps: { value: _vm.data.details.email },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.data.details,
                              "email",
                              $event.target.value
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.errors.has("email"),
                              expression: "errors.has('email')"
                            }
                          ],
                          staticClass: "help is-danger"
                        },
                        [
                          _vm._v(
                            _vm._s(_vm.errors.first("email")) +
                              "\n                            "
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { staticClass: "col-8 control-label" }, [
                      _vm._v("Password")
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c("input", {
                        directives: [
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "min:8",
                            expression: "'min:8'"
                          },
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.password,
                            expression: "password"
                          }
                        ],
                        staticClass: "form-control",
                        class: {
                          input: true,
                          "input-danger": _vm.errors.has("password")
                        },
                        attrs: {
                          type: "password",
                          name: "confirm-field",
                          placeholder: "Password"
                        },
                        domProps: { value: _vm.password },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.password = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _c("label", { staticClass: "col-8 control-label" }, [
                      _vm._v("Permissions")
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-12" }, [
                      _c(
                        "select",
                        {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.data.details.role_id,
                              expression: "data.details.role_id"
                            }
                          ],
                          staticClass: "custom-select",
                          on: {
                            change: function($event) {
                              var $$selectedVal = Array.prototype.filter
                                .call($event.target.options, function(o) {
                                  return o.selected
                                })
                                .map(function(o) {
                                  var val = "_value" in o ? o._value : o.value
                                  return val
                                })
                              _vm.$set(
                                _vm.data.details,
                                "role_id",
                                $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              )
                            }
                          }
                        },
                        [
                          _c("option", { attrs: { value: "1" } }, [
                            _vm._v("Admin")
                          ]),
                          _vm._v(" "),
                          _c("option", { attrs: { value: "2" } }, [
                            _vm._v("Manager")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm.success
                    ? _c("div", { staticClass: "form-group" }, [_vm._m(1)])
                    : _vm._e(),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group" }, [
                    _c("div", { staticClass: "col-12" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-md btn-warning",
                          on: { click: _vm.UPDATE_DETAILS }
                        },
                        [_vm._v("Update\n                            ")]
                      )
                    ])
                  ])
                ])
              ]
            )
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { for: "avatar-img-file" } }, [
      _c("i", {
        staticClass: "fa fa-pencil",
        attrs: { "aria-hidden": "true" }
      }),
      _vm._v("Change image")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("span", { staticClass: "is-success" }, [_vm._v("Successful change.")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-136cc6fa", module.exports)
  }
}

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(573)
/* template */
var __vue_template__ = __webpack_require__(574)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/users/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-084abaec", Component.options)
  } else {
    hotAPI.reload("data-v-084abaec", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 573 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    name: "edit-users-manage",
    data: function data() {
        return {
            name: "",
            email: "",
            password: "",
            password_confirmation: "",
            permission: "",
            success: false,
            error: false
        };
    },


    methods: {
        CREATE: function CREATE() {
            var _this = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.$store.dispatch("CREATE_ADMIN_USER", {
                        name: _this.name,
                        email: _this.email,
                        password: _this.password,
                        password_confirmation: _this.password_confirmation,
                        permission: _this.permission
                    });
                }
            });
        }
    }
});

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "title p-2" }, [
        _vm._v("\n            Create\n        ")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "container" }, [
        _c("div", { staticClass: "col-12 my-3 p-2" }, [
          _c(
            "div",
            { staticClass: "group-btn" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-sm btn-warning",
                  attrs: { role: "button", to: { name: "admins-users-manage" } }
                },
                [_vm._v("Manage")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c("hr")
        ]),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "col-12 col-sm-8 col-lg-4 offset-sm-2 offset-lg-3",
            attrs: { id: "profile-setting" }
          },
          [
            _c("div", { attrs: { id: "profile-details" } }, [
              _c("div", { staticClass: "form-group" }, [
                _c("label", { staticClass: "col-8 control-label" }, [
                  _vm._v("Name")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|min:6|max:24",
                        expression: "'required|min:6|max:24'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.name,
                        expression: "name"
                      }
                    ],
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("name")
                    },
                    attrs: { type: "name", name: "name", placeholder: "Name" },
                    domProps: { value: _vm.name },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.name = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("name"),
                          expression: "errors.has('name')"
                        }
                      ],
                      staticClass: "help is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("name")) + "\n              "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { staticClass: "col-8 control-label" }, [
                  _vm._v("E-mail")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.email,
                        expression: "email"
                      },
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|max:50",
                        expression: "'required|max:50'"
                      }
                    ],
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("email")
                    },
                    attrs: {
                      type: "email",
                      name: "email",
                      placeholder: "E-mail"
                    },
                    domProps: { value: _vm.email },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.email = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("email"),
                          expression: "errors.has('email')"
                        }
                      ],
                      staticClass: "help is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("email")) + "\n              "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { staticClass: "col-8 control-label" }, [
                  _vm._v("Password")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|min:8",
                        expression: "'required|min:8'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.password,
                        expression: "password"
                      }
                    ],
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("password")
                    },
                    attrs: {
                      type: "password",
                      name: "password-field",
                      placeholder: "Password"
                    },
                    domProps: { value: _vm.password },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.password = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("password-field"),
                          expression: "errors.has('password-field')"
                        }
                      ],
                      staticClass: "help is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("password-field")) +
                          "\n              "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { staticClass: "col-12 control-label" }, [
                  _vm._v("Password confirm")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|min:8",
                        expression: "'required|min:8'"
                      },
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.password_confirmation,
                        expression: "password_confirmation"
                      }
                    ],
                    staticClass: "form-control",
                    class: {
                      input: true,
                      "input-danger": _vm.errors.has("password_confirmation")
                    },
                    attrs: {
                      type: "password",
                      name: "confirm-field",
                      placeholder: "Password confirmation"
                    },
                    domProps: { value: _vm.password_confirmation },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.password_confirmation = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("confirm-field"),
                          expression: "errors.has('confirm-field')"
                        }
                      ],
                      staticClass: "help is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("confirm-field")) +
                          "\n              "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { staticClass: "col-8 control-label" }, [
                  _vm._v("Permissions")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "col-12" }, [
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.permission,
                          expression: "permission"
                        },
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required",
                          expression: "'required'"
                        }
                      ],
                      staticClass: "custom-select",
                      attrs: { name: "permission" },
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.permission = $event.target.multiple
                            ? $$selectedVal
                            : $$selectedVal[0]
                        }
                      }
                    },
                    [
                      _c("option", { attrs: { value: "1" } }, [
                        _vm._v("Admin")
                      ]),
                      _vm._v(" "),
                      _c("option", { attrs: { value: "2" } }, [
                        _vm._v("Manager")
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("permission"),
                          expression: "errors.has('permission')"
                        }
                      ],
                      staticClass: "help is-danger"
                    },
                    [
                      _vm._v(
                        _vm._s(_vm.errors.first("permission")) +
                          "\n              "
                      )
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-md btn-warning",
                      on: { click: _vm.CREATE }
                    },
                    [_vm._v("Create\n              ")]
                  )
                ])
              ])
            ])
          ]
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-084abaec", module.exports)
  }
}

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(576)
/* template */
var __vue_template__ = __webpack_require__(577)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/appearance/themes.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5960479c", Component.options)
  } else {
    hotAPI.reload("data-v-5960479c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 576 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);
/* harmony default export */ __webpack_exports__["default"] = ({
    name: "theme",
    data: function data() {
        return {
            data: {},
            button_loading: false,
            delete_loading: false
        };
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("api/admin/settings/theme").then(function (res) {
            _this.data = res.data;
        }, function (error) {
            alertify.logPosition("top right");
            alertify.error("Error no data");
        });
    },

    methods: {
        UPLOAD: function UPLOAD() {
            var _this2 = this;

            alertify.logPosition("top right");
            alertify.log("It will take some time");
            var formData = new FormData();
            var zip = document.getElementById("theme-zip").files[0];
            formData.append("theme-zip", zip);
            this.$validator.validateAll().then(function (result) {
                axios.post("api/admin/settings/theme/upload", formData).then(function (res) {
                    if (res.data.status === "success") {
                        alertify.logPosition("top right");
                        alertify.success("Successful upload");
                        _this2.data.push(res.data[0]);
                    } else {
                        alertify.logPosition("top right");
                        alertify.error(res.data.message);
                    }
                }, function (error) {
                    alertify.logPosition("top right");
                    alertify.error("There is error in back-end");
                    _this2.button_loading = false;
                });
            });
        },
        SET: function SET(id) {
            var _this3 = this;

            this.button_loading = id;
            axios.post("api/admin/settings/theme/set", {
                id: id
            }).then(function (res) {
                if (res.data.status === "success") {
                    alertify.logPosition("top right");
                    alertify.success("Successful change");
                    _this3.data = res.data[0];
                    _this3.button_loading = false;
                } else {
                    alertify.logPosition("top right");
                    alertify.error(res.data.message);
                    _this3.button_loading = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("There is error in back-end");
                _this3.button_loading = false;
            });
        },
        DELETE: function DELETE(id, key) {
            var _this4 = this;

            this.delete_loading = id;
            axios.delete("api/admin/settings/theme/delete/" + id).then(function (res) {
                if (res.data.status === "success") {
                    alertify.logPosition("top right");
                    alertify.success("Successful delete");
                    _this4.data.splice(key, 1);
                    _this4.delete_loading = false;
                } else {
                    alertify.logPosition("top right");
                    alertify.error(res.data.message);
                    _this4.delete_loading = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("There is error in back-end");
                _this4.delete_loading = false;
            });
        }
    }
});

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "k1_manage_table" }, [
    _c("div", { staticClass: "container theme" }, [
      _c("div", { staticClass: "col-12 my-3 p-2" }, [
        _c("h5", { staticClass: "title p-2" }, [_vm._v("Theme Manage")]),
        _vm._v(" "),
        _c("div", { staticClass: "m-2", attrs: { id: "manage-panel" } }, [
          _c("ul", { staticClass: "nav nav-tabs" }, [
            _c(
              "li",
              { staticClass: "nav-item" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "nav-link btn btn-sm btn-warning",
                    attrs: { role: "button", to: { name: "themes" } }
                  },
                  [_vm._v("Themes")]
                )
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "li",
              { staticClass: "nav-item" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "nav-link btn btn-sm btn-warning",
                    attrs: { role: "button", to: { name: "footer" } }
                  },
                  [_vm._v("Footer")]
                )
              ],
              1
            )
          ])
        ]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("div", { staticClass: "col-12" }, [
          _c(
            "div",
            { staticClass: "row" },
            [
              _vm._l(_vm.data, function(item, index) {
                return _c(
                  "div",
                  {
                    key: index,
                    staticClass: "col-12 col-sm-4 col-lg-4 theme-box"
                  },
                  [
                    _c("img", {
                      attrs: {
                        src: item.thumbnail,
                        alt: item.name,
                        width: "100%"
                      }
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "title" }, [
                      _c("b", { staticClass: "p-1" }, [
                        _vm._v(_vm._s(item.name))
                      ])
                    ]),
                    _vm._v(" "),
                    _c("hr"),
                    _vm._v(" "),
                    _c("div", { staticClass: "control mt-1" }, [
                      _c("div", { staticClass: "group-btn" }, [
                        !_vm.button_loading && item.status === 0
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                on: {
                                  click: function($event) {
                                    return _vm.SET(item.id)
                                  }
                                }
                              },
                              [_vm._v("Set")]
                            )
                          : _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-success",
                                attrs: { disabled: "" }
                              },
                              [_vm._v("Active")]
                            ),
                        _vm._v(" "),
                        _vm.button_loading === item.id
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-warning",
                                attrs: { disabled: "" }
                              },
                              [
                                _c("i", { attrs: { id: "btn-progress" } }),
                                _vm._v(" Loading")
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.button_loading &&
                        item.name !== "default" &&
                        item.status !== 1
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-danger",
                                on: {
                                  click: function($event) {
                                    return _vm.DELETE(item.id, index)
                                  }
                                }
                              },
                              [_vm._v("Delete")]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.delete_loading === item.id
                          ? _c(
                              "button",
                              {
                                staticClass: "btn btn-md btn-danger",
                                attrs: { disabled: "" }
                              },
                              [
                                _c("i", { attrs: { id: "btn-progress" } }),
                                _vm._v(" Loading")
                              ]
                            )
                          : _vm._e()
                      ])
                    ])
                  ]
                )
              }),
              _vm._v(" "),
              _c("div", { staticClass: "col-12 col-sm-4 col-lg-4" }, [
                _c("div", { staticClass: "col-12 add-theme-box" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value:
                          "mimes: application/zip, application/octet-stream",
                        expression:
                          "'mimes: application/zip, application/octet-stream'"
                      }
                    ],
                    staticClass: "inputfile",
                    attrs: { type: "file", name: "theme-zip", id: "theme-zip" },
                    on: { change: _vm.UPLOAD }
                  }),
                  _vm._v(" "),
                  _vm._m(0)
                ]),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("theme-zip"),
                        expression: "errors.has('theme-zip')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("theme-zip")))]
                )
              ])
            ],
            2
          )
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { for: "theme-zip" } }, [
      _c("i", {
        staticClass: "fa fa-plus-circle fa-5x",
        attrs: { "aria-hidden": "true" }
      })
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5960479c", module.exports)
  }
}

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(579)
/* template */
var __vue_template__ = __webpack_require__(584)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/appearance/footer.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e7772e26", Component.options)
  } else {
    hotAPI.reload("data-v-e7772e26", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 579 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue2_editor__ = __webpack_require__(219);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    name: "footer",
    data: function data() {
        return {
            facebook: "",
            instagram: "",
            twitter: "",
            about: "",
            terms: "",
            privacy: "",
            button_loading: false,
            delete_loading: false
        };
    },

    components: {
        VueEditor: __WEBPACK_IMPORTED_MODULE_0_vue2_editor__["VueEditor"]
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/get/settings/appearance/footer").then(function (resposne) {
            if (resposne.data.data !== null) {
                _this.facebook = resposne.data.data.social_facebook;
                _this.instagram = resposne.data.data.social_twitter;
                _this.twitter = resposne.data.data.social_instagram;
                _this.about = resposne.data.data.about;
                _this.terms = resposne.data.data.terms;
                _this.privacy = resposne.data.data.privacy;
            }
        });
    },

    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            this.button_loading = true;
            axios.post("/api/admin/update/settings/appearance/footer", {
                facebook: this.facebook,
                instagram: this.instagram,
                twitter: this.twitter,
                about: this.about,
                terms: this.terms,
                privacy: this.privacy
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this2.button_loading = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
                _this2.button_loading = false;
            });
        }
    }
});

/***/ }),
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "k1_manage_table" }, [
    _c("div", { staticClass: "container theme" }, [
      _c("div", { staticClass: "col-12 my-3 p-2" }, [
        _c("h5", { staticClass: "title p-2" }, [_vm._v("Footer Manage")]),
        _vm._v(" "),
        _c("div", { staticClass: "m-2", attrs: { id: "manage-panel" } }, [
          _c("ul", { staticClass: "nav nav-tabs" }, [
            _c(
              "li",
              { staticClass: "nav-item" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "nav-link btn btn-sm btn-warning",
                    attrs: { role: "button", to: { name: "themes" } }
                  },
                  [_vm._v("Themes")]
                )
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "li",
              { staticClass: "nav-item" },
              [
                _c(
                  "router-link",
                  {
                    staticClass: "nav-link btn btn-sm btn-warning",
                    attrs: { role: "button", to: { name: "footer" } }
                  },
                  [_vm._v("Footer")]
                )
              ],
              1
            )
          ])
        ]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("div", { staticClass: "col-12 col-md-8" }, [
          _c("div", { staticClass: "form-group" }, [
            _c("label", { attrs: { for: "facebook" } }, [
              _vm._v("Social Facebook")
            ]),
            _vm._v(" "),
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.facebook,
                  expression: "facebook"
                }
              ],
              staticClass: "form-control",
              attrs: {
                type: "text",
                id: "facebook",
                placeholder: "Social Facebook"
              },
              domProps: { value: _vm.facebook },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.facebook = $event.target.value
                }
              }
            })
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "form-group" }, [
            _c("label", { attrs: { for: "instagram" } }, [
              _vm._v("Social Instagram")
            ]),
            _vm._v(" "),
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.instagram,
                  expression: "instagram"
                }
              ],
              staticClass: "form-control",
              attrs: {
                type: "text",
                id: "instagram",
                placeholder: "Social Instagram"
              },
              domProps: { value: _vm.instagram },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.instagram = $event.target.value
                }
              }
            })
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "form-group" }, [
            _c("label", { attrs: { for: "twitter" } }, [
              _vm._v("Social Twitter")
            ]),
            _vm._v(" "),
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.twitter,
                  expression: "twitter"
                }
              ],
              staticClass: "form-control",
              attrs: {
                type: "text",
                id: "twitter",
                placeholder: "Social Twitter"
              },
              domProps: { value: _vm.twitter },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.twitter = $event.target.value
                }
              }
            })
          ]),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "form-group" },
            [
              _c("label", { attrs: { for: "about" } }, [_vm._v("About Us")]),
              _vm._v(" "),
              _c("vue-editor", {
                attrs: { id: "about" },
                model: {
                  value: _vm.about,
                  callback: function($$v) {
                    _vm.about = $$v
                  },
                  expression: "about"
                }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "form-group" },
            [
              _c("label", { attrs: { for: "terms" } }, [
                _vm._v("Terms Of Service ")
              ]),
              _vm._v(" "),
              _c("vue-editor", {
                attrs: { id: "terms" },
                model: {
                  value: _vm.terms,
                  callback: function($$v) {
                    _vm.terms = $$v
                  },
                  expression: "terms"
                }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "form-group" },
            [
              _c("label", { attrs: { for: "privacy" } }, [
                _vm._v("Privacy Policy ")
              ]),
              _vm._v(" "),
              _c("vue-editor", {
                attrs: { id: "privacy" },
                model: {
                  value: _vm.privacy,
                  callback: function($$v) {
                    _vm.privacy = $$v
                  },
                  expression: "privacy"
                }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c("div", { staticClass: "form-group" }, [
            !_vm.button_loading
              ? _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    on: { click: _vm.UPDATE }
                  },
                  [_vm._v("Update")]
                )
              : _vm._e(),
            _vm._v(" "),
            _vm.button_loading
              ? _c("button", {
                  staticClass: "btn btn-md btn-danger",
                  attrs: { disabled: "" }
                })
              : _vm._e()
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-e7772e26", module.exports)
  }
}

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(586)
/* template */
var __vue_template__ = __webpack_require__(587)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/tmdb/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-286bf678", Component.options)
  } else {
    hotAPI.reload("data-v-286bf678", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 586 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    name: "tmdb",
    data: function data() {
        return {
            api: "",
            language: "",
            button_loading: false,
            delete_loading: false,
            spinner_loading: true,
            language_list: ["ar-AE", "ar-SA", "bg-BG", "bn-BD", "ca-ES", "ch-GU", "cs-CZ", "da-DK", "de-DE", "el-GR", "en-US", "eo-EO", "es-ES", "es-MX", "eu-ES", "fa-IR", "fi-FI", "fr-CA", "fr-FR", "he-IL", "hi-IN", "hu-HU", "id-ID", "it-IT", "ja-JP", "ka-GE", "kn-IN", "ko-KR", "lt-LT", "ml-IN", "nb-NO", "nl-NL", "no-NO", "pl-PL", "pt-BR", "pt-PT", "ro-RO", "ru-RU", "sk-SK", "sl-SI", "sr-RS", "sv-SE", "ta-IN", "te-IN", "th-TH", "tr-TR", "uk-UA", "vi-VN", "zh-CN", "zh-TW"]
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    mounted: function mounted() {
        var _this = this;

        axios.get("/api/admin/get/settings/tmdb").then(function (resposne) {
            if (resposne.data.data !== null) {
                _this.api = resposne.data.data.api;
                _this.language = resposne.data.data.language;
                _this.spinner_loading = false;
            }
        });
    },

    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this2.button_loading = true;
                    axios.post("/api/admin/update/settings/tmdb", {
                        api: _this2.api,
                        language: _this2.language
                    }).then(function (response) {
                        if (response.status === 200) {
                            alertify.logPosition("top right");
                            alertify.success(response.data.message);
                            _this2.button_loading = false;
                        }
                    }, function (error) {
                        alertify.logPosition("top right");
                        alertify.error(error.response.data.message);
                        _this2.button_loading = false;
                    });
                }
            });
        }
    }
});

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "tmdb" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "col-12 my-3 p-2" }, [
            _c("h5", { staticClass: "title p-2" }, [_vm._v("TMDB Manage")]),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-md-8" }, [
              _c("div", { staticClass: "form-group" }, [
                _c("label", [_vm._v("API")]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.api,
                      expression: "api"
                    },
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "required|max:32",
                      expression: "'required|max:32'"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { type: "text", name: "api", placeholder: "API" },
                  domProps: { value: _vm.api },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.api = $event.target.value
                    }
                  }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("api"),
                        expression: "errors.has('api')"
                      }
                    ],
                    staticClass: "is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("api")))]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", [_vm._v("Language")]),
                _vm._v(" "),
                _c(
                  "select",
                  {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.language,
                        expression: "language"
                      },
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|max:8",
                        expression: "'required|max:8'"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { name: "language" },
                    on: {
                      change: function($event) {
                        var $$selectedVal = Array.prototype.filter
                          .call($event.target.options, function(o) {
                            return o.selected
                          })
                          .map(function(o) {
                            var val = "_value" in o ? o._value : o.value
                            return val
                          })
                        _vm.language = $event.target.multiple
                          ? $$selectedVal
                          : $$selectedVal[0]
                      }
                    }
                  },
                  _vm._l(_vm.language_list, function(item, index) {
                    return _c(
                      "option",
                      { key: index, domProps: { value: item } },
                      [_vm._v(_vm._s(item))]
                    )
                  }),
                  0
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("language"),
                        expression: "errors.has('language')"
                      }
                    ],
                    staticClass: "is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("language")))]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                !_vm.button_loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: { click: _vm.UPDATE }
                      },
                      [_vm._v("Update")]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.button_loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", { attrs: { id: "btn-progress" } }),
                        _vm._v(
                          "\n                            Loading\n                        "
                        )
                      ]
                    )
                  : _vm._e()
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-286bf678", module.exports)
  }
}

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(589)
/* template */
var __vue_template__ = __webpack_require__(590)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/settings/transcoder-video/watermark.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4345a049", Component.options)
  } else {
    hotAPI.reload("data-v-4345a049", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 589 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    name: "transcoder_video",
    data: function data() {
        return {
            presets: "",
            segment_duration: "",
            image: false,
            button_loading: false,
            delete_loading: false,
            spinner_loading: true
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    created: function created() {
        var _this = this;

        axios.get("/api/admin/get/settings/transcoder").then(function (resposne) {
            if (resposne.status === 200) {
                _this.presets = resposne.data.data.watermark_position;
                _this.segment_duration = resposne.data.data.segment_duration;
                if (resposne.data.data.watermark_url !== null) {
                    _this.image = resposne.data.data.watermark_url;
                }
                _this.spinner_loading = false;
            }
        });
    },

    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            this.button_loading = true;

            var formData = new FormData();
            var watermark = document.querySelector("#watermark");
            formData.append("watermark", watermark.files[0]);
            formData.append("watermark_position", this.presets);
            formData.append("segment_duration", this.segment_duration);

            axios.post("/api/admin/update/settings/transcoder/watermark", formData).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this2.button_loading = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
                _this2.button_loading = false;
            });
        },
        REMOVE: function REMOVE() {
            axios.get("/api/admin/remove/settings/transcoder/watermark").then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "transcoding" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "col-12 my-3 p-2" }, [
            _c("h5", { staticClass: "title p-2" }, [
              _vm._v("HLS Segment & Watermark ")
            ]),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _c("div", { staticClass: "col-12 col-md-8" }, [
              _c("div", { staticClass: "form-group" }, [
                _vm._m(0),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-12" }, [
                  _c("input", {
                    directives: [
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "image",
                        expression: "'image'"
                      }
                    ],
                    staticClass: "inputfile",
                    attrs: { type: "file", id: "watermark", name: "watermark" },
                    on: {
                      change: function($event) {
                        return _vm.readImage("watermark", "watermarkFileImage")
                      }
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _vm.image
                    ? _c("img", {
                        attrs: {
                          src: "/storage/watermark/" + _vm.image,
                          id: "watermarkFileImage",
                          width: "200"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.image
                    ? _c("img", {
                        staticStyle: { display: "none" },
                        attrs: {
                          src: "",
                          id: "watermarkFileImage",
                          width: "200"
                        }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.errors.has("backdrop"),
                          expression: "errors.has('backdrop')"
                        }
                      ],
                      staticClass: " is-danger"
                    },
                    [_vm._v(_vm._s(_vm.errors.first("backdrop")))]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _vm._m(2),
                _vm._v(" "),
                _c("div", { staticClass: "col-12 col-sm-12" }, [
                  _c(
                    "select",
                    {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.presets,
                          expression: "presets"
                        }
                      ],
                      staticClass: "form-control",
                      on: {
                        change: function($event) {
                          var $$selectedVal = Array.prototype.filter
                            .call($event.target.options, function(o) {
                              return o.selected
                            })
                            .map(function(o) {
                              var val = "_value" in o ? o._value : o.value
                              return val
                            })
                          _vm.presets = $event.target.multiple
                            ? $$selectedVal
                            : $$selectedVal[0]
                        }
                      }
                    },
                    [
                      _c("option", { attrs: { value: "TopLeft" } }, [
                        _vm._v("TopLeft")
                      ]),
                      _vm._v(" "),
                      _c("option", { attrs: { value: "TopRight" } }, [
                        _vm._v("TopRight")
                      ]),
                      _vm._v(" "),
                      _c("option", { attrs: { value: "BottomLeft" } }, [
                        _vm._v("BottomLeft")
                      ]),
                      _vm._v(" "),
                      _c("option", { attrs: { value: "BottomRight" } }, [
                        _vm._v("BottomRight")
                      ])
                    ]
                  )
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12 col-sm-12" }, [
                  _c("label", { attrs: { for: "segment_duration" } }, [
                    _vm._v("Segment Duration")
                  ]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.segment_duration,
                        expression: "segment_duration"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      id: "segment_duration",
                      placeholder: "Segment Duration"
                    },
                    domProps: { value: _vm.segment_duration },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.segment_duration = $event.target.value
                      }
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("div", { staticClass: "col-12 col-sm-12" }, [
                  !_vm.button_loading
                    ? _c(
                        "button",
                        {
                          staticClass: "btn btn-md btn-warning",
                          on: { click: _vm.UPDATE }
                        },
                        [_vm._v("Update\n                            ")]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.button_loading
                    ? _c(
                        "button",
                        {
                          staticClass: "btn btn-md btn-warning",
                          attrs: { disabled: "" }
                        },
                        [
                          _c("i", { attrs: { id: "btn-progress" } }),
                          _vm._v(" Loading\n                            ")
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-md btn-danger",
                      on: { click: _vm.REMOVE }
                    },
                    [_vm._v("Remove watermark")]
                  )
                ])
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Watermark")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "watermarkLabel", for: "watermark" } }, [
      _vm._v("Choose a backdrop\n                                "),
      _c("br")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12 col-sm-4" }, [
      _c("label", [_vm._v("Watermark position")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4345a049", module.exports)
  }
}

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(592)
/* template */
var __vue_template__ = __webpack_require__(593)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/support/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2f73b4d8", Component.options)
  } else {
    hotAPI.reload("data-v-2f73b4d8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 592 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
  name: "support-manage",
  data: function data() {
    return {
      query: null
    };
  },


  components: {
    Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
  },

  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
    data: function data(state) {
      return state.support.data;
    },
    search_data: function search_data(state) {
      return state.support.search_data;
    },
    button_loading: function button_loading(state) {
      return state.support.button_loading;
    },
    spinner_loading: function spinner_loading(state) {
      return state.support.spinner_loading;
    }
  }),

  watch: {
    query: function query(v) {
      if (v.length === 0) {
        this.$store.commit("CLEAR_SUPPORT_SEARCH_DATA");
      } else {
        this.$store.dispatch("GET_SUPPORT_REQUEST_SEARCH", this.query);
      }
    }
  },

  created: function created() {
    this.$store.dispatch("GET_ALL_SUPPORT_REQUEST");
  },


  methods: {
    PAGINATION: function PAGINATION(path_url) {
      this.$store.dispatch("GET_ALL_SUPPORT_REQUEST_BY_PAGINATION", path_url);
    },
    DELETE: function DELETE(id, key) {
      var _this = this;

      swal({
        title: "Are you sure to delete ?",
        icon: "warning",
        buttons: true,
        dangerMode: true
      }).then(function (willDelete) {
        if (willDelete) {
          _this.$store.dispatch("DELETE_SPPORT_REQUEST", {
            id: id,
            key: key
          });
        }
      });
    },
    ALL: function ALL() {
      this.$store.dispatch("GET_ALL_SUPPORT_REQUEST");
    },
    OPEN: function OPEN() {
      this.$store.dispatch("GET_OPEN_SUPPORT_REQUEST");
    },
    CLOSE: function CLOSE() {
      this.$store.dispatch("GET_CLOSED_SUPPORT_REQUEST");
    }
  }
});

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Support")]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 row" }, [
            _c("div", { staticClass: "col-6" }, [
              _c("div", { staticClass: "group-btn" }, [
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-warning",
                    on: { click: _vm.ALL }
                  },
                  [_vm._v("All")]
                ),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-success",
                    on: { click: _vm.OPEN }
                  },
                  [_vm._v("Open")]
                ),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-danger",
                    on: { click: _vm.CLOSE }
                  },
                  [_vm._v("Close")]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-6 pull-right" }, [
              _c(
                "div",
                { staticClass: "pull-right", attrs: { id: "search" } },
                [
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.query,
                        expression: "query"
                      }
                    ],
                    staticClass: "form-control mr-sm-2",
                    attrs: { type: "text", placeholder: "Search" },
                    domProps: { value: _vm.query },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.query = $event.target.value
                      }
                    }
                  })
                ]
              )
            ])
          ]),
          _vm._v(" "),
          _vm.data.data !== null && _vm.search_data === null
            ? _c("div", [
                _c("div", { staticClass: "table-responsive mt-2" }, [
                  _c("div", { staticClass: "table table-hover" }, [
                    _vm._m(0),
                    _vm._v(" "),
                    _c(
                      "tbody",
                      _vm._l(_vm.data.data, function(item, index) {
                        return _c("tr", { key: index }, [
                          _c("td", [
                            item.readit === 1 && item.last_reply === "client"
                              ? _c(
                                  "span",
                                  {
                                    staticClass:
                                      "badge badge-warning new-message"
                                  },
                                  [_vm._v("New")]
                                )
                              : _vm._e(),
                            _vm._v(
                              "\n                  " +
                                _vm._s(item.request_id) +
                                "\n                "
                            )
                          ]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.subject))]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.from))]),
                          _vm._v(" "),
                          _c("td", [
                            item.status === 1
                              ? _c(
                                  "span",
                                  { staticClass: "badge badge-success" },
                                  [_vm._v("Open")]
                                )
                              : _c(
                                  "span",
                                  { staticClass: "badge badge-danger" },
                                  [_vm._v("Close")]
                                )
                          ]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.created_at))]),
                          _vm._v(" "),
                          _c("td", [
                            _c(
                              "div",
                              {
                                staticClass: "btn-group",
                                attrs: { role: "group" }
                              },
                              [
                                _c(
                                  "router-link",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    attrs: {
                                      role: "button",
                                      to: {
                                        name: "support-request",
                                        params: { id: item.id }
                                      }
                                    }
                                  },
                                  [_vm._v("Show\n                    ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-danger btn-sm mr-2",
                                    on: {
                                      click: function($event) {
                                        return _vm.DELETE(item.id, index)
                                      }
                                    }
                                  },
                                  [_vm._v("Delete\n                    ")]
                                )
                              ],
                              1
                            )
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c(
                  "nav",
                  {
                    staticClass: "m-4 p-1",
                    attrs: { "aria-label": "pagination" }
                  },
                  [
                    _c("ul", { staticClass: "pagination " }, [
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/support/request"
                                  )
                                }
                              }
                            },
                            [_vm._v("Begin")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: { disabled: _vm.data.prev_page_url === null },
                          attrs: { id: "prev" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(_vm.data.prev_page_url)
                                }
                              }
                            },
                            [_vm._v("Previous")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("li", { staticClass: "page-item" }, [
                        _c("a", { staticClass: "page-link" }, [
                          _vm._v(
                            _vm._s(_vm.data.current_page) +
                              "/" +
                              _vm._s(_vm.data.last_page)
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: { disabled: _vm.data.next_page_url === null },
                          attrs: { id: "next" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(_vm.data.next_page_url)
                                }
                              }
                            },
                            [_vm._v("Next")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/support/request?page=" +
                                      _vm.data.last_page
                                  )
                                }
                              }
                            },
                            [_vm._v("End")]
                          )
                        ]
                      )
                    ])
                  ]
                )
              ])
            : _vm._e(),
          _vm._v(" "),
          _vm.data.data !== null && _vm.search_data !== null
            ? _c("div", [
                _c("div", { staticClass: "table-responsive mt-2" }, [
                  _c("div", { staticClass: "table table-hover" }, [
                    _vm._m(1),
                    _vm._v(" "),
                    _c(
                      "tbody",
                      _vm._l(_vm.search_data.data, function(item, index) {
                        return _c("tr", { key: index }, [
                          _c("td", [
                            item.readit === 1 && item.last_reply === "client"
                              ? _c(
                                  "span",
                                  {
                                    staticClass:
                                      "badge badge-warning new-message"
                                  },
                                  [_vm._v("New")]
                                )
                              : _vm._e(),
                            _vm._v(
                              "\n                  " +
                                _vm._s(item.request_id) +
                                "\n                "
                            )
                          ]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.subject))]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.from))]),
                          _vm._v(" "),
                          _c("td", [
                            item.status === 1
                              ? _c(
                                  "span",
                                  { staticClass: "badge badge-success" },
                                  [_vm._v("Open")]
                                )
                              : _c(
                                  "span",
                                  { staticClass: "badge badge-danger" },
                                  [_vm._v("Close")]
                                )
                          ]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.created_at))]),
                          _vm._v(" "),
                          _c("td", [
                            _c(
                              "div",
                              {
                                staticClass: "btn-group",
                                attrs: { role: "group" }
                              },
                              [
                                _c(
                                  "router-link",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-warning btn-sm mr-2",
                                    attrs: {
                                      role: "button",
                                      to: {
                                        name: "support-request",
                                        params: { id: item.id }
                                      }
                                    }
                                  },
                                  [_vm._v("Show\n                    ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-danger btn-sm mr-2",
                                    on: {
                                      click: function($event) {
                                        return _vm.DELETE(item.id, index)
                                      }
                                    }
                                  },
                                  [_vm._v("Delete\n                    ")]
                                )
                              ],
                              1
                            )
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ]),
                _vm._v(" "),
                _c(
                  "nav",
                  {
                    staticClass: "m-4 p-1",
                    attrs: { "aria-label": "pagination" }
                  },
                  [
                    _c("ul", { staticClass: "pagination " }, [
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/support/request"
                                  )
                                }
                              }
                            },
                            [_vm._v("Begin")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.search_data.prev_page_url === null
                          },
                          attrs: { id: "prev" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.search_data.prev_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Previous")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("li", { staticClass: "page-item" }, [
                        _c("a", { staticClass: "page-link" }, [
                          _vm._v(
                            _vm._s(_vm.search_data.current_page) +
                              "/" +
                              _vm._s(_vm.search_data.last_page)
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c(
                        "li",
                        {
                          staticClass: "page-item",
                          class: {
                            disabled: _vm.search_data.next_page_url === null
                          },
                          attrs: { id: "next" }
                        },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    _vm.search_data.next_page_url
                                  )
                                }
                              }
                            },
                            [_vm._v("Next")]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "li",
                        { staticClass: "page-item", attrs: { id: "end" } },
                        [
                          _c(
                            "a",
                            {
                              staticClass: "page-link",
                              on: {
                                click: function($event) {
                                  return _vm.PAGINATION(
                                    "/api/admin/get/support/request?page=" +
                                      _vm.search_data.last_page
                                  )
                                }
                              }
                            },
                            [_vm._v("End")]
                          )
                        ]
                      )
                    ])
                  ]
                )
              ])
            : _vm._e(),
          _vm._v(" "),
          _vm.data.data === null
            ? _c("div", { staticClass: "text-center" }, [
                _c("h4", [_vm._v("No result were found")])
              ])
            : _vm._e()
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Request ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Subject")]),
      _vm._v(" "),
      _c("th", [_vm._v("From")]),
      _vm._v(" "),
      _c("th", [_vm._v("Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Request ID")]),
      _vm._v(" "),
      _c("th", [_vm._v("Subject")]),
      _vm._v(" "),
      _c("th", [_vm._v("From")]),
      _vm._v(" "),
      _c("th", [_vm._v("Status")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2f73b4d8", module.exports)
  }
}

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(595)
/* template */
var __vue_template__ = __webpack_require__(596)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/support/request.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-04d611ac", Component.options)
  } else {
    hotAPI.reload("data-v-04d611ac", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 595 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            subject: "",
            details: "",
            reply: ""
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        spinner_loading: function spinner_loading(state) {
            return state.support.spinner_loading;
        },
        button_loading: function button_loading(state) {
            return state.support.button_loading;
        },
        request_data: function request_data(state) {
            return state.support.support_request;
        }
    }),

    mounted: function mounted() {
        this.$store.dispatch("GET_SUPPORT_REQUEST", {
            id: this.$route.params.id
        });
    },


    methods: {
        SUBMIT_REPLY: function SUBMIT_REPLY() {
            var _this = this;

            this.$validator.validateAll().then(function (result) {
                if (result) {
                    _this.$store.dispatch("SUBMIT_SUPPORT_REPLY", {
                        reply: _this.reply,
                        id: _this.$route.params.id
                    });
                }
            });
        },
        UPDATE_STATUS: function UPDATE_STATUS() {

            this.$store.dispatch("UPDATE_SUPPORT_STATUS", {
                id: this.$route.params.id
            });
        }
    }
});

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "support-request" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "support-request" }, [
          _c("div", { staticClass: "row" }, [
            _vm.request_data.data
              ? _c(
                  "div",
                  { staticClass: "col-12" },
                  [
                    _c(
                      "router-link",
                      {
                        staticClass: "exit-button",
                        attrs: { to: { name: "support-manage" } }
                      },
                      [
                        _c(
                          "svg",
                          {
                            staticClass: "sm-exit-svg",
                            staticStyle: {
                              "enable-background": "new 0 0 511.999 511.999"
                            },
                            attrs: {
                              version: "1.1",
                              width: "100%",
                              xmlns: "http://www.w3.org/2000/svg",
                              "xmlns:xlink": "http://www.w3.org/1999/xlink",
                              x: "0px",
                              y: "0px",
                              viewBox: "0 0 511.999 511.999",
                              "xml:space": "preserve"
                            }
                          },
                          [
                            _c("circle", {
                              staticStyle: { fill: "#E21B1B" },
                              attrs: {
                                cx: "255.999",
                                cy: "255.999",
                                r: "255.999"
                              }
                            }),
                            _vm._v(" "),
                            _c("g", [
                              _c("rect", {
                                staticStyle: { fill: "#FFFFFF" },
                                attrs: {
                                  x: "244.002",
                                  y: "120.008",
                                  transform:
                                    "matrix(0.7071 -0.7071 0.7071 0.7071 -106.0397 256.0022)",
                                  width: "24",
                                  height: "271.988"
                                }
                              }),
                              _vm._v(" "),
                              _c("rect", {
                                staticStyle: { fill: "#FFFFFF" },
                                attrs: {
                                  x: "120.008",
                                  y: "244.007",
                                  transform:
                                    "matrix(0.7071 -0.7071 0.7071 0.7071 -106.0428 256.0035)",
                                  width: "271.988",
                                  height: "24"
                                }
                              })
                            ])
                          ]
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass:
                          "col-12 col-sm-8 col-lg-8 offset-sm-2 p-sm-3 mt-5 profile-edit h-100"
                      },
                      [
                        _c("div", { staticClass: "row" }, [
                          _c("div", { staticClass: "col-8 text-left" }, [
                            _c("h4", [
                              _vm._v(
                                _vm._s(_vm.request_data.data.request.subject) +
                                  " "
                              )
                            ]),
                            _vm._v(" "),
                            _c("small", [
                              _vm._v(
                                _vm._s(
                                  _vm.request_data.data.request.request_id
                                ) + " "
                              )
                            ])
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "col-4 text-right" }, [
                            _vm.request_data.data.request.status === 1 &&
                            !_vm.button_loading
                              ? _c(
                                  "span",
                                  {
                                    staticClass: "re-open",
                                    on: { click: _vm.UPDATE_STATUS }
                                  },
                                  [_vm._v("Open")]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.request_data.data.request.status === 0 &&
                            !_vm.button_loading
                              ? _c(
                                  "span",
                                  {
                                    staticClass: "re-close",
                                    on: { click: _vm.UPDATE_STATUS }
                                  },
                                  [_vm._v("Close")]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.button_loading === "status"
                              ? _c("span", { staticClass: "re-close" }, [
                                  _vm._v("Loading")
                                ])
                              : _vm._e()
                          ])
                        ]),
                        _vm._v(" "),
                        _c("hr"),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "settings__message-box" },
                          [
                            _c("div", { staticClass: "col-12" }, [
                              _c("div", { staticClass: "col-12 mt-5 user" }, [
                                _vm._m(0),
                                _vm._v(" "),
                                _c("div", { staticClass: "col-10 col-md-8" }, [
                                  _c("div", { staticClass: "user-message" }, [
                                    _c("p", { staticClass: "mt-1" }, [
                                      _vm._v(
                                        _vm._s(
                                          _vm.request_data.data.request.details
                                        )
                                      )
                                    ])
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "date" }, [
                                    _c("p", { staticClass: "mt-1" }, [
                                      _vm._v(
                                        _vm._s(
                                          _vm.request_data.data.request
                                            .created_at
                                        )
                                      )
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.request_data.data.reply, function(
                              item,
                              index
                            ) {
                              return _c(
                                "div",
                                { key: index, staticClass: "col-12 mt-5" },
                                [
                                  item.from === "client"
                                    ? _c(
                                        "div",
                                        { staticClass: "col-12 mt-5 user" },
                                        [
                                          _vm._m(1, true),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            { staticClass: "col-10 col-md-8" },
                                            [
                                              _c(
                                                "div",
                                                { staticClass: "user-message" },
                                                [
                                                  _c(
                                                    "p",
                                                    { staticClass: "mt-1" },
                                                    [_vm._v(_vm._s(item.reply))]
                                                  )
                                                ]
                                              ),
                                              _vm._v(" "),
                                              _c(
                                                "div",
                                                { staticClass: "date" },
                                                [
                                                  _c("p", [
                                                    _vm._v(
                                                      _vm._s(item.created_at)
                                                    )
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    : _c(
                                        "div",
                                        { staticClass: "support col-12 mt-5" },
                                        [
                                          _c(
                                            "div",
                                            {
                                              staticClass:
                                                "float-left profile-image text-center"
                                            },
                                            [
                                              _c("img", {
                                                attrs: {
                                                  src:
                                                    "/themes/default/img/support.png",
                                                  alt: "profile",
                                                  width: "50px"
                                                }
                                              }),
                                              _vm._v(" "),
                                              _c("p", { staticClass: "mt-1" }, [
                                                _vm._v(_vm._s(item.from))
                                              ])
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            { staticClass: "col-10 col-md-8" },
                                            [
                                              _c(
                                                "div",
                                                {
                                                  staticClass: "support-message"
                                                },
                                                [
                                                  _c(
                                                    "p",
                                                    { staticClass: "mt-1" },
                                                    [_vm._v(_vm._s(item.reply))]
                                                  )
                                                ]
                                              ),
                                              _vm._v(" "),
                                              _c(
                                                "div",
                                                { staticClass: "date" },
                                                [
                                                  _c("p", [
                                                    _vm._v(
                                                      _vm._s(item.created_at)
                                                    )
                                                  ])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                ]
                              )
                            })
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.request_data.data.request.status !== 0
                          ? _c(
                              "div",
                              { staticClass: "col-12 mt-5 reply-box" },
                              [
                                _c("hr"),
                                _vm._v(" "),
                                _c("div", { staticClass: "form-group" }, [
                                  _c("textarea", {
                                    directives: [
                                      {
                                        name: "validate",
                                        rawName: "v-validate",
                                        value: "required|max:2000",
                                        expression: "'required|max:2000'"
                                      },
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.reply,
                                        expression: "reply"
                                      }
                                    ],
                                    staticClass: "form-control",
                                    class: {
                                      input: true,
                                      "text-danger": _vm.errors.has("details")
                                    },
                                    attrs: {
                                      name: "details",
                                      spellcheck: "false",
                                      cols: "50",
                                      rows: "10",
                                      placeholder:
                                        "Provide a detailed description"
                                    },
                                    domProps: { value: _vm.reply },
                                    on: {
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.reply = $event.target.value
                                      }
                                    }
                                  }),
                                  _vm._v(" "),
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.errors.has("details"),
                                          expression: "errors.has('details')"
                                        }
                                      ],
                                      staticClass: "text-danger"
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.errors.first("details"))
                                      )
                                    ]
                                  )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "form-group" }, [
                                  !_vm.button_loading
                                    ? _c(
                                        "button",
                                        {
                                          staticClass: "btn btn-md btn-warning",
                                          on: { click: _vm.SUBMIT_REPLY }
                                        },
                                        [_vm._v("SEND REPLY")]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _vm.button_loading === "reply"
                                    ? _c(
                                        "button",
                                        {
                                          staticClass: "btn btn-md btn-warning",
                                          attrs: { disabled: "" },
                                          on: { click: _vm.SUBMIT_REPLY }
                                        },
                                        [_vm._v("LOADING")]
                                      )
                                    : _vm._e()
                                ])
                              ]
                            )
                          : _vm._e()
                      ]
                    )
                  ],
                  1
                )
              : _vm._e()
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "float-left profile-image text-center" }, [
      _c("img", {
        attrs: {
          src: "/themes/default/img/user.svg",
          alt: "profile",
          width: "50px"
        }
      }),
      _vm._v(" "),
      _c("p", [_vm._v("Customer")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "float-left profile-image text-center" }, [
      _c("img", {
        attrs: {
          src: "/themes/default/img/user.svg",
          alt: "profile",
          width: "50px"
        }
      }),
      _vm._v(" "),
      _c("p", [_vm._v("Customer")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-04d611ac", module.exports)
  }
}

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(598)
/* template */
var __vue_template__ = __webpack_require__(599)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/filemanager/root.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9069a31a", Component.options)
  } else {
    hotAPI.reload("data-v-9069a31a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    name: "file-manager",

    data: function data() {
        return {
            data: [],
            link: ["/"],
            info_data: null,
            // Create folder
            show_new_folder: false,
            folder_name: "",
            // Rename Folder
            show_rename_folder: false,
            rename_folder: "",
            // Rename File
            show_rename_file: false,
            rename_file: "",
            // Upload Files
            show_upload_progress: false,
            percentFileUpload: 0,
            spinner_loading: false
        };
    },
    mounted: function mounted() {
        var _this = this;

        this.spinner_loading = true;
        axios.post("/api/admin/get/filemanager/folder", {
            link: '/'
        }).then(function (response) {
            if (response.status === 200) {
                _this.data = response.data.data;
                _this.spinner_loading = false;
            }
        });
    },


    methods: {
        GET_INSIDE_FOLDER: function GET_INSIDE_FOLDER(link, name) {
            var _this2 = this;

            this.spinner_loading = true;
            axios.post("/api/admin/get/filemanager/folder", {
                link: link
            }).then(function (response) {
                if (response.status === 200) {
                    _this2.data = response.data.data;
                    _this2.link.push(name);
                    _this2.spinner_loading = false;
                }
            });
        },
        GO_TO_DIR: function GO_TO_DIR(link) {
            var _this3 = this;

            this.spinner_loading = true;
            if (link !== this.link.slice(-1).pop()) {
                this.link.length = this.link.indexOf(link);

                axios.post("/api/admin/get/filemanager/folder", {
                    link: link
                }).then(function (response) {
                    if (response.status === 200) {
                        _this3.data = response.data.data;
                        if (link === "/") _this3.link = ["/"];else _this3.link.push(link);
                        _this3.spinner_loading = false;
                    }
                });
            }
        },
        DELETE_FOLDER_A_FILE: function DELETE_FOLDER_A_FILE(path, index, type) {
            var _this4 = this;

            axios.post("/api/admin/delete/filemanager", {
                path: path,
                type: type
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this4.data.files.splice(index, 1);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("Error in delete");
            });
        },
        DOWNLOAD_FILE: function DOWNLOAD_FILE(path) {
            axios.post("/api/admin/download/filemanager", {
                path: path
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error("Error in delete");
            });
        },
        GET_FILE_INFO: function GET_FILE_INFO(path, name) {
            var _this5 = this;

            axios.post("/api/admin/get/filemanager/info", {
                path: path,
                name: name
            }).then(function (response) {
                if (response.status === 200) {
                    _this5.info_data = [];
                    _this5.info_data = response.data.data;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        CREATE_NEW_FOLDER: function CREATE_NEW_FOLDER() {
            var _this6 = this;

            var path = this.link.join("") + "/" + this.folder_name;
            axios.post("/api/admin/create/filemanager/folder", {
                path: path
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    if (_this6.data.folder === null) _this6.data.folder = [];
                    _this6.data.folder.push({
                        'path': path,
                        'name': path.substring(1)
                    });
                    _this6.show_new_folder = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        DELETE_FOLDER: function DELETE_FOLDER(path, index) {
            var _this7 = this;

            axios.post("/api/admin/delete/filemanager/folder", {
                path: path
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this7.data.folder.splice(index, 1);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        RENAME_FOLDER: function RENAME_FOLDER(old_name, index) {
            var _this8 = this;

            var new_name = this.link.join("") + "/" + this.rename_folder;
            axios.post("/api/admin/rename/filemanager/any", {
                old_name: old_name,
                new_name: new_name
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this8.data.folder[index] = _this8.rename_folder;
                    _this8.show_rename_folder = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        RENAME_FILE: function RENAME_FILE(old_name, index) {
            var _this9 = this;

            var new_name = this.link.join("") + "/" + this.rename_file;
            axios.post("/api/admin/rename/filemanager/any", {
                old_name: old_name,
                new_name: new_name
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this9.data.files[index].name = _this9.rename_file;
                    _this9.show_rename_file = false;
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },
        UPLOAD_FILES: function UPLOAD_FILES() {
            var _this10 = this;

            var formData = new FormData();
            var files = document.getElementById("file-upload");
            for (var i = 0; i < files.files.length; i++) {
                formData.append("files[]", files.files[i]);
            }
            if (this.link.join("") === "/") {
                formData.append("path", "/");
            } else {
                formData.append("path", this.link.join(""));
            }
            // Progress
            this.show_upload_progress = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                },
                onUploadProgress: function onUploadProgress(progressEvent) {
                    _this10.percentFileUpload = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);
                }
            };
            axios.post("/api/admin/upload/filemanager/files", formData, progress).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    _this10.show_upload_progress = false;
                    _this10.GET_INSIDE_FOLDER(_this10.link.join(''));
                }
            }, function (error) {
                _this10.show_upload_progress = false;
            });
        }
    }
});

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table file-manager" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("File Manager")]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 row" }, [
            _c("div", { staticClass: "col-12 col-md-6" }, [
              _c("div", { staticClass: "group-btn" }, [
                _c(
                  "button",
                  {
                    staticClass: "btn btn-sm btn-warning",
                    attrs: { type: "button" },
                    on: {
                      click: function($event) {
                        _vm.show_new_folder = true
                      }
                    }
                  },
                  [_vm._v("Create New Folder")]
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "upload-file btn btn-sm btn-warning" },
                  [
                    _vm._v(
                      "\n                        Upload File\n                        "
                    ),
                    _c("input", {
                      attrs: {
                        type: "file",
                        id: "file-upload",
                        name: "file-upload",
                        multiple: ""
                      },
                      on: { change: _vm.UPLOAD_FILES }
                    })
                  ]
                )
              ])
            ]),
            _vm._v(" "),
            _vm.show_new_folder
              ? _c("div", { staticClass: "col-12 col-md-6 m-md-3" }, [
                  _c("div", { staticClass: "form-group" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.folder_name,
                          expression: "folder_name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { type: "text", placeholder: "Folder Name" },
                      domProps: { value: _vm.folder_name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.folder_name = $event.target.value
                        }
                      }
                    })
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "group-btn" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-success",
                        attrs: { type: "button" },
                        on: { click: _vm.CREATE_NEW_FOLDER }
                      },
                      [_vm._v("Submit")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-danger",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            _vm.show_new_folder = false
                            _vm.folder_name = ""
                          }
                        }
                      },
                      [_vm._v("Cancel")]
                    )
                  ])
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _vm.show_upload_progress
            ? _c(
                "div",
                {
                  staticClass: "progress mt-2",
                  staticStyle: { height: "15px" }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass:
                        "progress-bar progress-bar-striped progress-bar-animated",
                      style: { width: _vm.percentFileUpload + "%" },
                      attrs: {
                        "aria-valuenow": "0",
                        "aria-valuemin": _vm.percentFileUpload,
                        "aria-valuemax": "100"
                      }
                    },
                    [_vm._v(_vm._s(_vm.percentFileUpload) + "%")]
                  )
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c("hr"),
          _vm._v(" "),
          _c(
            "div",
            {
              staticClass: "modal fade",
              attrs: {
                id: "GetFileInfoModal",
                tabindex: "-1",
                role: "dialog",
                "aria-labelledby": "GetFileInfoLabel",
                "aria-hidden": "true"
              }
            },
            [
              _c(
                "div",
                { staticClass: "modal-dialog", attrs: { role: "document" } },
                [
                  _c("div", { staticClass: "modal-content" }, [
                    _vm._m(0),
                    _vm._v(" "),
                    _vm.info_data !== null
                      ? _c("div", { staticClass: "modal-body" }, [
                          _vm.info_data.m_id !== null &&
                          _vm.info_data.m_id !== undefined
                            ? _c("div", { staticClass: "col-12 m-3" }, [
                                _c("h4", [
                                  _vm._v(_vm._s(_vm.info_data.m_name))
                                ]),
                                _vm._v(" "),
                                _c("p", [_vm._v(_vm._s(_vm.info_data.m_desc))]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Images")
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            _vm.info_data.m_poster,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/backdrops/300_" +
                                            _vm.info_data.m_backdrop,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  )
                                ]),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Videos")
                                ]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c(
                                  "video",
                                  { attrs: { width: "100%", controls: "" } },
                                  [
                                    _c("source", {
                                      attrs: {
                                        src: _vm.info_data.video_url,
                                        type: "video/mp4"
                                      }
                                    }),
                                    _vm._v(
                                      " Your browser does not support the video tag.\n              "
                                    )
                                  ]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.info_data.t_id !== null &&
                          _vm.info_data.t_id !== undefined
                            ? _c("div", { staticClass: "col-12 m-3" }, [
                                _c("h4", [
                                  _vm._v(_vm._s(_vm.info_data.t_name))
                                ]),
                                _vm._v(" "),
                                _c("p", [_vm._v(_vm._s(_vm.info_data.t_desc))]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Images")
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/300_" +
                                            _vm.info_data.t_poster,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/backdrops/300_" +
                                            _vm.info_data.t_backdrop,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  )
                                ]),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Videos")
                                ]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c(
                                  "video",
                                  { attrs: { width: "100%", controls: "" } },
                                  [
                                    _c("source", {
                                      attrs: {
                                        src: _vm.info_data.video_url,
                                        type: "video/mp4"
                                      }
                                    }),
                                    _vm._v(
                                      " Your browser does not support the video tag.\n              "
                                    )
                                  ]
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.info_data.id !== null &&
                          _vm.info_data.id !== undefined
                            ? _c("div", { staticClass: "col-12 m-3" }, [
                                _c("h4", [_vm._v(_vm._s(_vm.info_data.name))]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Images")
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src:
                                            "/storage/posters/" +
                                            _vm.info_data.image,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  )
                                ]),
                                _vm._v(" "),
                                _vm.info_data.video_url
                                  ? _c("div", { attrs: { clas: "col-12" } }, [
                                      _c("h6", { staticClass: "mt-3" }, [
                                        _vm._v("Videos")
                                      ]),
                                      _vm._v(" "),
                                      _c("hr"),
                                      _vm._v(" "),
                                      _c(
                                        "video",
                                        {
                                          attrs: { width: "100%", controls: "" }
                                        },
                                        [
                                          _c("source", {
                                            attrs: {
                                              src: _vm.info_data.video_url,
                                              type: "application/x-mpegURL"
                                            }
                                          }),
                                          _vm._v(
                                            " Your browser does not support the video tag.\n                "
                                          )
                                        ]
                                      )
                                    ])
                                  : _vm._e()
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.info_data.c_id !== null &&
                          _vm.info_data.c_id !== undefined
                            ? _c("div", { staticClass: "col-12 m-3" }, [
                                _c("h4", [
                                  _vm._v(_vm._s(_vm.info_data.c_name))
                                ]),
                                _vm._v(" "),
                                _c("hr"),
                                _vm._v(" "),
                                _c("h6", { staticClass: "mt-3" }, [
                                  _vm._v("Images")
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "row" }, [
                                  _c(
                                    "div",
                                    { staticClass: "col-12 col-md-6" },
                                    [
                                      _c("img", {
                                        attrs: {
                                          src: _vm.info_data.c_image,
                                          width: "100%"
                                        }
                                      })
                                    ]
                                  )
                                ])
                              ])
                            : _vm._e()
                        ])
                      : _vm._e()
                  ])
                ]
              )
            ]
          ),
          _vm._v(" "),
          _c(
            "h6",
            { staticClass: "link-dir p-2" },
            _vm._l(_vm.link, function(item, index) {
              return _c(
                "span",
                {
                  key: index,
                  on: {
                    click: function($event) {
                      return _vm.GO_TO_DIR(item)
                    }
                  }
                },
                [_vm._v(_vm._s(item))]
              )
            }),
            0
          ),
          _vm._v(" "),
          _c("hr"),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c(
              "div",
              { staticClass: "row" },
              [
                _vm._l(_vm.data.folder, function(item, index) {
                  return _c(
                    "div",
                    {
                      key: index,
                      staticClass: "col-4 col-md-2 text-center folder"
                    },
                    [
                      _c("i", {
                        staticClass: "fa fa-folder fa-5x",
                        on: {
                          click: function($event) {
                            return _vm.GET_INSIDE_FOLDER(item.path, item.name)
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("br"),
                      _vm._v(" "),
                      _vm.show_rename_folder !== index
                        ? _c("small", [_vm._v(_vm._s(item.name))])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.show_rename_folder === index
                        ? _c("input", {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.rename_folder,
                                expression: "rename_folder"
                              }
                            ],
                            staticClass: "form-control form-control-sm mt-2",
                            attrs: { type: "text", placeholder: "Folder Name" },
                            domProps: { value: _vm.rename_folder },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.rename_folder = $event.target.value
                              }
                            }
                          })
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.show_rename_folder !== index
                        ? _c("div", { staticClass: "control" }, [
                            _c("i", {
                              staticClass: "fa fa-trash",
                              on: {
                                click: function($event) {
                                  return _vm.DELETE_FOLDER(item.path, index)
                                }
                              }
                            }),
                            _vm._v(" "),
                            _c("i", {
                              staticClass: "fa fa-edit",
                              on: {
                                click: function($event) {
                                  _vm.show_rename_folder = index
                                }
                              }
                            })
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.show_rename_folder === index
                        ? _c("div", { staticClass: "group-btn mt-2" }, [
                            _c(
                              "button",
                              {
                                staticClass: "btn btn-sm btn-outline-success",
                                attrs: { type: "button" },
                                on: {
                                  click: function($event) {
                                    return _vm.RENAME_FOLDER(item.path, index)
                                  }
                                }
                              },
                              [_vm._v("Submit")]
                            ),
                            _vm._v(" "),
                            _c(
                              "button",
                              {
                                staticClass: "btn btn-sm btn-outline-danger",
                                attrs: { type: "button" },
                                on: {
                                  click: function($event) {
                                    _vm.show_rename_folder = false
                                    _vm.rename_folder = ""
                                  }
                                }
                              },
                              [_vm._v("Cancel")]
                            )
                          ])
                        : _vm._e()
                    ]
                  )
                }),
                _vm._v(" "),
                _vm.data.files !== null
                  ? _c("div", { staticClass: "col-12 text-center folder" }, [
                      _c("table", { staticClass: "table table-sm" }, [
                        _vm._m(1),
                        _vm._v(" "),
                        _c(
                          "tbody",
                          _vm._l(_vm.data.files, function(item, index) {
                            return _c("tr", { key: index }, [
                              (_vm.show_rename_file !== index &&
                                item.mime === "jpg") ||
                              item.mime === "jpeg" ||
                              item.mime === "png"
                                ? _c(
                                    "td",
                                    {
                                      on: {
                                        click: function($event) {
                                          _vm.show_rename_file = index
                                        }
                                      }
                                    },
                                    [
                                      _c("i", {
                                        staticClass: "fa fa-image fa-1x"
                                      }),
                                      _vm._v(
                                        "\n                                                                    " +
                                          _vm._s(item.name) +
                                          "\n                                                                "
                                      )
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              (_vm.show_rename_file !== index &&
                                item.mime === "mp4") ||
                              item.mime === "m3u8"
                                ? _c(
                                    "td",
                                    {
                                      on: {
                                        click: function($event) {
                                          _vm.show_rename_file = index
                                        }
                                      }
                                    },
                                    [
                                      _c("i", {
                                        staticClass: "fa fa-video fa-1x"
                                      }),
                                      _vm._v(
                                        "\n                                                                    " +
                                          _vm._s(item.name) +
                                          "\n                                                                "
                                      )
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              _vm.show_rename_file === index
                                ? _c("td", [
                                    _c("form", { staticClass: "form-inline" }, [
                                      _c(
                                        "div",
                                        { staticClass: "form-group mb-2" },
                                        [
                                          _c("input", {
                                            directives: [
                                              {
                                                name: "model",
                                                rawName: "v-model",
                                                value: _vm.rename_file,
                                                expression: "rename_file"
                                              }
                                            ],
                                            staticClass:
                                              "form-control form-control-sm mt-2",
                                            attrs: {
                                              type: "text",
                                              placeholder: "Folder Name"
                                            },
                                            domProps: {
                                              value: _vm.rename_file
                                            },
                                            on: {
                                              input: function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.rename_file =
                                                  $event.target.value
                                              }
                                            }
                                          })
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "div",
                                        { staticClass: "form-group ml-2" },
                                        [
                                          _c(
                                            "button",
                                            {
                                              staticClass:
                                                "btn btn-sm btn-outline-success",
                                              attrs: { type: "button" },
                                              on: {
                                                click: function($event) {
                                                  return _vm.RENAME_FILE(
                                                    item.path,
                                                    index
                                                  )
                                                }
                                              }
                                            },
                                            [_vm._v("Submit")]
                                          )
                                        ]
                                      )
                                    ])
                                  ])
                                : _vm._e(),
                              _vm._v(" "),
                              _c("td", [
                                _vm._v(_vm._s(item.size / 1000) + " KB")
                              ]),
                              _vm._v(" "),
                              _c("td", [_vm._v(_vm._s(item.date))]),
                              _vm._v(" "),
                              _c("td", [
                                _c(
                                  "span",
                                  {
                                    staticClass: "control-btn",
                                    on: {
                                      click: function($event) {
                                        return _vm.DELETE_FOLDER_A_FILE(
                                          item.path,
                                          index,
                                          "file"
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Delete")]
                                ),
                                _vm._v(" "),
                                _c("span", { staticClass: "control-btn" }, [
                                  _c(
                                    "a",
                                    {
                                      staticStyle: { color: "#03A9F4" },
                                      attrs: { href: "/storage/" + item.path }
                                    },
                                    [_vm._v("Download")]
                                  )
                                ]),
                                _vm._v(" "),
                                _c(
                                  "span",
                                  {
                                    staticClass: "control-btn",
                                    attrs: {
                                      "data-toggle": "modal",
                                      "data-target": "#GetFileInfoModal"
                                    },
                                    on: {
                                      click: function($event) {
                                        return _vm.GET_FILE_INFO(
                                          item.path,
                                          item.name
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("Info")]
                                )
                              ])
                            ])
                          }),
                          0
                        )
                      ])
                    ])
                  : _vm._e()
              ],
              2
            )
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-header" }, [
      _c(
        "h5",
        { staticClass: "modal-title", attrs: { id: "GetFileInfoLabel" } },
        [_vm._v("File Information")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "close",
          attrs: {
            type: "button",
            "data-dismiss": "modal",
            "aria-label": "Close"
          }
        },
        [_c("span", { attrs: { "aria-hidden": "true" } }, [_vm._v("×")])]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", { attrs: { scope: "col" } }, [_vm._v("Name")]),
        _vm._v(" "),
        _c("th", { attrs: { scope: "col" } }, [_vm._v("Size")]),
        _vm._v(" "),
        _c("th", { attrs: { scope: "col" } }, [_vm._v("Date")]),
        _vm._v(" "),
        _c("th", { attrs: { scope: "col" } }, [_vm._v("Control")])
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-9069a31a", module.exports)
  }
}

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(601)
/* template */
var __vue_template__ = __webpack_require__(602)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/categories/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-867baf56", Component.options)
  } else {
    hotAPI.reload("data-v-867baf56", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 601 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            kind: 'movie'
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.categories.data;
        },
        button_loading: function button_loading(state) {
            return state.categories.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.categories.spinner_loading;
        }
    }),
    created: function created() {
        this.$store.dispatch("GET_ALL_CATEGORIES");
    },

    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                text: "All videos and subtitles will removed!",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_CATEGORY", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        ACTIVE: function ACTIVE(id, key, type) {
            this.$store.dispatch("ACTIVE_CATEGORY", { id: id, type: type, key: key });
        }
    }
});

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "categories" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Categories")]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "create-category" } }
                    },
                    [_vm._v("Create")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _vm.data.categories !== null
            ? _c("div", { staticClass: "table-responsive mt-2" }, [
                _c("div", { staticClass: "table table-hover" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "tbody",
                    _vm._l(_vm.data.categories, function(item, index) {
                      return _c("tr", { key: index }, [
                        _c("td", [
                          _c("img", {
                            attrs: {
                              src: item.image,
                              alt: item.name,
                              width: "40"
                            }
                          })
                        ]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.name))]),
                        _vm._v(" "),
                        item.kind == "movie"
                          ? _c("td", [_vm._v("Movies Page")])
                          : _vm._e(),
                        _vm._v(" "),
                        item.kind == "series"
                          ? _c("td", [_vm._v("TV Show Page")])
                          : _vm._e(),
                        _vm._v(" "),
                        item.kind == "kids"
                          ? _c("td", [_vm._v("Kids Page")])
                          : _vm._e(),
                        _vm._v(" "),
                        item.kind == "live"
                          ? _c("td", [_vm._v("Live TV Page")])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.created_at))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.updated_at))]),
                        _vm._v(" "),
                        _c("td", [
                          _c(
                            "div",
                            {
                              staticClass: "btn-group",
                              attrs: { role: "group" }
                            },
                            [
                              _c(
                                "router-link",
                                {
                                  staticClass:
                                    "btn btn-sm btn-warning btn-sm mr-2",
                                  attrs: {
                                    role: "buttton",
                                    to: {
                                      name: "edit-category",
                                      params: { id: item.id }
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                Edit\n                            "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "button",
                                {
                                  staticClass:
                                    "btn btn-sm btn-danger btn-sm mr-2",
                                  attrs: { id: item.id },
                                  on: {
                                    click: function($event) {
                                      return _vm.DELETE(item.id, index)
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                Delete\n                            "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              !item.active
                                ? _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-danger btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.ACTIVE(
                                            item.id,
                                            index,
                                            "active"
                                          )
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                Active\n                            "
                                      )
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              item.active
                                ? _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-danger btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.ACTIVE(
                                            item.id,
                                            index,
                                            "active"
                                          )
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                Inactive\n                            "
                                      )
                                    ]
                                  )
                                : _vm._e()
                            ],
                            1
                          )
                        ])
                      ])
                    }),
                    0
                  )
                ])
              ])
            : _c("div", { staticClass: "text-center" }, [
                _c("h4", [_vm._v("No result were found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Cover")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Section")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-867baf56", module.exports)
  }
}

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(604)
/* template */
var __vue_template__ = __webpack_require__(605)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/categories/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-79b3886c", Component.options)
  } else {
    hotAPI.reload("data-v-79b3886c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 604 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);
/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: '',
            category_section: '',
            loading: false
        };
    },


    methods: {
        UPLOAD: function UPLOAD(name) {
            var _this = this;

            var image = document.querySelector("#image");
            var formData = new FormData();
            formData.append("name", this.name);
            formData.append("kind", this.category_section);
            formData.append("image", image.files[0]);

            // Progress
            this.loading = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/create/category", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this.loading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.message);
                            _this.$router.push({ name: 'categories-manage' });
                        }
                    }, function (error) {
                        _this.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this.loading = false;
                        }, 4000);
                    });
                }
            });
        },
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "create-category" }, [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: { role: "button", to: { name: "categories-manage" } }
                },
                [
                  _vm._v(
                    "\n                        Manage\n                    "
                  )
                ]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-md-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.name,
                      expression: "name"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { type: "text", placeholder: "Category name" },
                  domProps: { value: _vm.name },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.name = $event.target.value
                    }
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "required|image",
                      expression: "'required|image'"
                    }
                  ],
                  staticClass: "inputfile",
                  attrs: { type: "file", id: "image", name: "image" },
                  on: {
                    change: function($event) {
                      return _vm.readImage("image", "imageFileImage")
                    }
                  }
                }),
                _vm._v(" "),
                _vm._m(2),
                _vm._v(" "),
                _c("img", {
                  staticStyle: { display: "none" },
                  attrs: { src: "", id: "imageFileImage", width: "200" }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("backdrop"),
                        expression: "errors.has('backdrop')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("image")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                _c("label", { attrs: { for: "category-section" } }, [
                  _vm._v("Category section")
                ]),
                _vm._v(" "),
                _c(
                  "select",
                  {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.category_section,
                        expression: "category_section"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { id: "category-section" },
                    on: {
                      change: function($event) {
                        var $$selectedVal = Array.prototype.filter
                          .call($event.target.options, function(o) {
                            return o.selected
                          })
                          .map(function(o) {
                            var val = "_value" in o ? o._value : o.value
                            return val
                          })
                        _vm.category_section = $event.target.multiple
                          ? $$selectedVal
                          : $$selectedVal[0]
                      }
                    }
                  },
                  [
                    _c("option", { attrs: { value: "movie" } }, [
                      _vm._v("Movies\n                                ")
                    ]),
                    _vm._v(" "),
                    _c("option", { attrs: { value: "series" } }, [
                      _vm._v("Tv Show\n                                ")
                    ]),
                    _vm._v(" "),
                    _c("option", { attrs: { value: "live" } }, [
                      _vm._v("Live TV\n                                ")
                    ])
                  ]
                )
              ])
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "form-group" }, [
          _c("div", { staticClass: "col-12" }, [
            !_vm.loading
              ? _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.UPLOAD()
                      }
                    }
                  },
                  [_vm._v("Upload")]
                )
              : _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    attrs: { disabled: "" }
                  },
                  [
                    _c("i", { staticClass: "fa fa-circle-o-notch fa-spin" }),
                    _vm._v("  Loading")
                  ]
                )
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Image")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "image" } }, [
      _vm._v("Choose a Image\n                                "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-79b3886c", module.exports)
  }
}

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(607)
/* template */
var __vue_template__ = __webpack_require__(608)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/categories/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c8aa170c", Component.options)
  } else {
    hotAPI.reload("data-v-c8aa170c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 607 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            data: [],
            name: '',
            category_section: '',
            loading: false,
            spinner: true
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    created: function created() {
        var _this = this;

        axios.get("/api/admin/get/category/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {
                _this.data = resposne.data.data;
                _this.category_section = resposne.data.data.kind;
                _this.spinner = false;
            }
        });
    },


    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            var image = document.querySelector("#image");
            var formData = new FormData();
            formData.append("name", this.data.name);
            formData.append("kind", this.category_section);
            if (image.files[0] !== undefined) {
                formData.append("image", image.files[0]);
            }
            // Progress
            this.loading = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/update/category/" + _this2.$route.params.id, formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this2.loading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.message);
                            _this2.$router.push({ name: 'categories-manage' });
                        }
                    }, function (error) {
                        _this2.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this2.loading = false;
                        }, 4000);
                    });
                }
            });
        },
        infoShow: function infoShow(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "create-category" }, [
    _vm.spinner
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: {
                        role: "button",
                        to: { name: "categories-categories" }
                      }
                    },
                    [
                      _vm._v(
                        "\n                        Manage\n                    "
                      )
                    ]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.name,
                          expression: "data.name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { type: "text", placeholder: "Category name" },
                      domProps: { value: _vm.data.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data, "name", $event.target.value)
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: { type: "file", id: "image", name: "image" },
                      on: {
                        change: function($event) {
                          return _vm.readImage("image", "imageFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(2),
                    _vm._v(" "),
                    _c("img", {
                      attrs: {
                        src: _vm.md_categories + _vm.data.image,
                        id: "imageFileImage",
                        width: "200"
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("backdrop"),
                            expression: "errors.has('backdrop')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("image")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12" }, [
                    _c("label", { attrs: { for: "category-section" } }, [
                      _vm._v("Category section")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.category_section,
                            expression: "category_section"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { id: "category-section" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.category_section = $event.target.multiple
                              ? $$selectedVal
                              : $$selectedVal[0]
                          }
                        }
                      },
                      [
                        _c("option", { attrs: { value: "movie" } }, [
                          _vm._v("Movies\n                                ")
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "series" } }, [
                          _vm._v("Tv Show\n                                ")
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "live" } }, [
                          _vm._v("Live TV\n                                ")
                        ])
                      ]
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                !_vm.loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v("  Loading")
                      ]
                    )
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Image")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "image" } }, [
      _vm._v("Choose a Image\n                                "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-c8aa170c", module.exports)
  }
}

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(610)
/* template */
var __vue_template__ = __webpack_require__(611)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/ads/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-13e0dad7", Component.options)
  } else {
    hotAPI.reload("data-v-13e0dad7", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 610 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            kind: 'movie'
        };
    },

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },
    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.ads.data;
        },
        button_loading: function button_loading(state) {
            return state.ads.button_loading;
        },
        spinner_loading: function spinner_loading(state) {
            return state.ads.spinner_loading;
        }
    }),
    created: function created() {
        this.$store.dispatch("GET_ALL_ADS");
    },

    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                text: "All videos and subtitles will removed!",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_AD", {
                        id: id,
                        key: key
                    });
                }
            });
        }
    }
});

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "categories" }, [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Ads")]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "create-ad" } }
                    },
                    [_vm._v("Create")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _vm.data.ads !== null
            ? _c("div", { staticClass: "table-responsive mt-2" }, [
                _c("div", { staticClass: "table table-hover" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "tbody",
                    _vm._l(_vm.data.ads, function(item, index) {
                      return _c("tr", { key: index }, [
                        _c("td", [_vm._v(_vm._s(item.ad_name))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.client))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.tags))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.created_at))]),
                        _vm._v(" "),
                        _c("td", [_vm._v(_vm._s(item.updated_at))]),
                        _vm._v(" "),
                        _c("td", [
                          _c(
                            "div",
                            {
                              staticClass: "btn-group",
                              attrs: { role: "group" }
                            },
                            [
                              _c(
                                "router-link",
                                {
                                  staticClass:
                                    "btn btn-sm btn-warning btn-sm mr-2",
                                  attrs: {
                                    role: "buttton",
                                    to: {
                                      name: "edit-ad",
                                      params: { id: item.id }
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                Edit\n                            "
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "button",
                                {
                                  staticClass:
                                    "btn btn-sm btn-danger btn-sm mr-2",
                                  attrs: { id: item.id },
                                  on: {
                                    click: function($event) {
                                      return _vm.DELETE(item.id, index)
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                                Delete\n                            "
                                  )
                                ]
                              )
                            ],
                            1
                          )
                        ])
                      ])
                    }),
                    0
                  )
                ])
              ])
            : _c("div", { staticClass: "text-center" }, [
                _c("h4", [_vm._v("No result were found")])
              ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Client")]),
      _vm._v(" "),
      _c("th", [_vm._v("URL")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Updated date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-13e0dad7", module.exports)
  }
}

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(613)
/* template */
var __vue_template__ = __webpack_require__(614)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/ads/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5e5b8a24", Component.options)
  } else {
    hotAPI.reload("data-v-5e5b8a24", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 613 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);
/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            ad_name: '',
            client: '',
            tags: '',
            start_on: '',
            frequency: '',
            start_on_seek: '',
            time_between_ads: '',
            loading: false
        };
    },


    methods: {
        UPLOAD: function UPLOAD() {
            var _this = this;

            var formData = new FormData();
            formData.append("ad_name", this.ad_name);
            formData.append("client", this.client);
            formData.append("start_on", this.start_on);
            formData.append("frequency", this.frequency);
            formData.append("start_on_seek", this.start_on_seek);
            formData.append("time_between_ads", this.time_between_ads);
            formData.append("tags", this.tags);

            // Progress
            this.loading = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/create/ads", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this.loading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.message);
                            _this.$router.push({ name: 'ads-manage' });
                        }
                    }, function (error) {
                        _this.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this.loading = false;
                        }, 4000);
                    });
                }
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "create-ad" }, [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: { role: "button", to: { name: "ads-manage" } }
                },
                [
                  _vm._v(
                    "\n                        Manage\n                    "
                  )
                ]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-md-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "required|max:50|alpha_spaces",
                      expression: "'required|max:50|alpha_spaces'"
                    },
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.ad_name,
                      expression: "ad_name"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { name: "name", type: "text", placeholder: "Ad name" },
                  domProps: { value: _vm.ad_name },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.ad_name = $event.target.value
                    }
                  }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("name"),
                        expression: "errors.has('name')"
                      }
                    ],
                    staticClass: "is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("name")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                _c("label", { attrs: { for: "ad-client" } }, [
                  _vm._v("Ad client")
                ]),
                _vm._v(" "),
                _c(
                  "select",
                  {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.client,
                        expression: "client"
                      },
                      {
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { id: "ad-client", name: "ad-client" },
                    on: {
                      change: function($event) {
                        var $$selectedVal = Array.prototype.filter
                          .call($event.target.options, function(o) {
                            return o.selected
                          })
                          .map(function(o) {
                            var val = "_value" in o ? o._value : o.value
                            return val
                          })
                        _vm.client = $event.target.multiple
                          ? $$selectedVal
                          : $$selectedVal[0]
                      }
                    }
                  },
                  [
                    _c("option", { attrs: { value: "googima" } }, [
                      _vm._v("Google IMA\n                                ")
                    ]),
                    _vm._v(" "),
                    _c("option", { attrs: { value: "vast" } }, [
                      _vm._v("VAST\n                                ")
                    ])
                  ]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("ad-client"),
                        expression: "errors.has('ad-client')"
                      }
                    ],
                    staticClass: "is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("ad-client")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "max:400|url",
                      expression: "'max:400|url'"
                    },
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.tags,
                      expression: "tags"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: {
                    name: "ad-url",
                    type: "text",
                    placeholder: "Ad XML URL"
                  },
                  domProps: { value: _vm.tags },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.tags = $event.target.value
                    }
                  }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("ad-url"),
                        expression: "errors.has('ad-url')"
                      }
                    ],
                    staticClass: "is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("ad-url")))]
                )
              ])
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "form-group" }, [
          _c("div", { staticClass: "col-12" }, [
            !_vm.loading
              ? _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    on: {
                      click: function($event) {
                        return _vm.UPLOAD()
                      }
                    }
                  },
                  [_vm._v("Upload")]
                )
              : _c(
                  "button",
                  {
                    staticClass: "btn btn-md btn-warning",
                    attrs: { disabled: "" }
                  },
                  [
                    _c("i", { staticClass: "fa fa-circle-o-notch fa-spin" }),
                    _vm._v("  Loading\n                    ")
                  ]
                )
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Ad Name")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Ad XML URL")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5e5b8a24", module.exports)
  }
}

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(616)
/* template */
var __vue_template__ = __webpack_require__(617)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/ads/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1f0f4108", Component.options)
  } else {
    hotAPI.reload("data-v-1f0f4108", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 616 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            data: [],
            loading: false,
            spinner: true
        };
    },


    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    created: function created() {
        var _this = this;

        axios.get("/api/admin/get/ads/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {
                _this.data = resposne.data.data;
                _this.spinner = false;
            }
        });
    },


    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            // Progress
            this.loading = true;

            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/update/ads", {
                        id: _this2.$route.params.id,
                        ad_name: _this2.data.ad_name,
                        client: _this2.data.client,
                        start_on: _this2.data.start_on,
                        start_on_seek: _this2.data.start_on_seek,
                        frequency: _this2.data.frequency,
                        time_between_ads: _this2.data.time_between_ads,
                        tags: _this2.data.tags
                    }).then(function (response) {
                        if (response.status === 200) {
                            _this2.loading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.message);
                            _this2.$router.push({ name: 'ads-manage' });
                        }
                    }, function (error) {
                        _this2.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this2.loading = false;
                        }, 4000);
                    });
                }
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    txt += "<br><strong>" + (i + 1) + ". file</strong><br>";
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                    if ("size" in file) {
                        if (file.size < 1048576) txt += "size:" + (file.size / 1024).toFixed(3) + "KB<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        readImage: function readImage(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "edit-ad" }, [
    _vm.spinner
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "ads-manage" } }
                    },
                    [
                      _vm._v(
                        "\n                        Manage\n                    "
                      )
                    ]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "required|max:50|alpha_spaces",
                          expression: "'required|max:50|alpha_spaces'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.ad_name,
                          expression: "data.ad_name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "name",
                        type: "text",
                        placeholder: "Ad name"
                      },
                      domProps: { value: _vm.data.ad_name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data, "ad_name", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("name"),
                            expression: "errors.has('name')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("name")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("div", { staticClass: "col-12" }, [
                    _c("label", { attrs: { for: "ad-client" } }, [
                      _vm._v("Ad client")
                    ]),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.data.client,
                            expression: "data.client"
                          },
                          {
                            name: "validate",
                            rawName: "v-validate",
                            value: "required",
                            expression: "'required'"
                          }
                        ],
                        staticClass: "form-control",
                        attrs: { id: "ad-client", name: "ad-client" },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.data,
                              "client",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      [
                        _c("option", { attrs: { value: "googima" } }, [
                          _vm._v("Google IMA\n                                ")
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "vast" } }, [
                          _vm._v("VAST\n                                ")
                        ])
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("ad-client"),
                            expression: "errors.has('ad-client')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("ad-client")))]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "max:400|url",
                          expression: "'max:400|url'"
                        },
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.data.tags,
                          expression: "data.tags"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: {
                        name: "ad-url",
                        type: "text",
                        placeholder: "Ad XML URL"
                      },
                      domProps: { value: _vm.data.tags },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.data, "tags", $event.target.value)
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("ad-url"),
                            expression: "errors.has('ad-url')"
                          }
                        ],
                        staticClass: "is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("ad-url")))]
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                !_vm.loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v("  Loading\n                    ")
                      ]
                    )
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Ad Name")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [
      _c("label", [_vm._v("Ad XML URL")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1f0f4108", module.exports)
  }
}

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(619)
/* template */
var __vue_template__ = __webpack_require__(620)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/embed-management/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-80b257cc", Component.options)
  } else {
    hotAPI.reload("data-v-80b257cc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 619 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({

    components: {
        'Loader': __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        ListProduction: function ListProduction(state) {
            return state.productions.ListProduction;
        },
        ButtonLoading: function ButtonLoading(state) {
            return state.productions.ButtonLoading;
        },
        ProductionManagementLoading: function ProductionManagementLoading(state) {
            return state.productions.ProductionManagementLoading;
        }
    }),

    created: function created() {
        this.$store.dispatch("LIST_PRODUCTION");
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_PRODUCTION", {
                        id: id,
                        key: key
                    });
                }
            });
        }
    }
});

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "k1_manage_table" }, [
    _vm.ProductionManagementLoading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _c("div", { staticClass: "c-full-manage p-2" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Embed Management")]),
          _vm._v(" "),
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: { role: "button", to: { name: "create-embed" } }
                    },
                    [_vm._v("Create")]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _vm.ListProduction !== null
            ? _c(
                "div",
                { staticClass: "c-body-manage c-white-pa c-shadow-pa" },
                [
                  _c("div", { staticClass: "table-responsive" }, [
                    _c("table", { staticClass: "table" }, [
                      _vm._m(0),
                      _vm._v(" "),
                      _c(
                        "tbody",
                        _vm._l(_vm.ListProduction, function(item, index) {
                          return _c("tr", { key: index }, [
                            _c("td", [
                              _c("img", {
                                attrs: {
                                  src: "/storage/production/" + item.image,
                                  alt: item.name,
                                  width: "40"
                                }
                              })
                            ]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.name))]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(item.created_at))]),
                            _vm._v(" "),
                            _c("td", [
                              _c(
                                "div",
                                {
                                  staticClass: "btn-group",
                                  attrs: { role: "group" }
                                },
                                [
                                  _c(
                                    "router-link",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-warning btn-sm mr-2",
                                      attrs: {
                                        role: "buttton",
                                        to: {
                                          name: "edit-embed",
                                          params: { id: item.id }
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                Edit\n                            "
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "button",
                                    {
                                      staticClass:
                                        "btn btn-sm btn-danger btn-sm mr-2",
                                      attrs: { id: item.id },
                                      on: {
                                        click: function($event) {
                                          return _vm.DELETE(item.id, index)
                                        }
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n                                Delete\n                            "
                                      )
                                    ]
                                  )
                                ],
                                1
                              )
                            ])
                          ])
                        }),
                        0
                      )
                    ])
                  ])
                ]
              )
            : _vm._e()
        ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Logo")]),
      _vm._v(" "),
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-80b257cc", module.exports)
  }
}

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(622)
/* template */
var __vue_template__ = __webpack_require__(623)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/embed-management/create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7c983431", Component.options)
  } else {
    hotAPI.reload("data-v-7c983431", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 622 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: '',
            category_section: '',
            channel_id: '',
            loading: false
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        CHANNELS: function CHANNELS(state) {
            return state.channels.data;
        }
    }),

    created: function created() {
        this.$store.dispatch("GET_ALL_CHANNELS");
    },

    methods: {
        UPLOAD: function UPLOAD(name) {
            var _this = this;

            var image = document.querySelector("#image");
            var formData = new FormData();
            formData.append("Name", this.name);
            formData.append("Image", image.files[0]);
            // Progress
            this.loading = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/create/production", formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this.loading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.Message);
                            _this.$router.push({ name: 'embed-management' });
                        }
                    }, function (error) {
                        _this.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this.loading = false;
                        }, 4000);
                    });
                }
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        READ_IMAGE: function READ_IMAGE(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "c-create-upcoming" }, [
    _c("div", { staticClass: "k1_manage_table" }, [
      _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
        _c("ul", { staticClass: "nav nav-tabs" }, [
          _c(
            "li",
            { staticClass: "nav-item" },
            [
              _c(
                "router-link",
                {
                  staticClass: "btn btn-md btn-warning",
                  attrs: { role: "button", to: { name: "embed-management" } }
                },
                [
                  _vm._v(
                    "\n                        Manage\n                    "
                  )
                ]
              )
            ],
            1
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "col-12" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-12 col-md-6" }, [
            _c("div", { staticClass: "form-group" }, [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.name,
                      expression: "name"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { type: "text", placeholder: "Embed site name" },
                  domProps: { value: _vm.name },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.name = $event.target.value
                    }
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "col-12" }, [
                _c("input", {
                  directives: [
                    {
                      name: "validate",
                      rawName: "v-validate",
                      value: "image",
                      expression: "'image'"
                    }
                  ],
                  staticClass: "inputfile",
                  attrs: { type: "file", id: "image", name: "image" },
                  on: {
                    change: function($event) {
                      return _vm.READ_IMAGE("image", "imageFileImage")
                    }
                  }
                }),
                _vm._v(" "),
                _vm._m(2),
                _vm._v(" "),
                _c("img", {
                  staticStyle: { display: "none" },
                  attrs: { src: "", id: "imageFileImage", width: "200" }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.errors.has("backdrop"),
                        expression: "errors.has('backdrop')"
                      }
                    ],
                    staticClass: " is-danger"
                  },
                  [_vm._v(_vm._s(_vm.errors.first("image")))]
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                !_vm.loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPLOAD()
                          }
                        }
                      },
                      [_vm._v("Upload")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v(
                          "\n                                Loading\n                            "
                        )
                      ]
                    )
              ])
            ])
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Logo")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "image" } }, [
      _vm._v("Choose a Image\n                                "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7c983431", module.exports)
  }
}

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(625)
/* template */
var __vue_template__ = __webpack_require__(626)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/embed-management/edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-10e1cd7f", Component.options)
  } else {
    hotAPI.reload("data-v-10e1cd7f", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 625 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            ProductionInfo: [],
            ButtonLoading: false,
            ProductionEditLoading: true
        };
    },


    components: {
        'Loader': __WEBPACK_IMPORTED_MODULE_0__components_loader___default.a
    },
    created: function created() {
        var _this = this;

        axios.get("/api/admin/get/production/" + this.$route.params.id).then(function (resposne) {
            if (resposne.status === 200) {
                _this.ProductionInfo = resposne.data.ProductionInfo;
                _this.ProductionEditLoading = false;
            }
        });
    },


    methods: {
        UPDATE: function UPDATE() {
            var _this2 = this;

            var image = document.querySelector("#image");
            var formData = new FormData();
            formData.append("Name", this.ProductionInfo.name);
            if (image.files[0] !== undefined) {
                formData.append("Image", image.files[0]);
            }
            // Progress
            this.ButtonLoading = true;
            var progress = {
                headers: {
                    "content-type": "multipart/form-data"
                }
            };
            // Store data
            this.$validator.validateAll().then(function (result) {
                if (result) {
                    axios.post("/api/admin/update/production/" + _this2.$route.params.id, formData, progress).then(function (response) {
                        if (response.status === 200) {
                            _this2.ButtonLoading = false;
                            alertify.logPosition('top right');
                            alertify.success(response.data.Message);
                            _this2.$router.push({ name: 'embed-management' });
                        }
                    }, function (error) {
                        _this2.error_message_api = error.response.data.message;
                        alertify.logPosition('top right');
                        alertify.error(error.response.data.message);
                        setTimeout(function () {
                            _this2.ButtonLoading = false;
                        }, 4000);
                    });
                }
            });
        },
        SHOW_FILES_INFO: function SHOW_FILES_INFO(idFiles, idDetails) {
            var x = document.getElementById(idFiles);
            var txt = "";
            if ("files" in x) {
                for (var i = 0; i < x.files.length; i++) {
                    var file = x.files[i];
                    if ("name" in file) {
                        txt += "name: " + file.name + "<br>";
                    }
                }
            }
            document.getElementById(idDetails).innerHTML = txt;
        },
        READ_IMAGE: function READ_IMAGE(id, outImage) {
            var img = document.getElementById(id);
            var tgt = img.target || window.event.srcElement,
                files = tgt.files;

            // FileReader support
            if (FileReader && files && files.length) {
                var fr = new FileReader();
                fr.onload = function () {
                    var srcImage = document.getElementById(outImage);
                    srcImage.style.display = "block";
                    srcImage.src = fr.result;
                };
                fr.readAsDataURL(files[0]);
            } else {
                // Not supported
                // fallback -- perhaps submit the input to an iframe and temporarily store
                // them on the server until the user's session ends.
            }
        }
    }
});

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "c-update-category" }, [
    _vm.ProductionEditLoading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.ProductionEditLoading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("div", { staticClass: "m-2 p-2", attrs: { id: "manage-panel" } }, [
            _c("ul", { staticClass: "nav nav-tabs" }, [
              _c(
                "li",
                { staticClass: "nav-item" },
                [
                  _c(
                    "router-link",
                    {
                      staticClass: "btn btn-md btn-warning",
                      attrs: {
                        role: "button",
                        to: { name: "embed-management" }
                      }
                    },
                    [
                      _vm._v(
                        "\n                        Manage\n                    "
                      )
                    ]
                  )
                ],
                1
              )
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _c("div", { staticClass: "row" }, [
              _c("div", { staticClass: "col-12 col-md-6" }, [
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.ProductionInfo.name,
                          expression: "ProductionInfo.name"
                        }
                      ],
                      staticClass: "form-control",
                      attrs: { type: "text", placeholder: "Embed site name" },
                      domProps: { value: _vm.ProductionInfo.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.ProductionInfo,
                            "name",
                            $event.target.value
                          )
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-12" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "validate",
                          rawName: "v-validate",
                          value: "image",
                          expression: "'image'"
                        }
                      ],
                      staticClass: "inputfile",
                      attrs: { type: "file", id: "image", name: "image" },
                      on: {
                        change: function($event) {
                          return _vm.READ_IMAGE("image", "imageFileImage")
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm._m(2),
                    _vm._v(" "),
                    _c("img", {
                      attrs: {
                        src: "/storage/production/" + _vm.ProductionInfo.image,
                        id: "imageFileImage",
                        width: "200"
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.errors.has("backdrop"),
                            expression: "errors.has('backdrop')"
                          }
                        ],
                        staticClass: " is-danger"
                      },
                      [_vm._v(_vm._s(_vm.errors.first("image")))]
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-group" }, [
              _c("div", { staticClass: "col-12" }, [
                !_vm.ButtonLoading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        on: {
                          click: function($event) {
                            return _vm.UPDATE()
                          }
                        }
                      },
                      [_vm._v("Update")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-md btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v(
                          "\n                        Loading\n                    "
                        )
                      ]
                    )
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Name")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-12" }, [_c("label", [_vm._v("Logo")])])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("label", { attrs: { id: "backdropLabel", for: "image" } }, [
      _vm._v("Choose a Image\n                                "),
      _c("br")
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-10e1cd7f", module.exports)
  }
}

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(628)
/* template */
var __vue_template__ = __webpack_require__(629)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/genre-management/manage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6c07d344", Component.options)
  } else {
    hotAPI.reload("data-v-6c07d344", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 628 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_loader__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var alertify = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            name: null,
            btn_loading: false
        };
    },


    computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapState */])({
        data: function data(state) {
            return state.genres.data;
        },
        spinner_loading: function spinner_loading(state) {
            return state.genres.spinner_loading_genres;
        }
    }),

    components: {
        Loader: __WEBPACK_IMPORTED_MODULE_1__components_loader___default.a
    },

    created: function created() {
        this.$store.dispatch("GET_ALL_GENRES");
    },


    methods: {
        DELETE: function DELETE(id, key) {
            var _this = this;

            swal({
                title: "Are you sure to delete ?",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    _this.$store.dispatch("DELETE_GENRE", {
                        id: id,
                        key: key
                    });
                }
            });
        },
        CREATE: function CREATE() {
            var _this2 = this;

            this.btn_loading = true;
            axios.post("/api/admin/create/genres", {
                name: this.name
            }).then(function (response) {
                if (response.status === 200) {
                    _this2.btn_loading = false;
                    _this2.data.push(response.data.data);

                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                setTimeout(function () {
                    _this2.btn_loading = false;
                }, 500);
            });
        }
    }
});

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.spinner_loading
      ? _c("div", { staticClass: "spinner-load" }, [_c("Loader")], 1)
      : _vm._e(),
    _vm._v(" "),
    !_vm.spinner_loading
      ? _c("div", { staticClass: "k1_manage_table" }, [
          _c("h5", { staticClass: "title p-2" }, [_vm._v("Genre")]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12 col-sm-6 col-md-4 " }, [
            _c("div", { staticClass: "input-group" }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.name,
                    expression: "name"
                  }
                ],
                staticClass: "form-control",
                attrs: { type: "text", placeholder: "Genre name" },
                domProps: { value: _vm.name },
                on: {
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.name = $event.target.value
                  }
                }
              }),
              _vm._v(" "),
              _c("span", { staticClass: "input-group-btn" }, [
                !_vm.btn_loading
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            return _vm.CREATE()
                          }
                        }
                      },
                      [_vm._v("Create")]
                    )
                  : _c(
                      "button",
                      {
                        staticClass: "btn btn-sm btn-warning",
                        attrs: { disabled: "" }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-circle-o-notch fa-spin"
                        }),
                        _vm._v("  Loading ")
                      ]
                    )
              ])
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "col-12" }, [
            _vm.data.length > 0
              ? _c("div", { staticClass: "table-responsive mt-2 " }, [
                  _c("div", { staticClass: "table table-hover" }, [
                    _vm._m(0),
                    _vm._v(" "),
                    _c(
                      "tbody",
                      _vm._l(_vm.data, function(item, index) {
                        return _c("tr", { key: index }, [
                          _c("td", [_vm._v(_vm._s(item.name))]),
                          _vm._v(" "),
                          _c("td", [_vm._v(_vm._s(item.created_at))]),
                          _vm._v(" "),
                          _c("td", [
                            _c(
                              "div",
                              {
                                staticClass: "btn-group",
                                attrs: { role: "group" }
                              },
                              [
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-sm btn-danger btn-sm mr-2",
                                    attrs: { id: item.id },
                                    on: {
                                      click: function($event) {
                                        return _vm.DELETE(item.id, index)
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      "\n                                        Delete\n                                    "
                                    )
                                  ]
                                )
                              ]
                            )
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ])
              : _c("div", { staticClass: "text-center" }, [
                  _c("h4", [_vm._v("No result were found")])
                ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Created date")]),
      _vm._v(" "),
      _c("th", [_vm._v("Control")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6c07d344", module.exports)
  }
}

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = null
/* template */
var __vue_template__ = __webpack_require__(631)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/admin/views/helper/info.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0e028368", Component.options)
  } else {
    hotAPI.reload("data-v-0e028368", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "k1_manage_table" }, [
      _c("h5", { staticClass: "title p-2" }, [_vm._v("Helper")]),
      _vm._v(" "),
      _c("div", { staticClass: "info mt-0 m-4" }, [
        _c("p", [_c("strong", [_vm._v("Episode API Upload")])]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "Before you upload episode multi or single you should rename video file to the same number of episode\n            "
          ),
          _c("br"),
          _vm._v(
            "\n            Example: 1.mkv = number 1 episode - 2.mkv = number 2 episode\n        "
          )
        ]),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("p", [_c("strong", [_vm._v("Episode Custom Upload")])]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "Before you upload episode multi or single you should rename video and backdrop "
          ),
          _c("strong", [_vm._v("Image")]),
          _vm._v(" file to the same number of episode ")
        ]),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("p", [_c("strong", [_vm._v("Exernal Link Upload")])]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "The External Link Should End With .mp4/.webm for Movie/Episode & M3u8 for Live Tv"
          )
        ]),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("p", [_c("strong", [_vm._v("Available & Unavailable ")])]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "Movies & Episode the default after upload is Unavailable\n            "
          ),
          _c("i", {
            staticClass: "fa fa-spinner",
            attrs: { "aria-hidden": "true" }
          })
        ]),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("p", [_c("strong", [_vm._v("Breaintree Manage")])]),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "After you add the plan from Breaintree dashboard, you will see automatically the plan in setting -> Breaintree manage, you can active it in site or inactive\n            "
          ),
          _c("br"),
          _vm._v(" "),
          _c("strong", [_vm._v("Important: ")]),
          _vm._v(
            " If you update the plan details you should inactive plan and active it again\n        "
          )
        ]),
        _vm._v(" "),
        _c("br")
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0e028368", module.exports)
  }
}

/***/ }),
/* 632 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        episode_data: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false,
        button_delete_loading: false
    },
    actions: {

        /**
         * Get all SERIES
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_SERIES: function GET_ALL_SERIES(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/series').then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },
        GET_SERIES: function GET_SERIES(_ref2, id) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/series/' + id).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get SERIES by pagination
         *
         * @param {*} commit object
         * @param id int id
         */

        GET_SERIES_PAGINATION: function GET_SERIES_PAGINATION(_ref3, path_url) {
            var commit = _ref3.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete SERIES
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_SERIES: function DELETE_SERIES(_ref4, _ref5) {
            var commit = _ref4.commit;
            var id = _ref5.id,
                key = _ref5.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/series/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_SERIES', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Search SERIES
         *
         * @param {string} string query
         */

        GET_SERIES_SEARCH: function GET_SERIES_SEARCH(_ref6, query) {
            var commit = _ref6.commit;

            commit('SPINER_LOAD');
            axios.post('/api/admin/get/series/search', { query: query }).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SEARCH_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },
        ADD_SERIES_TO_TOP: function ADD_SERIES_TO_TOP(_ref7, _ref8) {
            var commit = _ref7.commit;
            var id = _ref8.id,
                key = _ref8.key;

            axios.post('/api/admin/new/series/top', { id: id }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('ADD_SERIES_TO_TOP', { id: id, key: key });
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Get season
         *
         * @param {*} commit object
         * @param id int id
         */

        GET_ALL_SEASON: function GET_ALL_SEASON(_ref9, id) {
            var commit = _ref9.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/series/season/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get season
         *
         * @param {*} commit object
         * @param id int id
         */

        GET_SERIES_INFO: function GET_SERIES_INFO(_ref10, id) {
            var commit = _ref10.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/series/info/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get Episode Details
         * @param commit
         * @param id
         * @constructor
         */
        GET_EPISODE_DETAILS: function GET_EPISODE_DETAILS(_ref11, id) {
            var commit = _ref11.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/series/episode/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_EPISODE', response.data.data);
                    commit('SPINER_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
          * Delete Episode
          *
          * @param {*} id  uuid
          * @param {*} key int
          */
        DELETE_EPISODE: function DELETE_EPISODE(_ref12, list) {
            var commit = _ref12.commit;

            commit('BUTTON_LOAD_DELETE', true);
            axios.post('/api/admin/delete/series/episode', { list: list }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_EPISODE', list);
                    commit('BUTTON_LOAD_DELETE', false);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_LOAD_DELETE', false);
            });
        }
    },

    mutations: {
        SET_SERIES: function SET_SERIES(state, data) {
            state.data = data;
        },
        SET_EPISODE: function SET_EPISODE(state, data) {
            state.episode_data = data;
        },
        SET_SEARCH_SERIES: function SET_SEARCH_SERIES(state, data) {
            state.data_search = data;
        },
        CLEAN_SEARCH_SERIES: function CLEAN_SEARCH_SERIES(state) {
            state.data_search = {};
        },
        DELETE_SERIES: function DELETE_SERIES(state, key) {
            state.data.series.data.splice(key, 1);
        },
        DELETE_EPISODE: function DELETE_EPISODE(state, list) {
            for (var i = 0; i < list.length; i++) {
                state.data.season.data.splice(list[i].key, 1);
            }
        },
        ADD_SERIES_TO_TOP: function ADD_SERIES_TO_TOP(state, data) {
            state.data.series.data[data.key].series_id = data.id;
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_DELETE_LOADING: function BUTTON_DELETE_LOADING(state, data) {
            state.button_delete_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 633 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all channels
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_CHANNELS: function GET_ALL_CHANNELS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/channels').then(function (response) {
                if (response.status === 200) {
                    commit('SET_CHANNELS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete channels
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_CHANNEL: function DELETE_CHANNEL(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/channel/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_CHANNEL', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Start and Stop Streaming Channels
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        STREAMING_STATUS: function STREAMING_STATUS(_ref4, _ref5) {
            var commit = _ref4.commit;
            var id = _ref5.id,
                key = _ref5.key;

            commit('BUTTON_LOAD', id);
            axios.put('/api/admin/streaming/channel/' + id).then(function (response) {
                if (response.status === 200) {

                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('STREAMING_STATUE', {
                        'key': key, 'status': response.data.streaming_status
                    });

                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        }
    },
    mutations: {
        SET_CHANNELS: function SET_CHANNELS(state, data) {
            state.data = data;
        },
        DELETE_CHANNEL: function DELETE_CHANNEL(state, key) {
            state.data.channels.splice(key, 1);
        },
        STREAMING_STATUE: function STREAMING_STATUE(state, data) {
            state.data.channels[data.key].streaming_status = data.status;
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 634 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all channels
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_TOPS: function GET_TOPS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/top').then(function (response) {
                if (response.status === 200) {
                    commit('SET_TOP', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete channels
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_TOP: function DELETE_TOP(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/top/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_TOP', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        }
    },
    mutations: {
        SET_TOP: function SET_TOP(state, data) {
            state.data = data;
        },
        DELETE_TOP: function DELETE_TOP(state, key) {
            state.data.top.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 635 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        data_search: null,
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all SERIES
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_ACTORS: function GET_ALL_ACTORS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_ACTOR_LOAD');
            axios.get('/api/admin/get/actors').then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_ACTORS', response.data.data);
                    commit('SPINER_ACTOR_CLEAN');
                }
            });
        },


        /**
         * Get actors by pagination
         * 
         * @param {*} commit object 
         * @param id int id 
         */

        GET_ACTORS_PAGINATION: function GET_ACTORS_PAGINATION(_ref2, path_url) {
            var commit = _ref2.commit;

            commit('SPINER_ACTOR_LOAD');
            axios.get(path_url).then(function (response) {
                if (response.status === 200) {
                    commit('SET_ACTORS', response.data.data);
                    commit('SPINER_ACTOR_CLEAN');
                }
            });
        },


        /**
         * Delete SERIES
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_ACTOR: function DELETE_ACTOR(_ref3, _ref4) {
            var commit = _ref3.commit;
            var id = _ref4.id,
                key = _ref4.key;

            axios.delete('/api/admin/delete/actor/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('DELETE_ACTOR', key);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Search SERIES
         *
         * @param {string} string query
         */

        GET_ACTORS_SEARCH: function GET_ACTORS_SEARCH(_ref5, query) {
            var commit = _ref5.commit;

            commit('SPINER_ACTOR_LOAD');
            axios.post('/api/admin/get/actors/search', { query: query }).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SEARCH_ACTORS', response.data.data);
                    commit('SPINER_ACTOR_CLEAN');
                }
            });
        }
    },

    mutations: {
        SET_ACTORS: function SET_ACTORS(state, data) {
            state.data = data;
        },
        SET_SEARCH_ACTORS: function SET_SEARCH_ACTORS(state, data) {
            state.data_search = data;
        },
        CLEAN_SEARCH_ACTORS: function CLEAN_SEARCH_ACTORS(state) {
            state.data_search = null;
        },
        CLEAR_SEARCH: function CLEAR_SEARCH(state) {
            state.data_search = null;
        },
        DELETE_ACTOR: function DELETE_ACTOR(state, key) {
            state.data.actors.data.splice(key, 1);
        },
        SPINER_ACTOR_LOAD: function SPINER_ACTOR_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_ACTOR_CLEAN: function SPINER_ACTOR_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 636 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all reports
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_REPORTS: function GET_ALL_REPORTS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/reports').then(function (response) {
                if (response.status === 200) {
                    commit('SET_REPORTS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get reports by pagination
         * 
         * @param {*} commit object 
         * @param id int id 
         */

        GET_REPORTS_PAGINATION: function GET_REPORTS_PAGINATION(_ref2, path_url) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                if (response.status === 200) {
                    commit('SET_REPORTS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get reports of some movie/series
         * 
         * @param {*} commit object 
         * @param id int id 
         */

        GET_REPORT: function GET_REPORT(_ref3, id) {
            var commit = _ref3.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/report/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_REPORTS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get report of movie/seris by pagination
         * 
         * @param {*} commit object 
         * @param id int id 
         */

        GET_REPORT_PAGINATION: function GET_REPORT_PAGINATION(_ref4, path_url) {
            var commit = _ref4.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                if (response.status === 200) {
                    commit('SET_REPORTS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete one report of movie/series
         * 
         * @param {*}
         * @param {int,int} 
         */
        DELETE_REPORT: function DELETE_REPORT(_ref5, _ref6) {
            var commit = _ref5.commit;
            var id = _ref6.id,
                key = _ref6.key;

            axios.delete('/api/admin/delete/report/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('DELETE_REPROT', key);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Delete all reports of movie/series
         * 
         * @param {*}
         * @param {int,int} 
         */
        DELETE_ALL_REPORTS: function DELETE_ALL_REPORTS(_ref7, _ref8) {
            var commit = _ref7.commit;
            var id = _ref8.id,
                key = _ref8.key;

            axios.delete('/api/admin/delete/all/reports/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('DELETE_REPROT', key);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Search SERIES
         * 
         * @param {string} string query 
         */

        GET_SERIES_SEARCH: function GET_SERIES_SEARCH(_ref9, query) {
            var commit = _ref9.commit;

            commit('SPINER_LOAD');
            axios.post('/api/admin/get/series/search', { query: query }).then(function (response) {
                // if status code 200
                if (response.status === 200) {
                    commit('SET_SEARCH_SERIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        }
    },

    mutations: {
        SET_REPORTS: function SET_REPORTS(state, data) {
            state.data = data;
        },
        SET_SEARCH_SERIES: function SET_SEARCH_SERIES(state, data) {
            state.data_search = data;
        },
        DELETE_REPROT: function DELETE_REPROT(state, key) {
            state.data.reports.data.splice(key, 1);
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 637 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get movie subtitle
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_MOVIE_SUBTITLES: function GET_MOVIE_SUBTITLES(_ref, id) {
            var commit = _ref.commit;

            commit('SUBTITLE_SPINER_LOAD');
            axios.get('/api/admin/get/subtitles/movie/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUBTITLES', response.data.data);
                    commit('SUBTITLE_SPINER_CLEAN');
                }
            });
        },


        /**
         * Get episode subtitle
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_EPISODE_SUBTITLES: function GET_EPISODE_SUBTITLES(_ref2, id) {
            var commit = _ref2.commit;

            commit('SUBTITLE_SPINER_LOAD');
            axios.get('/api/admin/get/subtitles/episode/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUBTITLES', response.data.data);
                    commit('SUBTITLE_SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete movie
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_SUBTITLE: function DELETE_SUBTITLE(_ref3, _ref4) {
            var commit = _ref3.commit;
            var id = _ref4.id,
                key = _ref4.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/subtitle/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_SUBTITLE', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        }
    },
    mutations: {
        SET_SUBTITLES: function SET_SUBTITLES(state, data) {
            state.data = data;
        },
        DELETE_SUBTITLE: function DELETE_SUBTITLE(state, key) {
            state.data.subtitles.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SUBTITLE_SPINER_LOAD: function SUBTITLE_SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SUBTITLE_SPINER_CLEAN: function SUBTITLE_SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 638 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        invoices: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false,
        invoice_spinner_loading: false

    },
    actions: {

        /**
         * Get all users
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_USERS: function GET_ALL_USERS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/users').then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get all users
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_INACTIVITY_USERS: function GET_INACTIVITY_USERS(_ref2) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/users/inactivity').then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
            * Get activity users
            *
            * @param {*} commit object
            * @param id int id
            */
        GET_ACTIVITY_USERS: function GET_ACTIVITY_USERS(_ref3) {
            var commit = _ref3.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/users/activity').then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get all users by panginate
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_USERS_BY_PAGINATION: function GET_ALL_USERS_BY_PAGINATION(_ref4, path_url) {
            var commit = _ref4.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
        * Search users
        *
        * @param {string} string query
        */

        GET_USERS_SEARCH: function GET_USERS_SEARCH(_ref5, query) {
            var commit = _ref5.commit;

            commit('SPINER_LOAD');
            axios.post('/api/admin/get/users/search', { query: query }).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SEARCH_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get Billing Details
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        GET_USERS_BILLING: function GET_USERS_BILLING(_ref6, id) {
            var commit = _ref6.commit;

            commit('INVOICE_SPINER_LOAD');
            axios.post('/api/admin/get/users/invoice', { id: id }).then(function (response) {
                if (response.status === 200) {
                    commit('SET_INVOICE', response.data.data);
                    commit('INVOICE_SPINER_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Delete user
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_USER: function DELETE_USER(_ref7, _ref8) {
            var commit = _ref7.commit;
            var id = _ref8.id,
                key = _ref8.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/users/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('DELETE_USER', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Get user details
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_USER_DETAILS: function GET_USER_DETAILS(_ref9, id) {
            var commit = _ref9.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/user/details/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Update user
         *
         * @param {*} commit object
         * @param {int,string,email,string,password} object
         */
        UPDATE_USER_DETAILS: function UPDATE_USER_DETAILS(_ref10, _ref11) {
            var commit = _ref10.commit;
            var id = _ref11.id,
                name = _ref11.name,
                email = _ref11.email,
                stripe_id = _ref11.stripe_id,
                password = _ref11.password,
                subscribe = _ref11.subscribe;

            commit('BUTTON_LOAD');
            axios.post('/api/admin/update/user', {
                id: id,
                name: name,
                email: email,
                stripe_id: stripe_id,
                password: password,
                subscribe: subscribe

            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    commit('BUTTON_CLEAR');
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAR');
            });
        },


        /**
         * Update user
         *
         * @param {*} commit object
         * @param {int,string,email,string,password} object
         */
        CREATE_NEW_USER: function CREATE_NEW_USER(_ref12, _ref13) {
            var commit = _ref12.commit;
            var name = _ref13.name,
                email = _ref13.email,
                password = _ref13.password,
                subscribe = _ref13.subscribe;

            commit('BUTTON_LOAD');
            axios.post('/api/admin/create/user', {
                name: name,
                email: email,
                password: password,
                subscribe: subscribe
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    commit('BUTTON_CLEAR');
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* default */].go('1');
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAR');
            });
        }
    },
    mutations: {
        SET_USERS: function SET_USERS(state, data) {
            state.data = data;
        },
        SET_SEARCH_USERS: function SET_SEARCH_USERS(state, data) {
            state.data_search = data;
        },
        CLEAN_SEARCH_USERS: function CLEAN_SEARCH_USERS(state) {
            state.data_search = {};
        },
        SET_INVOICE: function SET_INVOICE(state, data) {
            state.invoices = data;
        },
        DELETE_USER: function DELETE_USER(state, key) {
            state.data.users.data.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        },
        INVOICE_SPINER_LOAD: function INVOICE_SPINER_LOAD(state) {
            state.invoice_spinner_loading = true;
        },
        INVOICE_SPINER_CLEAN: function INVOICE_SPINER_CLEAN(state) {
            state.invoice_spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 639 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        invoices: [],
        data_search: {},
        button_loading: false,
        spinner_loading: false,
        invoice_spinner_loading: false

    },
    actions: {

        /**
         * Get all admin users
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_ADMINS: function GET_ALL_ADMINS(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/settings/admins/users').then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete movie
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_ADMIN: function DELETE_ADMIN(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;


            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/setting/delete/admin/user/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    commit('DELETE_ADMIN', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Get user details
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ADMIN_DETAILS: function GET_ADMIN_DETAILS(_ref4, id) {
            var commit = _ref4.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/settings/user/details/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Update user 
         * 
         * @param {*} commit object 
         * @param {int,string,email,string,password} object
         */
        UPDATE_ADMIN_DETAILS: function UPDATE_ADMIN_DETAILS(_ref5, _ref6) {
            var commit = _ref5.commit;
            var id = _ref6.id,
                name = _ref6.name,
                email = _ref6.email,
                password = _ref6.password,
                permission = _ref6.permission;

            commit('BUTTON_LOAD');
            axios.post('/api/admin/update/settings/user', {
                id: id,
                name: name,
                email: email,
                password: password,
                permission: permission
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
            });
        },


        /**
         * Create user 
         * 
         * @param {*} commit object 
         * @param {int,string,email,string,password} object
         */
        CREATE_ADMIN_USER: function CREATE_ADMIN_USER(_ref7, _ref8) {
            var commit = _ref7.commit;
            var name = _ref8.name,
                email = _ref8.email,
                password = _ref8.password,
                password_confirmation = _ref8.password_confirmation,
                permission = _ref8.permission;

            commit('BUTTON_LOAD');
            axios.post('/api/admin/new/settings/admin/user', {
                name: name,
                email: email,
                password: password,
                password_confirmation: password_confirmation,
                permission: permission
            }).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition("top right");
                    alertify.success(response.data.message);
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* default */].go(-1);
                }
            }, function (error) {
                alertify.logPosition("top right");
                alertify.error(error.response.data.message);
                __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* default */].go(-1);
            });
        }
    },
    mutations: {
        SET_USERS: function SET_USERS(state, data) {
            state.data = data;
        },
        SET_SEARCH_USERS: function SET_SEARCH_USERS(state, data) {
            state.data_search = data;
        },
        SET_INVOICE: function SET_INVOICE(state, data) {
            state.invoices = data;
        },
        DELETE_ADMIN: function DELETE_ADMIN(state, key) {
            state.data.admins.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 640 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);


var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        support_request: [],
        search_data: null,
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all channels
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_SUPPORT_REQUEST: function GET_ALL_SUPPORT_REQUEST(_ref) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/support').then(function (response) {
                if (response.status === 200) {
                    commit('SET_ALL_REQUEST', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get open channels
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_OPEN_SUPPORT_REQUEST: function GET_OPEN_SUPPORT_REQUEST(_ref2) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/support/open').then(function (response) {
                if (response.status === 200) {
                    commit('SET_ALL_REQUEST', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get closed channels
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_CLOSED_SUPPORT_REQUEST: function GET_CLOSED_SUPPORT_REQUEST(_ref3) {
            var commit = _ref3.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/support/closed').then(function (response) {
                if (response.status === 200) {
                    commit('SET_ALL_REQUEST', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get all users by panginate
         * 
         * @param {*} commit object 
         * @param id int id 
         */
        GET_ALL_SUPPORT_REQUEST_BY_PAGINATION: function GET_ALL_SUPPORT_REQUEST_BY_PAGINATION(_ref4, path_url) {
            var commit = _ref4.commit;

            commit('SPINER_LOAD');
            axios.get(path_url).then(function (response) {
                if (response.status === 200) {
                    commit('SET_USERS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get Supoort Request
         * 
         * @param {any} {commit } 
         */

        GET_SUPPORT_REQUEST: function GET_SUPPORT_REQUEST(_ref5, _ref6) {
            var commit = _ref5.commit;
            var id = _ref6.id;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/support/request/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUPPORT_REQUEST', {
                        data: response.data.data
                    });
                    commit('SPINER_CLEAN');
                } else if (response.status === 204) {
                    commit('SET_SUPPORT_REQUEST', {
                        data: null
                    });
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Submit Supoort Reply
         * 
         * @param {any} {commit } 
         */

        SUBMIT_SUPPORT_REPLY: function SUBMIT_SUPPORT_REPLY(_ref7, _ref8) {
            var commit = _ref7.commit;
            var id = _ref8.id,
                reply = _ref8.reply;

            commit('BUTTON_LOAD', 'reply');
            axios.post('/api/admin/create/support/request/reply', { id: id, reply: reply }).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUPPORT_REPLY', { data: response.data.data });
                } else if (response.status === 204) {
                    commit('SET_SUPPORT_REQUEST', { data: null });
                }
                commit('BUTTON_CLEAN');
            });
        },


        /**
        * Submit Supoort Reply
        * 
        * @param {any} {commit } 
        */

        UPDATE_SUPPORT_STATUS: function UPDATE_SUPPORT_STATUS(_ref9, _ref10) {
            var commit = _ref9.commit;
            var id = _ref10.id;

            commit('BUTTON_LOAD', 'status');
            axios.put('/api/admin/update/support/request/status/' + id).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUPPORT_STATUS', {
                        data: response.data.data
                    });
                    alertify.logPosition('top right');
                    alertify.success('Successful Close Request');
                    commit('BUTTON_CLEAN');
                }
            });
        },


        /**
         * Delete channels
         * 
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_SPPORT_REQUEST: function DELETE_SPPORT_REQUEST(_ref11, _ref12) {
            var commit = _ref11.commit;
            var id = _ref12.id,
                key = _ref12.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/support/request/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_REQUEST', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Get Supoort Request
         * 
         * @param {any} {commit } 
         */

        GET_SUPPORT_REQUEST_SEARCH: function GET_SUPPORT_REQUEST_SEARCH(_ref13, query) {
            var commit = _ref13.commit;

            commit('SPINER_LOAD');
            axios.post('/api/admin/get/support/search', { query: query }).then(function (response) {
                if (response.status === 200) {
                    commit('SET_SUPPORT_SEARCH_REQUEST', {
                        data: response.data.data
                    });
                    commit('SPINER_CLEAN');
                }
            });
        }
    },
    mutations: {
        SET_ALL_REQUEST: function SET_ALL_REQUEST(state, data) {
            state.data = data;
        },
        SET_SUPPORT_SEARCH_REQUEST: function SET_SUPPORT_SEARCH_REQUEST(state, data) {
            state.search_data = [];
            state.search_data = data.data;
        },
        CLEAR_SUPPORT_SEARCH_DATA: function CLEAR_SUPPORT_SEARCH_DATA(state, data) {
            state.search_data = null;
        },
        SET_SUPPORT_REQUEST: function SET_SUPPORT_REQUEST(state, data) {
            state.support_request = data;
        },
        SET_SUPPORT_REPLY: function SET_SUPPORT_REPLY(state, data) {
            if (state.support_request.data.reply === null) {
                state.support_request.data.reply = [];
            }
            state.support_request.data.reply.push(data.data);
        },
        SET_SUPPORT_STATUS: function SET_SUPPORT_STATUS(state, data) {
            if (!data.data) state.support_request.data.request.status = 0;else state.support_request.data.request.status = 1;
        },
        DELETE_REQUEST: function DELETE_REQUEST(state, key) {
            state.data.data.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 641 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all channels
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_CATEGORIES: function GET_ALL_CATEGORIES(_ref, kind) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/categories').then(function (response) {
                if (response.status === 200) {
                    commit('SET_CATEGORIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Get all channels
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_CATEGORIES_BY_SORT: function GET_CATEGORIES_BY_SORT(_ref2, kind) {
            var commit = _ref2.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/categories/sort/' + kind).then(function (response) {
                if (response.status === 200) {
                    commit('SET_CATEGORIES', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete channels
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_CATEGORY: function DELETE_CATEGORY(_ref3, _ref4) {
            var commit = _ref3.commit;
            var id = _ref4.id,
                key = _ref4.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/category/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_CATEGORY', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        },


        /**
         * Start and Stop Streaming Channels
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        ACTIVE_CATEGORY: function ACTIVE_CATEGORY(_ref5, _ref6) {
            var commit = _ref5.commit;
            var id = _ref6.id,
                type = _ref6.type,
                key = _ref6.key;

            commit('BUTTON_LOAD', id);
            axios.post('/api/admin/update/active/category', { id: id, type: type }).then(function (response) {
                if (response.status === 200) {

                    alertify.logPosition('top right');
                    alertify.success(response.data.message);
                    if (type == 'active') {
                        commit('ACTIVE_STATUS', {
                            'key': key,
                            'type': 'active',
                            'status': response.data.active
                        });
                    } else {
                        commit('ACTIVE_STATUS', {
                            'key': key,
                            'type': 'subscription',
                            'status': response.data.subscription
                        });
                    }

                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        }
    },
    mutations: {
        SET_CATEGORIES: function SET_CATEGORIES(state, data) {
            state.data = data;
        },
        DELETE_CATEGORY: function DELETE_CATEGORY(state, key) {
            state.data.categories.splice(key, 1);
        },
        ACTIVE_STATUS: function ACTIVE_STATUS(state, data) {
            if (data.type === 'active') {
                state.data.categories[data.key].active = data.status;
            } else {
                state.data.categories[data.key].show_in_sub = data.status;
            }
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 642 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        button_loading: false,
        spinner_loading: false
    },
    actions: {

        /**
         * Get all channels
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_ADS: function GET_ALL_ADS(_ref, kind) {
            var commit = _ref.commit;

            commit('SPINER_LOAD');
            axios.get('/api/admin/get/ads').then(function (response) {
                if (response.status === 200) {
                    commit('SET_ADS', response.data.data);
                    commit('SPINER_CLEAN');
                }
            });
        },


        /**
         * Delete channels
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_AD: function DELETE_AD(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/ads/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_AD', key);
                    commit('BUTTON_CLEAN');
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
                commit('BUTTON_CLEAN');
            });
        }
    },
    mutations: {
        SET_ADS: function SET_ADS(state, data) {
            state.data = data;
        },
        DELETE_AD: function DELETE_AD(state, key) {
            state.data.ads.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_LOAD: function SPINER_LOAD(state) {
            state.spinner_loading = true;
        },
        SPINER_CLEAN: function SPINER_CLEAN(state) {
            state.spinner_loading = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 643 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        button_loading: false,
        spinner_loading_genres: true
    },
    actions: {

        /**
         * Get all channels
         *
         * @param {*} commit object
         * @param id int id
         */
        GET_ALL_GENRES: function GET_ALL_GENRES(_ref) {
            var commit = _ref.commit;

            axios.get('/api/admin/get/genres').then(function (response) {
                if (response.status === 200) {
                    commit('SET_GENRE', response.data.data);
                    commit('SPINER_CLEAN_GENRE');
                }
            });
        },


        /**
         * Delete channels
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_GENRE: function DELETE_GENRE(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;

            axios.delete('/api/admin/delete/genres/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_GENRE', key);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        }
    },
    mutations: {
        SET_GENRE: function SET_GENRE(state, data) {
            state.data = data;
        },
        DELETE_GENRE: function DELETE_GENRE(state, key) {
            state.data.splice(key, 1);
        },
        BUTTON_LOAD: function BUTTON_LOAD(state, data) {
            state.button_loading = data;
        },
        BUTTON_CLEAN: function BUTTON_CLEAN(state) {
            state.button_loading = false;
        },
        SPINER_CLEAN_GENRE: function SPINER_CLEAN_GENRE(state) {
            state.spinner_loading_genres = false;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 644 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var alertify = __webpack_require__(3);
var module = {
    state: {
        ListProduction: [],
        ProductionManagementLoading: true
    },
    actions: {

        /**
         * Get all production
         *
         * @param {*} commit object
         * @param id int id
         */
        LIST_PRODUCTION: function LIST_PRODUCTION(_ref, kind) {
            var commit = _ref.commit;

            commit('PRODUCTION_MANAGE_LOADING', true);
            axios.get('/api/admin/get/production').then(function (response) {
                if (response.status === 200) {
                    commit('SET_LIST_PRODUCTION', response.data.ListProduction);
                    commit('PRODUCTION_MANAGE_LOADING', false);
                }
            });
        },


        /**
         * Delete production
         *
         * @param {*} id  uuid
         * @param {*} key int
         */
        DELETE_PRODUCTION: function DELETE_PRODUCTION(_ref2, _ref3) {
            var commit = _ref2.commit;
            var id = _ref3.id,
                key = _ref3.key;

            commit('BUTTON_LOAD', id);
            axios.delete('/api/admin/delete/production/' + id).then(function (response) {
                if (response.status === 200) {
                    alertify.logPosition('top right');
                    alertify.success('Successful Delete');
                    commit('DELETE_PRODUCTION', key);
                }
            }, function (error) {
                alertify.logPosition('top right');
                alertify.error(error.response.data.message);
            });
        }
    },
    mutations: {
        SET_LIST_PRODUCTION: function SET_LIST_PRODUCTION(state, data) {
            state.ListProduction = data;
        },
        DELETE_PRODUCTION: function DELETE_PRODUCTION(state, key) {
            state.ListProduction.splice(key, 1);
        },
        PRODUCTION_MANAGE_LOADING: function PRODUCTION_MANAGE_LOADING(state, data) {
            state.ProductionManagementLoading = data;
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 645 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(11);



var alertify = __webpack_require__(3);

var module = {
    state: {
        data: [],
        upload_data: [],
        data_count: 0
    },
    mutations: {
        // Show Progress


        // API UPLOAD
        SET_UPLOAD_PROGRESS: function SET_UPLOAD_PROGRESS(state, data) {
            state.data.push(data);
        },


        // API UPLOAD
        COUNT_UPLOAD_PROGRESS: function COUNT_UPLOAD_PROGRESS(state) {
            state.data_count = state.data.length;
        },


        // UPDATE UPLOAD
        UPDATE_UPLOAD_PROGRESS_DATA: function UPDATE_UPLOAD_PROGRESS_DATA(state, data) {
            state.data[data.key] = data.data;
        },


        // SET UPLOAD DATA
        SET_PROGRESS_DATA: function SET_PROGRESS_DATA(state, data) {
            state.upload_data.push(data);
        },


        // SET UPLOAD DATA
        UPDATE_PROGRESS_DATA: function UPDATE_PROGRESS_DATA(state, data) {

            if (data.object == 'api') {
                if (data.parameter == 'progress') {
                    state.upload_data[data.key].api.progress = data.value;
                } else if (data.parameter == 'success_message') {
                    state.upload_data[data.key].api.success_message = data.value;
                } else if (data.parameter == 'error_message') {
                    state.upload_data[data.key].api.error_message = data.value;
                } else {
                    state.upload_data[data.key].api.show = data.value;
                }
            } else if (data.object == 'upload') {
                if (data.parameter == 'progress') {
                    var key = Object.keys(state.upload_data).find(function (key) {
                        return state.upload_data[key].id === data.id;
                    });
                    if (key !== undefined) {
                        state.upload_data[key].upload.progress = data.value;
                    }
                } else if (data.parameter == 'success_message') {
                    state.upload_data[data.key].upload.success_message = data.value;
                } else if (data.parameter == 'error_message') {
                    state.upload_data[data.key].upload.error_message = data.value;
                } else if (data.parameter == 'message') {
                    state.upload_data[data.key].upload.message = data.value;
                } else {
                    state.upload_data[data.key].upload.show = data.value;
                }
            }
        }
    },
    getters: {}
};
/* harmony default export */ __webpack_exports__["a"] = (module);

/***/ }),
/* 646 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function (Vue) {

    Vue.auth = {
        //Set token
        setDetails: function setDetails(email, name, image, permission) {
            localStorage.setItem('_a', JSON.stringify({
                'email': email,
                'name': name,
                'image': image,
                'permission': permission
            }));
        },


        //Get token and check it
        getUserInfo: function getUserInfo(request) {
            var data = JSON.parse(localStorage.getItem('_a'));
            if (data !== null) {
                if (request === 'permission') {
                    return data.permission;
                } else if (request === 'name') {
                    return data.name;
                } else if (request === 'image') {
                    return data.image;
                } else if (request === 'email') {
                    return data.email;
                }
            } else {
                return false;
            }
        },


        // Set image and username
        setUpdate: function setUpdate(name, image, email) {
            var data = JSON.parse(localStorage.getItem('_a'));
            if (name !== null) {
                data.name = name;
            }
            if (image !== null) {
                data.image = image;
            }
            if (email !== null) {
                data.language = email;
            }
            localStorage.setItem('_a', JSON.stringify(data)); //put the object back
        }
    };
    //make auth global 
    Object.defineProperties(Vue.prototype, {
        $auth: {
            get: function get() {
                return Vue.auth;
            }
        }
    });
});

/***/ }),
/* 647 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function (Vue) {

    // This is a global mixin, it is applied to every vue instance
    Vue.mixin({
        data: function data() {
            return {
                get sm_poster() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/posters/";
                },
                get md_poster() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/posters/";
                },
                get lg_poster() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/posters/";
                },
                get sm_backdrop() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/backdrops/";
                },
                get md_backdrop() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/backdrops/";
                },
                get lg_backdrop() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/backdrops/";
                },
                get sm_cast() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/casts/";
                },
                get md_cast() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/casts/";
                },
                get lg_cast() {
                    return "http://d33vbryzz6e7jd.cloudfront.net/casts/";
                }
            };
        }
    });
});

/***/ }),
/* 648 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(jQuery) {function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function () {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

var Connector = /*#__PURE__*/function () {
  /**
   * Create a new class instance.
   */
  function Connector(options) {
    _classCallCheck(this, Connector);

    /**
     * Default connector options.
     */
    this._defaultOptions = {
      auth: {
        headers: {}
      },
      authEndpoint: '/broadcasting/auth',
      broadcaster: 'pusher',
      csrfToken: null,
      host: null,
      key: null,
      namespace: 'App.Events'
    };
    this.setOptions(options);
    this.connect();
  }
  /**
   * Merge the custom options with the defaults.
   */


  _createClass(Connector, [{
    key: "setOptions",
    value: function setOptions(options) {
      this.options = _extends(this._defaultOptions, options);

      if (this.csrfToken()) {
        this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();
      }

      return options;
    }
    /**
     * Extract the CSRF token from the page.
     */

  }, {
    key: "csrfToken",
    value: function csrfToken() {
      var selector;

      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {
        return window['Laravel'].csrfToken;
      } else if (this.options.csrfToken) {
        return this.options.csrfToken;
      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name="csrf-token"]'))) {
        return selector.getAttribute('content');
      }

      return null;
    }
  }]);

  return Connector;
}();

/**
 * This class represents a basic channel.
 */
var Channel = /*#__PURE__*/function () {
  function Channel() {
    _classCallCheck(this, Channel);
  }

  _createClass(Channel, [{
    key: "listenForWhisper",

    /**
     * Listen for a whisper event on the channel instance.
     */
    value: function listenForWhisper(event, callback) {
      return this.listen('.client-' + event, callback);
    }
    /**
     * Listen for an event on the channel instance.
     */

  }, {
    key: "notification",
    value: function notification(callback) {
      return this.listen('.Illuminate\\Notifications\\Events\\BroadcastNotificationCreated', callback);
    }
    /**
     * Stop listening for a whisper event on the channel instance.
     */

  }, {
    key: "stopListeningForWhisper",
    value: function stopListeningForWhisper(event, callback) {
      return this.stopListening('.client-' + event, callback);
    }
  }]);

  return Channel;
}();

/**
 * Event name formatter
 */
var EventFormatter = /*#__PURE__*/function () {
  /**
   * Create a new class instance.
   */
  function EventFormatter(namespace) {
    _classCallCheck(this, EventFormatter);

    this.setNamespace(namespace);
  }
  /**
   * Format the given event name.
   */


  _createClass(EventFormatter, [{
    key: "format",
    value: function format(event) {
      if (event.charAt(0) === '.' || event.charAt(0) === '\\') {
        return event.substr(1);
      } else if (this.namespace) {
        event = this.namespace + '.' + event;
      }

      return event.replace(/\./g, '\\');
    }
    /**
     * Set the event namespace.
     */

  }, {
    key: "setNamespace",
    value: function setNamespace(value) {
      this.namespace = value;
    }
  }]);

  return EventFormatter;
}();

/**
 * This class represents a Pusher channel.
 */

var PusherChannel = /*#__PURE__*/function (_Channel) {
  _inherits(PusherChannel, _Channel);

  var _super = _createSuper(PusherChannel);

  /**
   * Create a new class instance.
   */
  function PusherChannel(pusher, name, options) {
    var _this;

    _classCallCheck(this, PusherChannel);

    _this = _super.call(this);
    _this.name = name;
    _this.pusher = pusher;
    _this.options = options;
    _this.eventFormatter = new EventFormatter(_this.options.namespace);

    _this.subscribe();

    return _this;
  }
  /**
   * Subscribe to a Pusher channel.
   */


  _createClass(PusherChannel, [{
    key: "subscribe",
    value: function subscribe() {
      this.subscription = this.pusher.subscribe(this.name);
    }
    /**
     * Unsubscribe from a Pusher channel.
     */

  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      this.pusher.unsubscribe(this.name);
    }
    /**
     * Listen for an event on the channel instance.
     */

  }, {
    key: "listen",
    value: function listen(event, callback) {
      this.on(this.eventFormatter.format(event), callback);
      return this;
    }
    /**
     * Stop listening for an event on the channel instance.
     */

  }, {
    key: "stopListening",
    value: function stopListening(event, callback) {
      if (callback) {
        this.subscription.unbind(this.eventFormatter.format(event), callback);
      } else {
        this.subscription.unbind(this.eventFormatter.format(event));
      }

      return this;
    }
    /**
     * Register a callback to be called anytime a subscription succeeds.
     */

  }, {
    key: "subscribed",
    value: function subscribed(callback) {
      this.on('pusher:subscription_succeeded', function () {
        callback();
      });
      return this;
    }
    /**
     * Register a callback to be called anytime a subscription error occurs.
     */

  }, {
    key: "error",
    value: function error(callback) {
      this.on('pusher:subscription_error', function (status) {
        callback(status);
      });
      return this;
    }
    /**
     * Bind a channel to an event.
     */

  }, {
    key: "on",
    value: function on(event, callback) {
      this.subscription.bind(event, callback);
      return this;
    }
  }]);

  return PusherChannel;
}(Channel);

/**
 * This class represents a Pusher private channel.
 */

var PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {
  _inherits(PusherPrivateChannel, _PusherChannel);

  var _super = _createSuper(PusherPrivateChannel);

  function PusherPrivateChannel() {
    _classCallCheck(this, PusherPrivateChannel);

    return _super.apply(this, arguments);
  }

  _createClass(PusherPrivateChannel, [{
    key: "whisper",

    /**
     * Trigger client event on the channel.
     */
    value: function whisper(eventName, data) {
      this.pusher.channels.channels[this.name].trigger("client-".concat(eventName), data);
      return this;
    }
  }]);

  return PusherPrivateChannel;
}(PusherChannel);

/**
 * This class represents a Pusher private channel.
 */

var PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {
  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);

  var _super = _createSuper(PusherEncryptedPrivateChannel);

  function PusherEncryptedPrivateChannel() {
    _classCallCheck(this, PusherEncryptedPrivateChannel);

    return _super.apply(this, arguments);
  }

  _createClass(PusherEncryptedPrivateChannel, [{
    key: "whisper",

    /**
     * Trigger client event on the channel.
     */
    value: function whisper(eventName, data) {
      this.pusher.channels.channels[this.name].trigger("client-".concat(eventName), data);
      return this;
    }
  }]);

  return PusherEncryptedPrivateChannel;
}(PusherChannel);

/**
 * This class represents a Pusher presence channel.
 */

var PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {
  _inherits(PusherPresenceChannel, _PusherChannel);

  var _super = _createSuper(PusherPresenceChannel);

  function PusherPresenceChannel() {
    _classCallCheck(this, PusherPresenceChannel);

    return _super.apply(this, arguments);
  }

  _createClass(PusherPresenceChannel, [{
    key: "here",

    /**
     * Register a callback to be called anytime the member list changes.
     */
    value: function here(callback) {
      this.on('pusher:subscription_succeeded', function (data) {
        callback(Object.keys(data.members).map(function (k) {
          return data.members[k];
        }));
      });
      return this;
    }
    /**
     * Listen for someone joining the channel.
     */

  }, {
    key: "joining",
    value: function joining(callback) {
      this.on('pusher:member_added', function (member) {
        callback(member.info);
      });
      return this;
    }
    /**
     * Listen for someone leaving the channel.
     */

  }, {
    key: "leaving",
    value: function leaving(callback) {
      this.on('pusher:member_removed', function (member) {
        callback(member.info);
      });
      return this;
    }
    /**
     * Trigger client event on the channel.
     */

  }, {
    key: "whisper",
    value: function whisper(eventName, data) {
      this.pusher.channels.channels[this.name].trigger("client-".concat(eventName), data);
      return this;
    }
  }]);

  return PusherPresenceChannel;
}(PusherChannel);

/**
 * This class represents a Socket.io channel.
 */

var SocketIoChannel = /*#__PURE__*/function (_Channel) {
  _inherits(SocketIoChannel, _Channel);

  var _super = _createSuper(SocketIoChannel);

  /**
   * Create a new class instance.
   */
  function SocketIoChannel(socket, name, options) {
    var _this;

    _classCallCheck(this, SocketIoChannel);

    _this = _super.call(this);
    /**
     * The event callbacks applied to the socket.
     */

    _this.events = {};
    /**
     * User supplied callbacks for events on this channel.
     */

    _this.listeners = {};
    _this.name = name;
    _this.socket = socket;
    _this.options = options;
    _this.eventFormatter = new EventFormatter(_this.options.namespace);

    _this.subscribe();

    return _this;
  }
  /**
   * Subscribe to a Socket.io channel.
   */


  _createClass(SocketIoChannel, [{
    key: "subscribe",
    value: function subscribe() {
      this.socket.emit('subscribe', {
        channel: this.name,
        auth: this.options.auth || {}
      });
    }
    /**
     * Unsubscribe from channel and ubind event callbacks.
     */

  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      this.unbind();
      this.socket.emit('unsubscribe', {
        channel: this.name,
        auth: this.options.auth || {}
      });
    }
    /**
     * Listen for an event on the channel instance.
     */

  }, {
    key: "listen",
    value: function listen(event, callback) {
      this.on(this.eventFormatter.format(event), callback);
      return this;
    }
    /**
     * Stop listening for an event on the channel instance.
     */

  }, {
    key: "stopListening",
    value: function stopListening(event, callback) {
      this.unbindEvent(this.eventFormatter.format(event), callback);
      return this;
    }
    /**
     * Register a callback to be called anytime a subscription succeeds.
     */

  }, {
    key: "subscribed",
    value: function subscribed(callback) {
      this.on('connect', function (socket) {
        callback(socket);
      });
      return this;
    }
    /**
     * Register a callback to be called anytime an error occurs.
     */

  }, {
    key: "error",
    value: function error(callback) {
      return this;
    }
    /**
     * Bind the channel's socket to an event and store the callback.
     */

  }, {
    key: "on",
    value: function on(event, callback) {
      var _this2 = this;

      this.listeners[event] = this.listeners[event] || [];

      if (!this.events[event]) {
        this.events[event] = function (channel, data) {
          if (_this2.name === channel && _this2.listeners[event]) {
            _this2.listeners[event].forEach(function (cb) {
              return cb(data);
            });
          }
        };

        this.socket.on(event, this.events[event]);
      }

      this.listeners[event].push(callback);
      return this;
    }
    /**
     * Unbind the channel's socket from all stored event callbacks.
     */

  }, {
    key: "unbind",
    value: function unbind() {
      var _this3 = this;

      Object.keys(this.events).forEach(function (event) {
        _this3.unbindEvent(event);
      });
    }
    /**
     * Unbind the listeners for the given event.
     */

  }, {
    key: "unbindEvent",
    value: function unbindEvent(event, callback) {
      this.listeners[event] = this.listeners[event] || [];

      if (callback) {
        this.listeners[event] = this.listeners[event].filter(function (cb) {
          return cb !== callback;
        });
      }

      if (!callback || this.listeners[event].length === 0) {
        if (this.events[event]) {
          this.socket.removeListener(event, this.events[event]);
          delete this.events[event];
        }

        delete this.listeners[event];
      }
    }
  }]);

  return SocketIoChannel;
}(Channel);

/**
 * This class represents a Socket.io private channel.
 */

var SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {
  _inherits(SocketIoPrivateChannel, _SocketIoChannel);

  var _super = _createSuper(SocketIoPrivateChannel);

  function SocketIoPrivateChannel() {
    _classCallCheck(this, SocketIoPrivateChannel);

    return _super.apply(this, arguments);
  }

  _createClass(SocketIoPrivateChannel, [{
    key: "whisper",

    /**
     * Trigger client event on the channel.
     */
    value: function whisper(eventName, data) {
      this.socket.emit('client event', {
        channel: this.name,
        event: "client-".concat(eventName),
        data: data
      });
      return this;
    }
  }]);

  return SocketIoPrivateChannel;
}(SocketIoChannel);

/**
 * This class represents a Socket.io presence channel.
 */

var SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {
  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);

  var _super = _createSuper(SocketIoPresenceChannel);

  function SocketIoPresenceChannel() {
    _classCallCheck(this, SocketIoPresenceChannel);

    return _super.apply(this, arguments);
  }

  _createClass(SocketIoPresenceChannel, [{
    key: "here",

    /**
     * Register a callback to be called anytime the member list changes.
     */
    value: function here(callback) {
      this.on('presence:subscribed', function (members) {
        callback(members.map(function (m) {
          return m.user_info;
        }));
      });
      return this;
    }
    /**
     * Listen for someone joining the channel.
     */

  }, {
    key: "joining",
    value: function joining(callback) {
      this.on('presence:joining', function (member) {
        return callback(member.user_info);
      });
      return this;
    }
    /**
     * Listen for someone leaving the channel.
     */

  }, {
    key: "leaving",
    value: function leaving(callback) {
      this.on('presence:leaving', function (member) {
        return callback(member.user_info);
      });
      return this;
    }
  }]);

  return SocketIoPresenceChannel;
}(SocketIoPrivateChannel);

/**
 * This class represents a null channel.
 */

var NullChannel = /*#__PURE__*/function (_Channel) {
  _inherits(NullChannel, _Channel);

  var _super = _createSuper(NullChannel);

  function NullChannel() {
    _classCallCheck(this, NullChannel);

    return _super.apply(this, arguments);
  }

  _createClass(NullChannel, [{
    key: "subscribe",

    /**
     * Subscribe to a channel.
     */
    value: function subscribe() {} //

    /**
     * Unsubscribe from a channel.
     */

  }, {
    key: "unsubscribe",
    value: function unsubscribe() {} //

    /**
     * Listen for an event on the channel instance.
     */

  }, {
    key: "listen",
    value: function listen(event, callback) {
      return this;
    }
    /**
     * Stop listening for an event on the channel instance.
     */

  }, {
    key: "stopListening",
    value: function stopListening(event, callback) {
      return this;
    }
    /**
     * Register a callback to be called anytime a subscription succeeds.
     */

  }, {
    key: "subscribed",
    value: function subscribed(callback) {
      return this;
    }
    /**
     * Register a callback to be called anytime an error occurs.
     */

  }, {
    key: "error",
    value: function error(callback) {
      return this;
    }
    /**
     * Bind a channel to an event.
     */

  }, {
    key: "on",
    value: function on(event, callback) {
      return this;
    }
  }]);

  return NullChannel;
}(Channel);

/**
 * This class represents a null private channel.
 */

var NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {
  _inherits(NullPrivateChannel, _NullChannel);

  var _super = _createSuper(NullPrivateChannel);

  function NullPrivateChannel() {
    _classCallCheck(this, NullPrivateChannel);

    return _super.apply(this, arguments);
  }

  _createClass(NullPrivateChannel, [{
    key: "whisper",

    /**
     * Trigger client event on the channel.
     */
    value: function whisper(eventName, data) {
      return this;
    }
  }]);

  return NullPrivateChannel;
}(NullChannel);

/**
 * This class represents a null presence channel.
 */

var NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {
  _inherits(NullPresenceChannel, _NullChannel);

  var _super = _createSuper(NullPresenceChannel);

  function NullPresenceChannel() {
    _classCallCheck(this, NullPresenceChannel);

    return _super.apply(this, arguments);
  }

  _createClass(NullPresenceChannel, [{
    key: "here",

    /**
     * Register a callback to be called anytime the member list changes.
     */
    value: function here(callback) {
      return this;
    }
    /**
     * Listen for someone joining the channel.
     */

  }, {
    key: "joining",
    value: function joining(callback) {
      return this;
    }
    /**
     * Listen for someone leaving the channel.
     */

  }, {
    key: "leaving",
    value: function leaving(callback) {
      return this;
    }
    /**
     * Trigger client event on the channel.
     */

  }, {
    key: "whisper",
    value: function whisper(eventName, data) {
      return this;
    }
  }]);

  return NullPresenceChannel;
}(NullChannel);

/**
 * This class creates a connector to Pusher.
 */

var PusherConnector = /*#__PURE__*/function (_Connector) {
  _inherits(PusherConnector, _Connector);

  var _super = _createSuper(PusherConnector);

  function PusherConnector() {
    var _this;

    _classCallCheck(this, PusherConnector);

    _this = _super.apply(this, arguments);
    /**
     * All of the subscribed channel names.
     */

    _this.channels = {};
    return _this;
  }
  /**
   * Create a fresh Pusher connection.
   */


  _createClass(PusherConnector, [{
    key: "connect",
    value: function connect() {
      if (typeof this.options.client !== 'undefined') {
        this.pusher = this.options.client;
      } else {
        this.pusher = new Pusher(this.options.key, this.options);
      }
    }
    /**
     * Listen for an event on a channel instance.
     */

  }, {
    key: "listen",
    value: function listen(name, event, callback) {
      return this.channel(name).listen(event, callback);
    }
    /**
     * Get a channel instance by name.
     */

  }, {
    key: "channel",
    value: function channel(name) {
      if (!this.channels[name]) {
        this.channels[name] = new PusherChannel(this.pusher, name, this.options);
      }

      return this.channels[name];
    }
    /**
     * Get a private channel instance by name.
     */

  }, {
    key: "privateChannel",
    value: function privateChannel(name) {
      if (!this.channels['private-' + name]) {
        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);
      }

      return this.channels['private-' + name];
    }
    /**
     * Get a private encrypted channel instance by name.
     */

  }, {
    key: "encryptedPrivateChannel",
    value: function encryptedPrivateChannel(name) {
      if (!this.channels['private-encrypted-' + name]) {
        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);
      }

      return this.channels['private-encrypted-' + name];
    }
    /**
     * Get a presence channel instance by name.
     */

  }, {
    key: "presenceChannel",
    value: function presenceChannel(name) {
      if (!this.channels['presence-' + name]) {
        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);
      }

      return this.channels['presence-' + name];
    }
    /**
     * Leave the given channel, as well as its private and presence variants.
     */

  }, {
    key: "leave",
    value: function leave(name) {
      var _this2 = this;

      var channels = [name, 'private-' + name, 'presence-' + name];
      channels.forEach(function (name, index) {
        _this2.leaveChannel(name);
      });
    }
    /**
     * Leave the given channel.
     */

  }, {
    key: "leaveChannel",
    value: function leaveChannel(name) {
      if (this.channels[name]) {
        this.channels[name].unsubscribe();
        delete this.channels[name];
      }
    }
    /**
     * Get the socket ID for the connection.
     */

  }, {
    key: "socketId",
    value: function socketId() {
      return this.pusher.connection.socket_id;
    }
    /**
     * Disconnect Pusher connection.
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      this.pusher.disconnect();
    }
  }]);

  return PusherConnector;
}(Connector);

/**
 * This class creates a connnector to a Socket.io server.
 */

var SocketIoConnector = /*#__PURE__*/function (_Connector) {
  _inherits(SocketIoConnector, _Connector);

  var _super = _createSuper(SocketIoConnector);

  function SocketIoConnector() {
    var _this;

    _classCallCheck(this, SocketIoConnector);

    _this = _super.apply(this, arguments);
    /**
     * All of the subscribed channel names.
     */

    _this.channels = {};
    return _this;
  }
  /**
   * Create a fresh Socket.io connection.
   */


  _createClass(SocketIoConnector, [{
    key: "connect",
    value: function connect() {
      var _this2 = this;

      var io = this.getSocketIO();
      this.socket = io(this.options.host, this.options);
      this.socket.on('reconnect', function () {
        Object.values(_this2.channels).forEach(function (channel) {
          channel.subscribe();
        });
      });
      return this.socket;
    }
    /**
     * Get socket.io module from global scope or options.
     */

  }, {
    key: "getSocketIO",
    value: function getSocketIO() {
      if (typeof this.options.client !== 'undefined') {
        return this.options.client;
      }

      if (typeof io !== 'undefined') {
        return io;
      }

      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');
    }
    /**
     * Listen for an event on a channel instance.
     */

  }, {
    key: "listen",
    value: function listen(name, event, callback) {
      return this.channel(name).listen(event, callback);
    }
    /**
     * Get a channel instance by name.
     */

  }, {
    key: "channel",
    value: function channel(name) {
      if (!this.channels[name]) {
        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);
      }

      return this.channels[name];
    }
    /**
     * Get a private channel instance by name.
     */

  }, {
    key: "privateChannel",
    value: function privateChannel(name) {
      if (!this.channels['private-' + name]) {
        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);
      }

      return this.channels['private-' + name];
    }
    /**
     * Get a presence channel instance by name.
     */

  }, {
    key: "presenceChannel",
    value: function presenceChannel(name) {
      if (!this.channels['presence-' + name]) {
        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);
      }

      return this.channels['presence-' + name];
    }
    /**
     * Leave the given channel, as well as its private and presence variants.
     */

  }, {
    key: "leave",
    value: function leave(name) {
      var _this3 = this;

      var channels = [name, 'private-' + name, 'presence-' + name];
      channels.forEach(function (name) {
        _this3.leaveChannel(name);
      });
    }
    /**
     * Leave the given channel.
     */

  }, {
    key: "leaveChannel",
    value: function leaveChannel(name) {
      if (this.channels[name]) {
        this.channels[name].unsubscribe();
        delete this.channels[name];
      }
    }
    /**
     * Get the socket ID for the connection.
     */

  }, {
    key: "socketId",
    value: function socketId() {
      return this.socket.id;
    }
    /**
     * Disconnect Socketio connection.
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      this.socket.disconnect();
    }
  }]);

  return SocketIoConnector;
}(Connector);

/**
 * This class creates a null connector.
 */

var NullConnector = /*#__PURE__*/function (_Connector) {
  _inherits(NullConnector, _Connector);

  var _super = _createSuper(NullConnector);

  function NullConnector() {
    var _this;

    _classCallCheck(this, NullConnector);

    _this = _super.apply(this, arguments);
    /**
     * All of the subscribed channel names.
     */

    _this.channels = {};
    return _this;
  }
  /**
   * Create a fresh connection.
   */


  _createClass(NullConnector, [{
    key: "connect",
    value: function connect() {} //

    /**
     * Listen for an event on a channel instance.
     */

  }, {
    key: "listen",
    value: function listen(name, event, callback) {
      return new NullChannel();
    }
    /**
     * Get a channel instance by name.
     */

  }, {
    key: "channel",
    value: function channel(name) {
      return new NullChannel();
    }
    /**
     * Get a private channel instance by name.
     */

  }, {
    key: "privateChannel",
    value: function privateChannel(name) {
      return new NullPrivateChannel();
    }
    /**
     * Get a presence channel instance by name.
     */

  }, {
    key: "presenceChannel",
    value: function presenceChannel(name) {
      return new NullPresenceChannel();
    }
    /**
     * Leave the given channel, as well as its private and presence variants.
     */

  }, {
    key: "leave",
    value: function leave(name) {} //

    /**
     * Leave the given channel.
     */

  }, {
    key: "leaveChannel",
    value: function leaveChannel(name) {} //

    /**
     * Get the socket ID for the connection.
     */

  }, {
    key: "socketId",
    value: function socketId() {
      return 'fake-socket-id';
    }
    /**
     * Disconnect the connection.
     */

  }, {
    key: "disconnect",
    value: function disconnect() {//
    }
  }]);

  return NullConnector;
}(Connector);

/**
 * This class is the primary API for interacting with broadcasting.
 */

var Echo = /*#__PURE__*/function () {
  /**
   * Create a new class instance.
   */
  function Echo(options) {
    _classCallCheck(this, Echo);

    this.options = options;
    this.connect();

    if (!this.options.withoutInterceptors) {
      this.registerInterceptors();
    }
  }
  /**
   * Get a channel instance by name.
   */


  _createClass(Echo, [{
    key: "channel",
    value: function channel(_channel) {
      return this.connector.channel(_channel);
    }
    /**
     * Create a new connection.
     */

  }, {
    key: "connect",
    value: function connect() {
      if (this.options.broadcaster == 'pusher') {
        this.connector = new PusherConnector(this.options);
      } else if (this.options.broadcaster == 'socket.io') {
        this.connector = new SocketIoConnector(this.options);
      } else if (this.options.broadcaster == 'null') {
        this.connector = new NullConnector(this.options);
      } else if (typeof this.options.broadcaster == 'function') {
        this.connector = new this.options.broadcaster(this.options);
      }
    }
    /**
     * Disconnect from the Echo server.
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      this.connector.disconnect();
    }
    /**
     * Get a presence channel instance by name.
     */

  }, {
    key: "join",
    value: function join(channel) {
      return this.connector.presenceChannel(channel);
    }
    /**
     * Leave the given channel, as well as its private and presence variants.
     */

  }, {
    key: "leave",
    value: function leave(channel) {
      this.connector.leave(channel);
    }
    /**
     * Leave the given channel.
     */

  }, {
    key: "leaveChannel",
    value: function leaveChannel(channel) {
      this.connector.leaveChannel(channel);
    }
    /**
     * Listen for an event on a channel instance.
     */

  }, {
    key: "listen",
    value: function listen(channel, event, callback) {
      return this.connector.listen(channel, event, callback);
    }
    /**
     * Get a private channel instance by name.
     */

  }, {
    key: "private",
    value: function _private(channel) {
      return this.connector.privateChannel(channel);
    }
    /**
     * Get a private encrypted channel instance by name.
     */

  }, {
    key: "encryptedPrivate",
    value: function encryptedPrivate(channel) {
      return this.connector.encryptedPrivateChannel(channel);
    }
    /**
     * Get the Socket ID for the connection.
     */

  }, {
    key: "socketId",
    value: function socketId() {
      return this.connector.socketId();
    }
    /**
     * Register 3rd party request interceptiors. These are used to automatically
     * send a connections socket id to a Laravel app with a X-Socket-Id header.
     */

  }, {
    key: "registerInterceptors",
    value: function registerInterceptors() {
      if (typeof Vue === 'function' && Vue.http) {
        this.registerVueRequestInterceptor();
      }

      if (typeof axios === 'function') {
        this.registerAxiosRequestInterceptor();
      }

      if (typeof jQuery === 'function') {
        this.registerjQueryAjaxSetup();
      }
    }
    /**
     * Register a Vue HTTP interceptor to add the X-Socket-ID header.
     */

  }, {
    key: "registerVueRequestInterceptor",
    value: function registerVueRequestInterceptor() {
      var _this = this;

      Vue.http.interceptors.push(function (request, next) {
        if (_this.socketId()) {
          request.headers.set('X-Socket-ID', _this.socketId());
        }

        next();
      });
    }
    /**
     * Register an Axios HTTP interceptor to add the X-Socket-ID header.
     */

  }, {
    key: "registerAxiosRequestInterceptor",
    value: function registerAxiosRequestInterceptor() {
      var _this2 = this;

      axios.interceptors.request.use(function (config) {
        if (_this2.socketId()) {
          config.headers['X-Socket-Id'] = _this2.socketId();
        }

        return config;
      });
    }
    /**
     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.
     */

  }, {
    key: "registerjQueryAjaxSetup",
    value: function registerjQueryAjaxSetup() {
      var _this3 = this;

      if (typeof jQuery.ajax != 'undefined') {
        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {
          if (_this3.socketId()) {
            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());
          }
        });
      }
    }
  }]);

  return Echo;
}();

/* harmony default export */ __webpack_exports__["a"] = (Echo);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))

/***/ })
],[457]);